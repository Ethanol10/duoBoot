0000000000d2a160 B AllProjectsInfos
00000000002e2248 T CreateHeatProcessorInstance
0000000000ca0114 D PS_CFG_DATA_Admiral
0000000000c96094 D PS_CFG_DATA_Andromeda
0000000000c45c94 D PS_CFG_DATA_Arcata
0000000000d0e694 D PS_CFG_DATA_Athos
0000000000cdc414 D PS_CFG_DATA_Beowulf
0000000000caa194 D PS_CFG_DATA_Bukhansan
0000000000c77f14 D PS_CFG_DATA_Carina
0000000000c81f94 D PS_CFG_DATA_CarinaG6
0000000000c3bc14 D PS_CFG_DATA_Caspar
0000000000cf0514 D PS_CFG_DATA_Cayucos
0000000000c6de94 D PS_CFG_DATA_DaedalusE
0000000000c63e14 D PS_CFG_DATA_DaedalusW
0000000000cd2394 D PS_CFG_DATA_Epsilon
0000000000ce6494 D PS_CFG_DATA_Grendel
0000000000cb4214 D PS_CFG_DATA_HavenG6
0000000000cbe294 D PS_CFG_DATA_Juventas
0000000000c31b94 D PS_CFG_DATA_Leto
0000000000c4fd14 D PS_CFG_DATA_Lucca
0000000000cfa594 D PS_CFG_DATA_Tinos
0000000000d04614 D PS_CFG_DATA_TinosG6
0000000000cc8314 D PS_CFG_DATA_Zephyr
0000000000c59d94 D PS_CFG_DATA_Zeta
0000000000c8c014 D PS_CFG_DATA_Zeus
0000000000c31b6c D TouchModeBySystemState
                 U _Unwind_Resume
000000000035d4ec T GetDegrees(double)
000000000035d4cc T GetRadians(double)
00000000005f2c24 T MicroToSoc(unsigned int, float)
00000000005eaa2c T CalcDistance2(float const*, float const*)
00000000005eaa44 T CalcDistancePoints(float const*, float const*)
000000000039efd0 T GenericCliSetToArray(void*, void*, unsigned int)
00000000002d8e48 W _Z20TraceLoggingWriteExeIJEENSt3__19enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeENS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiSB_DpOS2_
00000000002d4a94 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEEENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000003a1900 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERA120_KcEENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOSB_
00000000002d8990 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002eac90 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002d6268 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002d6840 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002ec420 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
000000000034fe14 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002db520 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002d91f4 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002f17e0 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002f498c W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000002f9498 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
000000000064e830 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000006616e4 W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
00000000003954fc W _Z20TraceLoggingWriteExeIJNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EENS0_9enable_ifIXsr10all_stringIDpT_EE5valueEvE4typeES6_iS6_DpOS8_
000000000039ee04 T GenericCliGetFromArray(void*, void*, unsigned int)
000000000039ece4 T GenericCliFunctionGet1Byte(unsigned int, void*, void*)
000000000039ecf0 T GenericCliFunctionSet1Byte(unsigned int, void*, void*)
000000000039ecfc T GenericCliFunctionGet2Bytes(unsigned int, void*, void*)
000000000039ed14 T GenericCliFunctionGet4Bytes(unsigned int, void*, void*)
000000000039dac8 T GenericCliFunctionOperation(unsigned int, void*, void*)
000000000039ed08 T GenericCliFunctionSet2Bytes(unsigned int, void*, void*)
000000000039ed20 T GenericCliFunctionSet4Bytes(unsigned int, void*, void*)
00000000002e24ac T CreatePersistentStorageEosInstance(char const*)
000000000039e19c T GenericCliFunctionHandleHingeAngle(void*, unsigned int)
000000000039e7dc T GenericCliFunctionHandleOffsetPoly(void*, unsigned int)
000000000039eef8 T GenericCliFunctionSetTo4BytesArray(unsigned int, void*, void*)
000000000039ed2c T GenericCliFunctionGetFrom4BytesArray(unsigned int, void*, void*)
000000000039e270 T GenericCliFunctionHandleDisplayState(void*, unsigned int)
000000000039e424 T GenericCliFunctionHandleTouchReports(void*, unsigned int)
000000000039df04 T GenericCliFunctionHandleBorderPenalty(void*, unsigned int)
000000000039dda0 T GenericCliFunctionHandlePenIirInHover(void*, unsigned int)
000000000039f0c4 T GenericCliGetAddressAndSizeForRawData(unsigned char*, unsigned int*, unsigned int*)
000000000039dfe0 T GenericCliFunctionHandlePanelAlignment(void*, unsigned int)
000000000039e344 T GenericCliFunctionHandleStitchingState(void*, unsigned int)
000000000039f0d8 T GenericCliGetActualMemoryOffsetInArray(unsigned char*, unsigned int*, unsigned int)
000000000039de20 T GenericCliFunctionHandleTipEdgeComArray(void*, unsigned int)
000000000039e6e8 T GenericCliFunctionHandleDebugTouchedAnts(void*, unsigned int)
000000000039e514 T GenericCliFunctionHandlePenPositionOffset(void*)
000000000039ea6c T GenericCliFunctionHandleTelemetryInterval(void*, unsigned int)
000000000039eb48 T GenericCliFunctionHandleSetSmoothingIirAlpha(void*, unsigned int)
000000000039e570 T GenericCliFunctionHandleIsTouchEnableRegistry(void*, unsigned int)
000000000039ebcc T GenericCliFunctionHandlePenJitterRestrictorTh(void*, unsigned int)
000000000039e994 T GenericCliFunctionHandleBorderZfiPenVoltageRatio(void*, unsigned int)
000000000039e8b8 T GenericCliFunctionHandleAzimuthBasedCorrectionFactor(void*, unsigned int)
00000000005ea9f4 T Sqrt2(float)
000000000039ecac T GenericCliFunctionHandlePenJitterRestrictorActivationCounter(void*, unsigned int)
0000000000d1b4f8 V guard variable for StatsManager::Instance()::instance
0000000000d1a2c8 V guard variable for HeatAdaptorEos::Instance()::mInstance
0000000000d1d610 V guard variable for MwDebugManager::Instance()::instance
0000000000d1a2a8 V guard variable for PostureManager::Instance()::mInstance
0000000000d1a630 V guard variable for FeedbackManager::Instance()::instance
0000000000d2a0d8 V guard variable for CnmHandlingManager::Instance()::instance
0000000000d20b40 V guard variable for PenProcessingManager::Instance()::instance
0000000000d1a240 V guard variable for ConfigurationDataBase::Instance()::instance
0000000000d28310 V guard variable for PanelAlignmentManager::Instance()::instance
0000000000d1a2d8 V guard variable for HidDescriptorParserEos::Instance()::mInstance
0000000000d2a110 V guard variable for TouchProcessingSharedData::Instance()::instance
0000000000d2ecf0 V guard variable for Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*)::m_cacheSizes
0000000000d28250 V guard variable for Parser::Instance()::mInstance
0000000000d21680 V guard variable for Reporter::Instance()::instance
0000000000d2e290 V guard variable for Hungarian::Instance()::instance
000000000069d7fc T LineHelper::AddPointsInRange(std::__1::queue<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::deque<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > > >&, int)
000000000069d520 T LineHelper::SetLineFromPoints(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>)
000000000069d5b8 T LineHelper::SetLineFromPoints(float*, float*)
000000000069d728 T LineHelper::GetCoordinatesFromX(float)
000000000069d78c T LineHelper::GetCoordinatesFromY(float)
000000000069d62c T LineHelper::GetCoordinateOnBorder(eBORDER_STATUS)
00000000003a6084 T NoiseStats::SendTelemetryInternal(int)
00000000003a627c T NoiseStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003a6268 T NoiseStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000005ea27c T AspectRatio::SetConfigurationBySmc(unsigned char, float, float)
00000000005ea960 T AspectRatio::ConvertCoordinateByRatio(ReportInformation*, unsigned char*)
00000000005e9dac T AspectRatio::Init(unsigned int, unsigned int)
0000000000663f50 T PenPosition::FindPosition(PenPositionOut&, PenPositionIn&)
000000000067eec8 T PenPosition::ForcePucFail(PenPositionIn&, unsigned char)
0000000000674610 T PenPosition::CalculateTilt(ePEN_VENDOR)
0000000000663d00 T PenPosition::InitPenParams(ePEN_MSFT_COM_PEN_VENDORS)
0000000000674608 T PenPosition::CalcMagPow0_25(double)
000000000066d490 T PenPosition::RingValidation(PenPositionIn&, double*, double*, signed char*, signed char*)
000000000067dce4 T PenPosition::RunAuxCleaning(PenPositionIn const&, XgBoostLogicAuxiliaryData&, eAXIS, ePEN_TRANSMITTER, unsigned char, unsigned char)
000000000067df18 T PenPosition::RunCnrCleaning(PenPositionIn const&, XgBoostLogicAuxiliaryData&, eAXIS, ePEN_TRANSMITTER, unsigned char, unsigned char, signed char)
000000000067e564 T PenPosition::CleanCnrFromAnt(PenDftResult*, double, double, signed char)
000000000066af80 T PenPosition::IsBorderPredict(PenPositionIn const&)
000000000066f72c T PenPosition::RunXgBoostLogic(PenPositionIn&, XgBoostLogicAuxiliaryData&, double (*) [2], bool, bool)
0000000000666ebc T PenPosition::UpdatePucStatus(PenPositionIn&)
0000000000674b94 T PenPosition::CalculateAzimuth(double, double)
0000000000674564 T PenPosition::FindMaxIndBySum3(double*)
0000000000674b50 T PenPosition::Multiply2Vectors(double*, float*, unsigned short)
0000000000675094 T PenPosition::Multiply2Vectors(double*, double*, unsigned short)
0000000000675050 T PenPosition::Multiply2Vectors(float*, float*, unsigned short)
0000000000673dbc T PenPosition::RunDataMirroring(eAXIS, signed char)
000000000066b260 T PenPosition::CalcComInSeamline(PenPositionOut&, PenPositionIn&)
0000000000667ed8 T PenPosition::CalculateHoverCoM(PenPositionIn&, float&, float&, AllPenProcessDft*)
000000000066b1c4 T PenPosition::IsPenPositionOnBP(float, float, unsigned char)
000000000066cb84 T PenPosition::SetBordersPenMode(PenPositionOut&, double*, signed char*, double&, double&, bool, eSMOOTHING_PEN_STATE)
000000000066cb08 T PenPosition::CalculateBorderCoM(double&, double&, PenPositionIn const&, signed char, signed char)
000000000066ccd4 T PenPosition::CalculateCentroids(double*, signed char*, bool, bool, ePEN_PROCESS_TYPE, PenVendorConverterEntry const*)
0000000000663f28 T PenPosition::InitPenPositionOut(PenPositionOut&)
000000000066d5ec T PenPosition::RunPreLsHeuristics(PenPositionIn&, signed char*, bool)
000000000067e5b4 T PenPosition::CalcTipFeaturesMags(double (*) [5], double (*) [9], eAXIS, signed char)
0000000000671528 T PenPosition::CalcTipFeaturesMags(double (*) [5], unsigned int (*) [9])
00000000006725fc T PenPosition::IsAntennaNearBorder(eAXIS, unsigned char, unsigned char, ePEN_BORDER*)
000000000066c404 T PenPosition::IsNearBorderPredict(PenPositionIn const&)
000000000066e910 T PenPosition::RunPreLsSignalTrend(unsigned char, unsigned int*, signed char, bool, bool)
0000000000d2ed30 B PenPosition::mPenEdgesThresholds
0000000000670dd0 T PenPosition::CalcBorderCoMPerAxis(PenPositionIn const&, signed char, signed char, eAXIS)
000000000067f020 T PenPosition::DetermineXgboostArea(XgBoostLogicAuxiliaryData&, ePEN_XGB_AREA&)
0000000000666eac T PenPosition::FirstFrameInTipLogic()
000000000067e7bc T PenPosition::GetAntsRangeByRegion(eAXIS, unsigned char, unsigned char&, unsigned char&)
0000000000666db8 T PenPosition::GetNewPenVendorIndex(ePEN_VENDOR)
000000000067e8c8 T PenPosition::IsPositionInSeamArea(int, eAXIS, unsigned char&, unsigned char&)
000000000066c844 T PenPosition::ResetLastComPosition(double (*) [2])
0000000000d198b9 D PenPosition::mIsUseEdgeXgboostCom
000000000067e934 T PenPosition::CalcEdgePositionInAnt(bool, bool, unsigned char, unsigned char, ePEN_MSFT_COM_PEN_VENDORS, double, eAXIS)
000000000067e6fc T PenPosition::CalcEdgePositionInAnt(double, double, unsigned char, signed char, unsigned char, unsigned char, ePEN_MSFT_COM_PEN_VENDORS, bool&)
0000000000674c88 T PenPosition::CalculateCentroidTail(unsigned int const*, signed char)
0000000000673e5c T PenPosition::CalculateTipNormArray(double)
0000000000666ba4 T PenPosition::IsMidScreenModelExist(PenPositionIn&)
000000000067e890 T PenPosition::CalcEnergyIirThreshold(PenPositionIn const&)
0000000000671b40 T PenPosition::CalcTipAndRingFeatures(double*, double*, double*)
0000000000671758 T PenPosition::CalcTipLowFreqFeatures(XgBoostLogicAuxiliaryData&, eAXIS, unsigned char)
000000000066d0cc T PenPosition::CalculateRingCentroids(double (*) [9], unsigned int (*) [9], double (*) [9], unsigned int (*) [9], double*, signed char*, signed char*, signed char*, signed char*, signed char*, signed char*, bool, bool)
0000000000673f78 T PenPosition::CalculateRingNormArray(double, signed char, signed char)
00000000006806d4 T PenPosition::CalculateRingSqrtArray(double (*) [9], unsigned int (*) [9], double (*) [9], unsigned int (*) [9])
0000000000671644 T PenPosition::CalculateTipNormalizer(XgBoostLogicAuxiliaryData&, PenPositionIn const&)
0000000000673c64 T PenPosition::CalculateTipNormalizer()
00000000006724e0 T PenPosition::DetermineEdgeComMethod(XgBoostLogicAuxiliaryData&, bool)
000000000067f3b4 T PenPosition::DetermineNearEdgeModel(XgBoostLogicAuxiliaryData&)
000000000067e478 T PenPosition::RunOneSidedCnrCleaning(PenPositionIn const&, XgBoostLogicAuxiliaryData&, eAXIS, ePEN_TRANSMITTER, ePEN_BORDER)
000000000067185c T PenPosition::CalcTipHighFreqFeatures(XgBoostLogicAuxiliaryData&, eAXIS, unsigned char)
0000000000673d58 T PenPosition::CalculateRingNormalizer()
00000000006702a4 T PenPosition::CalculateTiltAndAzimuth(PenPositionIn const&, XgBoostLogicAuxiliaryData&, PenPositionOut&, signed char*, double, double)
0000000000667e4c T PenPosition::PenCalculationModeReset(PenPositionIn&)
0000000000674d78 T PenPosition::UpdateErrorInOffsetCalc(ePEN_POSITION_ERRORS_TYPE)
000000000067e664 T PenPosition::CalcPolynomialCoMOnEdges(double, double, unsigned char, unsigned char, ePEN_MSFT_COM_PEN_VENDORS)
000000000067e6b8 T PenPosition::CalcPolynomialCoMOnEdges(double, unsigned char, unsigned char, ePEN_MSFT_COM_PEN_VENDORS)
000000000066f628 T PenPosition::CalculateCentroidBy3Ants(unsigned int*, signed char, float, signed char)
000000000067412c T PenPosition::CalculateCentroidBy5Ants(double*, signed char, unsigned char)
0000000000680828 T PenPosition::NormalizeSignalByVoltage(PenPositionIn const&, XgBoostLogicAuxiliaryData&, double (*) [9], double (*) [9])
000000000067f750 T PenPosition::PerformXgBoostPrediction(PenPositionIn const&, XgBoostLogicAuxiliaryData&, double (*) [2], eXGBOOST_MODEL, ePEN_COM_METHOD, bool)
000000000067d9ec T PenPosition::RunPreLsHeuristicPerAxis(eAXIS, PenPositionIn&, unsigned char, bool)
000000000067ef10 T PenPosition::SetBordersPenModePerAxis(PenPositionOut&, double, signed char, eAXIS, double&, bool, eSMOOTHING_PEN_STATE)
0000000000d198b8 D PenPosition::mIsUseNearEdgeXgboostCom
00000000006710fc T PenPosition::CalculateFeatureComVector(PenPositionIn const&, XgBoostLogicAuxiliaryData&)
000000000067d660 T PenPosition::RunPhaseCriteriaHeuristic(PenPositionIn&, unsigned char, unsigned char, unsigned char, unsigned char, eAXIS, ePEN_TRANSMITTER, signed char, unsigned int, float, bool, bool, bool, bool)
000000000066ffd8 T PenPosition::StoreLsLogicAuxiliaryData(XgBoostLogicAuxiliaryData const&, PenPositionIn&, PenPositionOut&, bool*)
0000000000673674 T PenPosition::CalculateTiltUsingGeometry(double, double, float*)
000000000066df58 T PenPosition::CreateLsLogicAuxiliaryData(double (*) [2], XgBoostLogicAuxiliaryData&, PenPositionIn const&, PenPositionOut const&, signed char*, signed char*, bool)
00000000006737b4 T PenPosition::PreCalculateTiltAndAzimuth(bool*)
000000000066c860 T PenPosition::ZeroStitchedBorderMagArray(PenPositionIn const&, signed char*, ePEN_TRANSMITTER)
0000000000674004 T PenPosition::PostCalculateTiltAndAzimuth(bool*)
0000000000672d00 T PenPosition::CalculateEdgeXgBoostFeatures(PenPositionIn const&, XgBoostLogicAuxiliaryData&)
000000000066fa8c T PenPosition::CombineCoarseAndFinePosition(double&, double&, double (*) [2], XgBoostLogicAuxiliaryData&, eXGBOOST_MODEL, ePEN_COM_METHOD)
0000000000672a00 T PenPosition::CalcXgBoostTipAndRingFeatures(XgBoostLogicAuxiliaryData&, double*, double*, eAXIS)
0000000000673704 T PenPosition::CalculateAzimuthUsingGeometry(double, double, bool)
0000000000668290 T PenPosition::CalculateInkCoMandTiltAzimuth(PenPositionIn&, double&, double&, PenPositionOut&, AllPenProcessDft*, signed char, signed char)
00000000006750d8 T PenPosition::RunAmplitudeCriteriaHeuristic(eAXIS, unsigned char, unsigned char, unsigned char, unsigned char, bool, bool, bool, bool, PenPositionIn&, bool)
0000000000672548 T PenPosition::CalcTipHighFreqXgBoostFeatures(XgBoostLogicAuxiliaryData&, eAXIS, double*, signed char, bool)
0000000000666e68 T PenPosition::IsFirstInkFrameByPostProcessing(PenPositionIn const&)
0000000000671d38 T PenPosition::CalculateFeatureXgBoostComVector(PenPositionIn const&, XgBoostLogicAuxiliaryData&, double*, ePEN_XGB_AREA, bool, bool, bool)
0000000000674be8 T PenPosition::SetRingValuesRespectivelyToTipAnt(unsigned int*, double*, signed char, signed char)
0000000000668114 T PenPosition::ConvertAntToSensorHimerticPosition(double, eAXIS, bool, bool&, signed char)
0000000000663d50 T PenPosition::ResetOffsetCalcSmoothingParameters()
00000000006718dc T PenPosition::PrepareRingNormalizeDataForFeatures(XgBoostLogicAuxiliaryData&)
000000000066fd60 T PenPosition::ConvertComPositionFromAntsToHimetric(double (*) [2], int (*) [2], signed char*)
0000000000674b24 T PenPosition::CalcDistanceBetweenRingCentroidAndCom()
0000000000680458 T PenPosition::CalculateTileAndAzimuthUsingCentroids(PenPositionOut&, signed char*, double, double)
0000000000666e00 T PenPosition::DetermineLowFreqInkHoverCoMIndication(unsigned int*, unsigned char, eSMOOTHING_PEN_STATE)
000000000066e254 T PenPosition::RunAuxiliaryCleaningPerPenTypeAndAxis(PenPositionIn const&, XgBoostLogicAuxiliaryData&, signed char*, bool*)
0000000000674244 T PenPosition::CalculateCentroidBy5AntsOr3AntsIfEdges(eAXIS, signed char)
000000000066dcfc T PenPosition::DetermineHighFreqInkHoverCoMIndication(PenPositionIn const&, signed char, signed char)
000000000067fee8 T PenPosition::IsThereDistanceBetweenXgBoostRingAndTip(PenPositionIn const&, XgBoostLogicAuxiliaryData&, double&, double&)
0000000000672c00 T PenPosition::CalculateFeatureXgBoostCoarseTiltAzimuth(XgBoostLogicAuxiliaryData&)
000000000066b8f0 T PenPosition::CalculateOffsetCorrectionPolynomialBased(PenPositionIn const&, PenPositionOut&)
0000000000672780 T PenPosition::PrepareRingNormalizeDataForXgBoostFeatures(XgBoostLogicAuxiliaryData&)
0000000000663948 T PenPosition::Init(PenProcessingInitStruct*, CommonPenTrackingCfg*, PenThrsAndTrackCfgTuning*, PenCenterOfMassCfg*, std::__1::map<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > >, std::__1::less<eXGBOOST_MODEL>, std::__1::allocator<std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >*, StaticConfig*)
0000000000663d6c T PenPosition::Reset(PenProcessOutput&)
0000000000d2a148 B ProjectInfo::mProjectIdToName
00000000005c704c T TracksArray::CleanTracks()
00000000005c5a0c T TracksArray::FillOsReport(TracklibMatchingIn const*)
00000000005c6508 T TracksArray::FillPosition(GeneralFingerReport*, TrackedFinger*, eAXIS, eAXIS, bool&)
00000000005c5ed0 T TracksArray::OpenNewTrack(ReportInformation*, unsigned char, unsigned char)
00000000005c708c T TracksArray::CloseOldTracks()
00000000005c6284 T TracksArray::TryClosingTrack(TrackedFinger*, TracklibMatchingIn const*)
00000000005c6fa4 T TracksArray::AddFingerToTrack(TrackedFinger*, ReportInformation*, TracklibMatchingIn const*)
00000000005c564c T TracksArray::IrregularEventHandler(TracklibPrepareTrackingIn*, TracklibMatchingIn*, TuProcessInput*)
00000000005c6620 T TracksArray::ActivateSplitModeLogic(GeneralFingerReport*, TrackedFinger*, eAXIS, eAXIS, bool&)
00000000005c72bc T TracksArray::GetNumOfExistingTracks()
00000000005c5e68 T TracksArray::SetIsHighNoiseIndicated(unsigned char)
00000000005c585c T TracksArray::TryClosingAllTrackedFingers(TracklibMatchingIn const*, TuProcessInput*)
00000000005c5974 T TracksArray::FixForwardOrBackwardPosition()
00000000005c62cc T TracksArray::MatchSingleFingerSingleTrack(TrackedFinger*, ReportInformation*, TracklibMatchingIn const*, float, eMATCH_SINGLE_FINGER_SINGLE_TRACK_SOURCE)
00000000005c6764 T TracksArray::TrackedFingersPostProcessing(TracklibMatchingIn const*)
00000000005c7130 T TracksArray::ForceClosingAllTrackedFingers()
00000000005c6118 T TracksArray::HandleUnMatchedTrackedFingers(TracklibMatchingIn const*)
00000000005c5714 T TracksArray::InitTrackingFlagsAndPrediction(TracklibPrepareTrackingIn*)
00000000005c6eb0 T TracksArray::MatchDetectedFingerToTrackedFinger(ReportInformation*, TracklibMatchingIn const*)
00000000005c681c T TracksArray::UpdateFingerReportedFromSingleTouch()
00000000005c65c8 T TracksArray::UpdateReportedTouchDelayForStatistics(unsigned int, unsigned int*)
00000000005c5538 T TracksArray::Init(TouchProcessingMngrInitStruct*, TouchPostProcessingCfg*, TouchDetectionCfg*, StaticConfig*)
00000000005c53d4 T TracksArray::TracksArray(CommonTrackingCfg&, DetectedArray&, TouchPostProcessingCfg*, SepFingerArray&)
00000000005c53d4 T TracksArray::TracksArray(CommonTrackingCfg&, DetectedArray&, TouchPostProcessingCfg*, SepFingerArray&)
00000000006511b8 T KalmanFilter::Init(double, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&)
0000000000651314 T KalmanFilter::Init()
0000000000651008 T KalmanFilter::SetQ(double)
00000000006510d8 T KalmanFilter::SetR(double)
00000000006511b0 T KalmanFilter::Time()
0000000000650b74 T KalmanFilter::Setup(double, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
0000000000651440 T KalmanFilter::Update(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&)
00000000006517fc T KalmanFilter::Update(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, double, Eigen::Matrix<double, -1, -1, 0, -1, -1>)
00000000005cca70 T MatchFingers::CleanTracks()
00000000005cc480 T MatchFingers::RunMatching(TracklibMatchingIn const*, TuProcessInput*)
00000000005cca68 T MatchFingers::CloseOldTracks()
00000000005cc444 T MatchFingers::PrepareTracking(float, TracklibPrepareTrackingIn*)
00000000005cca60 T MatchFingers::GetNumOfActiveTracks()
00000000005cc9b4 T MatchFingers::HandleDetectedFingers(TracklibMatchingIn const*)
00000000005cca80 T MatchFingers::IrregularEventHandler(TracklibPrepareTrackingIn*, TracklibMatchingIn*, TuProcessInput*)
00000000005cca78 T MatchFingers::ForceAllTracksClosingWithLiftIndication()
00000000005cc43c T MatchFingers::Init(TouchProcessingMngrInitStruct*, TouchPostProcessingCfg*, TouchDetectionCfg*, StaticConfig*)
00000000005b883c T OtfcStats_G6::SendTelemetryInternal(int)
00000000005b89c4 T OtfcStats_G6::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000005b89b0 T OtfcStats_G6::WriteToFileTelemetryInternal(char const*, char const*)
00000000006876a0 T PenHistoryDb::SetLocalId(unsigned char)
0000000000687444 T PenHistoryDb::SetZRatioPerGain(eChipType, PenCenterOfMassCfg*)
0000000000687340 T PenHistoryDb::UpdateFullRangeRegion(bool*)
0000000000687964 T PenHistoryDb::UpdateIsNewPenTracking(unsigned int)
0000000000687174 T PenHistoryDb::Init(PenHistoryDbInitStruct*, PenCenterOfMassCfg*, eChipType)
0000000000687684 T PenHistoryDb::SetPenId(unsigned int, unsigned int)
0000000000d2ed78 B PenHistoryDb::mInstance
000000000068ea14 T PenMagToBits::IsJnrClean(PenMagsToBitsIn const&)
00000000006909a0 T PenMagToBits::IsShortH2I(unsigned int)
000000000068ed30 T PenMagToBits::GetFreeAxis()
0000000000690ac0 T PenMagToBits::GetSigmaSqr(PenMagsToBitsIn const&, bool, unsigned char, unsigned char)
00000000006909b0 T PenMagToBits::CalcSliceOffset(ePEN_PROCESS_TYPE)
000000000068de68 T PenMagToBits::RunPenMagToBits(PenMagsToBitsOut&, PenMagsToBitsIn const&)
0000000000690c94 T PenMagToBits::CalcKCompensation(PenMagsToBitsIn const&, unsigned int&, unsigned char, unsigned char, unsigned char, bool, bool)
000000000068e92c T PenMagToBits::FindBitAttributes(unsigned char, unsigned int, bool&, bool&)
0000000000690b08 T PenMagToBits::FillMaxValFreeAxis(int*, int*, unsigned int*, unsigned char*, BitData*, unsigned char, unsigned char)
0000000000690a20 T PenMagToBits::GetDftsFromDataSel(PenMagsToBitsIn const&, BitData*, unsigned char, PenMagsToBitsLookup*, unsigned char)
000000000068ea4c T PenMagToBits::IsInjectedNoiseLow(PenMagsToBitsIn const&, unsigned char, PenMagsToBitsLookup*, bool)
00000000006909d0 T PenMagToBits::GetCorrIdxWithSlice(ePEN_PROCESS_TYPE, unsigned char*, PenMagsToBitsLookup*, unsigned char, unsigned char*)
000000000068d744 T PenMagToBits::PreparePenMagToBits(PenProcessInput&, PenProcessOutput&, PenMagsToBitsIn&)
0000000000690b7c T PenMagToBits::GetMinInkAmpThreshold(PenMagsToBitsIn const&, unsigned char, eAXIS)
000000000068eba8 T PenMagToBits::IsLocalOfInterestFree(PenMagsToBitsIn const&, unsigned char, PenMagsToBitsLookup*, bool)
000000000068f0a0 T PenMagToBits::WorkingAntSearchFreeAxis(PenMagsToBitsIn const&, WorkingAntData&, unsigned char, eBIT_MODE_STATE&, PenMagsToBitsLookup*, unsigned char, bool)
000000000068d7c8 T PenMagToBits::GetLookupTableAndAxisState(PenMagsToBitsIn const&, PenMagsToBitsLookup**)
000000000068f910 T PenMagToBits::WorkingAntProcessingFreeAxis(PenMagsToBitsIn const&, WorkingAntData&, unsigned char, PenMagsToBitsLookup*, unsigned char, bool, bool, bool)
00000000006905b8 T PenMagToBits::WorkingAntProcessingBothBlocked(PenMagsToBitsIn const&, WorkingAntSearchBothBlockedOut&, unsigned char, PenMagsToBitsLookup*, bool)
000000000068fef8 T PenMagToBits::WorkingAntCandidateSearchBothBlocked(PenMagsToBitsIn const&, WorkingAntSearchBothBlockedOut&, unsigned char, eBIT_MODE_STATE&, PenMagsToBitsLookup*, bool, bool)
000000000068d590 T PenMagToBits::Init(PenProcessingInitStruct*, PenMagToBitsCfg*, DataSelectionCfg*, PenJnrCfg*)
000000000069c2d4 T RecentPensDb::ResetState()
000000000069b12c T RecentPensDb::UpdateAges(unsigned char)
000000000069b080 T RecentPensDb::AddNewPenId(unsigned int)
000000000069b048 T RecentPensDb::GetIndexByPenId(unsigned int)
000000000069c1b8 T RecentPensDb::GetUsedLocalIds()
000000000069c134 T RecentPensDb::GetPenIdByLocalId(unsigned char)
000000000069aeec T RecentPensDb::UpdatePenVendorData(unsigned int)
000000000069c180 T RecentPensDb::GetPenIndexByLocalId(unsigned char)
000000000069c06c T RecentPensDb::SetAveragePenVoltage(float)
000000000069c2e4 T RecentPensDb::SetLastReportedPenId(unsigned int, bool)
000000000069b534 T RecentPensDb::UpdatePenVendorMembers(ePEN_VENDOR, ePEN_VENDOR_ID)
000000000069c094 T RecentPensDb::GetLastAveragePenVoltage(float&)
000000000069c0d0 T RecentPensDb::SetAverageZDistanceWithPressure(float)
000000000069c0f8 T RecentPensDb::GetLastAverageZDistanceWithPressure(float&)
000000000069b400 T RecentPensDb::UpdateProtocolAndSetLocalIdIfNeeded(bool)
0000000000698148 T RecentPensDb::Init(RecentPensStruct*)
0000000000698344 T RecentPensDb::LoadDb(RecentPensStruct*)
000000000069aee4 T RecentPensDb::ResetDb()
000000000069b3f0 T RecentPensDb::IsMpp2_6()
000000000069b190 T RecentPensDb::SetPenId(unsigned int, unsigned int)
00000000003a0430 T StatsManager::ClearCounters(bool)
000000000039ff00 T StatsManager::SendTelemetry(bool)
000000000039f7f0 T StatsManager::GetCurrentClock()
00000000003a056c T StatsManager::RegisterTelemetry(char const*)
00000000003a0598 T StatsManager::GetStatsGroupObject(eTELEMETRY_GROUP_ID)
0000000000d2ab88 B StatsManager::mIsForceTelemetryOut
000000000039f7f8 T StatsManager::UpdateStatsCountersFromFW(FwTelemeteryInfo const&)
000000000039f1b4 T StatsManager::Init()
0000000000d1d618 B TelemetryEos::mStatsClient
00000000002ee1f0 T TelemetryEos::PushTelemetryGroup(int, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int, ...)
00000000005d4a38 T CampoTracking::CampoSmoothing(GeneralFingerReport*)
00000000005d499c T CampoTracking::CloseCampoTrack()
00000000005d4cfc T CampoTracking::OpenNewCampoTrack()
00000000005d4d4c T CampoTracking::PrepareCampoReport(CampoOutput*)
00000000005d4c14 T CampoTracking::TryCloseCampoTrack()
00000000005d4b1c T CampoTracking::CampoJitterRestrictor(GeneralFingerReport*)
00000000005d49e4 T CampoTracking::CleanCampoTrackingModule()
00000000005d4ca8 T CampoTracking::IsDetectedCampoInTrackROI()
00000000005d4f28 T CampoTracking::PrepareBoundingRectangles(CampoBoundingRectangle*, unsigned char, unsigned short, unsigned short)
00000000005d5004 T CampoTracking::UpdateCampoDataInFeedback(CampoFeedbackData*, CampoDetectionOutputStruct*, CampoOutput*)
00000000005d4fc0 T CampoTracking::SetInvalidValueForRectangle(CampoBoundingRectangle*)
00000000005d4f94 T CampoTracking::SetFullRangeDetctionRectangle(CampoBoundingRectangle*)
00000000005d4f84 T CampoTracking::IsForceOtfcAllowedCampoCriteria()
00000000005d51c0 T CampoTracking::RunCampoTrackingAndPrepareReport(CampoFeedbackData*, CampoDetectionOutputStruct*, DataProtectedGeneral*, CampoOutput*)
00000000005d4fcc T CampoTracking::SetDefaultValuesCampoFeedbackData(CampoFeedbackData*)
00000000005d4898 T CampoTracking::Init(TouchProcessingMngrInitStruct*, CampoCfg*)
00000000005d4894 T CampoTracking::CampoTracking()
00000000005d4894 T CampoTracking::CampoTracking()
00000000005b9b78 T DetectedArray::CropDropLogic(unsigned char)
00000000005b9fd4 T DetectedArray::GetCenterOfMass(unsigned char)
00000000005b99e4 T DetectedArray::FixOffsetRotation()
00000000005b9764 T DetectedArray::PrepareDetectedBlobs(TracklibPrepareTrackingIn*)
00000000005b97b4 T DetectedArray::ProcessDetectedBlobs(TracklibPrepareTrackingIn*)
00000000005b9c0c T DetectedArray::DeleteWeakBlobWithPoorNsr(TracklibPrepareTrackingIn*)
00000000005b9af8 T DetectedArray::PerformStretchingForAllBlobs()
00000000005ba000 T DetectedArray::ConvertPositionFromAntennaToMmAndFlip(float, eAXIS)
00000000005b9938 T DetectedArray::ConvertAllBlobPositionsFromAntennasToMmAndFlip()
00000000005b95e4 T DetectedArray::Init(float*, CommonTrackingCfg*, TouchPostProcessingCfg*, TouchProcessingMngrInitStruct*, StaticConfig*)
00000000005b9fe8 T DetectedArray::GetFinger(int)
00000000005b9ff8 T DetectedArray::GetLength()
00000000005ba100 T DetectedArray::DetectedArray(TouchPostProcessingCfg*)
00000000005ba100 T DetectedArray::DetectedArray(TouchPostProcessingCfg*)
00000000005e9b2c T GripRejection::FindGripZone(TrackDataStruct const&)
00000000005e9cfc T GripRejection::CalculateScore(unsigned char const (&) [5])
0000000000d2e7c6 B GripRejection::mNumOfLongAnts
0000000000d2e7c4 B GripRejection::mNumOfShortAnts
00000000005e9bf4 T GripRejection::IsBlobExistOnOppositeSide(TrackDataBaseStruct const&, TrackDataStruct const&, GripRejection::eGripSuspectedArea)
0000000000d2e7c8 B GripRejection::mIsGripRejectionSupported
0000000000d2e7c2 B GripRejection::mNumOfAntsToIgnoreFromBottom
0000000000d2e7c0 B GripRejection::mNumOfAntsFromBordersForSpecialArea
00000000005e9048 T GripRejection::Run(TrackDataBaseStruct&, unsigned char)
00000000005e9d48 T GripRejection::Init(float const (&) [2], unsigned short, unsigned short, bool)
0000000000662ce4 T PenBlackPrint::IsExtremeRatioOnEdge(PenDftResult*, eAXIS, ePEN_BORDER_TYPE, unsigned char)
00000000006629ac T PenBlackPrint::IsPassPeakToSkirtRatio(unsigned int, unsigned char, unsigned int, bool, unsigned char)
000000000066268c T PenBlackPrint::IsPenOnBlackPrintPerAxis(eAXIS, PenBlackPrintIn const&)
00000000006629f4 T PenBlackPrint::IsBlackPrintPatternPerSide(PenDftResult*, signed char, eAXIS, ePEN_BORDER_TYPE, bool, unsigned char)
00000000006623dc T PenBlackPrint::CheckPenOnBlackPrintUnderBeacon(PenBlackPrintOut&, PenBlackPrintIn const&)
00000000006627dc T PenBlackPrint::IsPenOnBlackPrintOnOneSideOfPeak(PenDftResult*, eAXIS, ePEN_BORDER_TYPE, bool, unsigned char)
00000000006624b0 T PenBlackPrint::IsPenOnBlackPrintWithNoiseCloseToPen(PenBlackPrintIn const&)
00000000006627c0 T PenBlackPrint::IsSecondPeakAntennaAdjacentToPeakAntenna(signed char, eAXIS, signed char*)
0000000000662c50 T PenBlackPrint::IsPenOnBlackPrintWithNoiseCloseToPenPerAxis(eAXIS, PenBlackPrintIn const&)
000000000066226c T PenBlackPrint::Init(PenThrsAndTrackCfgTuning*)
0000000000682cb0 T PenProcessing::CalcPenSnr(PenProcessInput&, PenProcessOutput&)
0000000000680d2c T PenProcessing::ProcessPenData(PenProcessOutput&, PenProcessInput&)
0000000000681ff0 T PenProcessing::BeaconProcessing(PenProcessInput&, PenProcessOutput&)
0000000000683818 T PenProcessing::VerifyMaxAntIndex(ePEN_TRANSMITTER, eAXIS, signed char, signed char)
0000000000682520 T PenProcessing::PressureProcessing(PenProcessInput&, PenProcessOutput&, PenMagsToBitsOut&)
0000000000681cec T PenProcessing::RunNoDetecionLogic(PenProcessOutput&, PenProcessInput&)
0000000000682d3c T PenProcessing::PrepareDigitalInput(PenLegacyDigitalInput&, PenProcessInput&)
0000000000683168 T PenProcessing::CalculateSquaredMags(PenProcessOutput&, PenProcessInput&, AllPenProcessDft*, ePEN_HOVER_HEIGHT, bool)
0000000000683450 T PenProcessing::DetermineHoverHeight(PenProcessOutput&, PenProcessInput&)
0000000000681aa4 T PenProcessing::InitializeProcessData(PenProcessOutput&, PenProcessInput&)
0000000000681e7c T PenProcessing::CommonBeaconProcessing(PenProcessOutput&, PenProcessInput&)
0000000000680c7c T PenProcessing::PenDetectionProcessing(PenProcessInput const&, PenProcessOutput&)
0000000000681eb8 T PenProcessing::RunPenMagToBitsProcess(PenProcessOutput&, PenMagsToBitsOut&, PenProcessInput&, PenMagsToBitsIn&)
0000000000682284 T PenProcessing::LegacyDigitalProcessing(PenProcessInput&, PenProcessOutput&)
0000000000682340 T PenProcessing::CommonPositionProcessing(PenProcessOutput&, PenProcessInput&)
0000000000680c4c T PenProcessing::HandlePenDetectionOutput(PenProcessOutput&)
0000000000682b70 T PenProcessing::HandleBeaconProcessOutput(PenProcessOutput&, PenBeaconProcessOut&)
000000000068296c T PenProcessing::PrepareBeaconProcessInput(PenBeaconProcessIn&, PenProcessInput&, PenProcessOutput&)
0000000000682130 T PenProcessing::ZeroForceInkingProcessing(PenProcessInput&, PenProcessOutput&)
0000000000683034 T PenProcessing::HandlePressureProcessOutput(PenProcessOutput&, PenPressureProcessOut&)
0000000000682954 T PenProcessing::HandleZeroForceInkingOutput(ZeroForceInkingProcessOutput&, PenProcessOutput&)
0000000000682da4 T PenProcessing::PreparePressureProcessInput(PenProcessOutput&, PenMagsToBitsOut&, PenPressureProcessIn&, PenProcessInput&)
0000000000682870 T PenProcessing::PrepareZeroForceInkingInput(PenProcessInput&, PenProcessOutput&, ZeroForceInkingProcessInput&)
00000000006827f0 T PenProcessing::IsDetermineZeroPressureDftByJnr(PenProcessInput&)
0000000000681f50 T PenProcessing::RunHoverInkIndicationProcessing(PenProcessOutput&, PenMagsToBitsOut&, eSMOOTHING_PEN_STATE)
0000000000682d78 T PenProcessing::HandleLegacyDigitalProcessOutput(PenProcessOutput&, PenLegacyDigitalOutput&)
0000000000680988 T PenProcessing::Init(PenProcessingInitStruct*, CommonPenTrackingCfg*, PenDigitalProcessingCfg*, PenThrsAndTrackCfgTuning*, PenCenterOfMassCfg*, PenMagToBitsCfg*, DataSelectionCfg*, PenJnrCfg*, std::__1::map<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > >, std::__1::less<eXGBOOST_MODEL>, std::__1::allocator<std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >*, PenZeroForceInkingProcessCfg*, StaticConfig*)
000000000068263c T PenProcessing::Reset(PenProcessOutput&)
0000000000d2ed50 B PenProcessing::mpIir
00000000003a9ffc T PenStudyStats::GetPressureBin(unsigned short)
00000000003aa0a0 T PenStudyStats::AddPressureExit(unsigned short)
00000000003a9f44 T PenStudyStats::AddPressureEntry(unsigned short)
00000000003a9e50 T PenStudyStats::UpdateRecentPens(RecentPensStruct*)
00000000003a7074 T PenStudyStats::SendTelemetryInternal(int)
00000000003a75cc T PenStudyStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003a7550 T PenStudyStats::WriteToFileTelemetryInternal(char const*, char const*)
0000000000d2e3d0 B TrackedFinger::mpMatching
0000000000d2e3f0 B TrackedFinger::mpPixel0Cfg
00000000005c9534 T TrackedFinger::KalmanUpdate(TracklibMatchingIn const*)
0000000000d2e3c0 B TrackedFinger::mIsHighNoise
0000000000d2e3f8 B TrackedFinger::mpPrediction
0000000000d2e400 B TrackedFinger::mpProcessStd2
00000000005c96f4 T TrackedFinger::SetTrackStatus(eTRACK_STATUS)
00000000005c8330 T TrackedFinger::UpdateBlobSize(ReportInformation*)
00000000005c847c T TrackedFinger::UpdateVelocity(float, float*)
0000000000d2e418 B TrackedFinger::mpFastMovement
0000000000d2e3e0 B TrackedFinger::mpKalmanConfig
00000000005c97bc T TrackedFinger::DropReportLogic(TracklibMatchingIn const*, ReportInformation*)
00000000005c73e0 T TrackedFinger::AddFingerToTrack(ReportInformation*, TracklibMatchingIn const*)
00000000005c90c0 T TrackedFinger::JitterRestrictor(unsigned char)
00000000005c8dec T TrackedFinger::UpdateMatchLimit(float, float, unsigned char)
0000000000d2e3c8 B TrackedFinger::mpSmallFingerCfg
00000000005cafb8 T TrackedFinger::ForceClosingTrack()
00000000005ca55c T TrackedFinger::InitializeNewTrack(ReportInformation*, unsigned char, unsigned char, unsigned char, unsigned short, unsigned char)
00000000005ca018 T TrackedFinger::UpdateIsTrackValid(TracklibMatchingIn const*)
0000000000d2e3e8 B TrackedFinger::mpVelocitiesConfig
00000000005ca2bc T TrackedFinger::IsForwardPrediction(float*, unsigned char)
00000000005c86a4 T TrackedFinger::UpdateIIRParameters()
00000000005c9e94 T TrackedFinger::UpdateKalmanPerAxis(float, unsigned char, unsigned char, unsigned char, eAXIS)
0000000000d2e410 B TrackedFinger::mpNoiseManageConfig
00000000005ca008 T TrackedFinger::AddStGhostIndication()
00000000005c84f8 T TrackedFinger::UpdateDistanceBucket(float)
00000000005c99e4 T TrackedFinger::UpdateVelocityBucket()
00000000005ca840 T TrackedFinger::GetReportedCoordinate()
00000000005ca854 T TrackedFinger::GetStatisticsAndClear(unsigned int*)
00000000005ca864 T TrackedFinger::IsTrackedFingerClosed(TracklibMatchingIn const*, unsigned char)
00000000005cad64 T TrackedFinger::RunBackwardPrediction()
00000000005c8414 T TrackedFinger::UpdatePredictionError(float&, float&)
00000000005ca838 T TrackedFinger::GetPredictedCoordinate()
00000000005c8604 T TrackedFinger::UpdateSeparationStatus(ReportInformation*)
0000000000d2e408 B TrackedFinger::mpBlobSizeSmoothConfig
00000000005cafa8 T TrackedFinger::SetIsHighNoiseIndicated(unsigned char)
0000000000d2e3d8 B TrackedFinger::mpJitterRestrictorConfig
00000000005c9bd8 T TrackedFinger::FindVelocityAndSnrIndexes(unsigned char&, unsigned char&, unsigned char)
00000000005c89dc T TrackedFinger::PrepareBackwardPrediction(TracklibMatchingIn const*)
00000000005c72c4 T TrackedFinger::UpdateIsDuringGapCrossing()
00000000005c8748 T TrackedFinger::UpdateVelocityAndReported(float)
00000000005c9dec T TrackedFinger::InitializeCorrectedIfNeeded(float, unsigned char)
00000000005c82cc T TrackedFinger::CheckIfDetectedFingerIsSmall(ReportInformation*, unsigned char)
00000000005caa9c T TrackedFinger::FixForwardOrBackwardPosition(unsigned char&, unsigned char)
00000000005c7388 T TrackedFinger::IsPositionMappedToDisplayGap(float, unsigned short)
00000000005c83c0 T TrackedFinger::UpdateTrackMovementRectangle(ReportInformation*)
00000000005c9948 T TrackedFinger::UpdateDynamicRestrictorDirection(float, float, float, float, float*)
00000000005ca194 T TrackedFinger::GetTrackBackwardPredictionDirection()
00000000005ca0a0 T TrackedFinger::GetBackwardPredictionBorderThreshold(TracklibMatchingIn const*)
00000000005cafc0 T TrackedFinger::Init(TouchProcessingMngrInitStruct*, CommonTrackingCfg const&, TouchPostProcessingCfg*, TouchDetectionCfg*, unsigned char, StaticConfig*)
00000000005c9070 T TrackedFinger::DoIIR()
00000000005c9b38 T TrackedFinger::GetNsr(TracklibMatchingIn const*, unsigned char)
00000000005ca84c T TrackedFinger::GetNext()
0000000000d2e420 B TrackedFinger::mpIirCfg
00000000005ca844 T TrackedFinger::GetStatus()
00000000005c097c T CampoDetection::IsNoisyForCampo(unsigned short*, unsigned char)
00000000005c0dc0 T CampoDetection::RunCampoDetection(TouchProcessingInput*)
00000000005c09d0 T CampoDetection::AddCandidateToList(unsigned char, unsigned char, unsigned char)
00000000005c02a8 T CampoDetection::CampoTrackingClosed()
00000000005c09c4 T CampoDetection::CampoTrackingStarted()
00000000005c0294 T CampoDetection::CleanCampoDetectionModule()
00000000005c0708 T CampoDetection::CalculateCampoCenterOfMass(unsigned short, unsigned short, unsigned char (*) [288])
00000000005c0cec T CampoDetection::IsCandidateSuspectedByPalm(unsigned short, unsigned short, unsigned char (*) [288])
00000000005c02b4 T CampoDetection::Calculate2DCorrelationScore(short, short, unsigned char (*) [288])
00000000005c0a78 T CampoDetection::CreateCombinedCampoCandidateList(TouchProcessingInput*)
00000000005c0264 T CampoDetection::Init(TouchProcessingMngrInitStruct*, CampoCfg*)
00000000005c0260 T CampoDetection::CampoDetection()
00000000005c0260 T CampoDetection::CampoDetection()
00000000002d4678 T HeatAdaptorEos::InitAdaptor(IEosHeatService*)
00000000002d6e9c T HeatAdaptorEos::SendPenReports(HeatPenReport*, unsigned int, EosHeatDevice const*)
00000000002d99d4 T HeatAdaptorEos::SendTouchReports(HeatTouchReport*, unsigned int, EosHeatDevice const*)
00000000002dbd0c T HeatAdaptorEos::SendDebugDataToHost(unsigned char*, unsigned int)
00000000002d98b8 T HeatAdaptorEos::SendVVToolPenReport(PenReport const*, unsigned int)
00000000002d4734 T HeatAdaptorEos::SetAngleSensitivity(float)
00000000002d4ea4 T HeatAdaptorEos::SendMessageToTouchFw(unsigned char*, unsigned int, unsigned char*, unsigned int, unsigned int*, eHID_REPORT_TYPE, EosHeatDevice const*)
00000000002dbb90 T HeatAdaptorEos::SendVVToolTouchReport(TouchReport const*, unsigned int)
00000000002dbd3c T HeatAdaptorEos::PrepareVVToolPenMessageStructure(PenReport const&, RemotePenMessage&)
00000000002dbf9c T HeatAdaptorEos::PrepareVVToolTouchMessageStructure(TouchReport const*, unsigned int)
00000000002d4680 T HeatAdaptorEos::SetRightScreenOffsetAccordingToXml()
00000000002db420 T HeatAdaptorEos::CalculatePositionOffsetForDualScreen(EosHeatDevice const*)
00000000003520ac T MwDebugManager::GetMemoryAddressById(unsigned int)
0000000000353cf0 T MwDebugManager::SendPersistentStorage(unsigned char, ePERSISTENT_STORAGE_TYPES, unsigned int)
0000000000351e38 T MwDebugManager::FillDeviceInfoForDebug()
0000000000351f7c T MwDebugManager::PopulateDebugInfoArray()
0000000000353bf0 T MwDebugManager::SendAllPersistentStorage(unsigned char)
0000000000352338 T MwDebugManager::SendUnsolicitedDebugMessage(void*, unsigned int, void*, unsigned int, bool, unsigned char)
0000000000352e2c T MwDebugManager::SendUnsolicitedEventMessage(void*, unsigned int, unsigned char)
00000000003526ec T MwDebugManager::GetIndexOfCycleFooterSection(unsigned char*, unsigned short)
0000000000352738 T MwDebugManager::SendUnsolicitedRecordMessage(void*, unsigned int, unsigned char)
0000000000353500 T MwDebugManager::SendUnsolicitedStorageMessage(void*, unsigned int, unsigned char)
00000000003521b4 T MwDebugManager::SetUnsolicitedReadAddressResponseData(unsigned int, unsigned int)
00000000003521c8 T MwDebugManager::VerifyAndSendResponseIndUnsolicitedMessage(unsigned char)
0000000000351d9c T MwDebugManager::Init(std::__1::shared_ptr<PersistentStorage>, bool)
0000000000354a1c T MwDebugManager::MwDebugManager()
0000000000354a1c T MwDebugManager::MwDebugManager()
0000000000392394 T PostureManager::GetGapSize()
00000000003909b0 T PostureManager::SetGapSize(unsigned int)
00000000003921e8 T PostureManager::RemoveDevice(EosHeatDevice const*)
0000000000392120 T PostureManager::GetDeviceById(eREGION_ID)
0000000000390e04 T PostureManager::GetHingeAngle()
0000000000390a10 T PostureManager::GetIsStitched()
0000000000390a18 T PostureManager::SetHingeAngle(unsigned int, bool)
00000000003900cc T PostureManager::SetIsStitched(bool, bool)
00000000003925c8 T PostureManager::GetPostureData(unsigned int*, unsigned short*, unsigned char*)
0000000000392148 T PostureManager::GetScreenState(eREGION_ID)
0000000000391ac8 T PostureManager::SetScreenState(eREGION_ID, bool, bool)
00000000003909dc T PostureManager::UpdateTopology()
0000000000390f38 T PostureManager::GetKeyboardData(RegionConfigData*)
0000000000390e0c T PostureManager::SetKeyboardData(RegionConfigData*)
0000000000390f44 T PostureManager::SetTouchpadData(RegionConfigData*, eREGION_ID)
000000000039216c T PostureManager::SetDisplayBitmap(unsigned char, bool)
000000000038efe0 T PostureManager::SetHandednessMode(unsigned char)
000000000038f544 T PostureManager::SetScreenRotation(unsigned short)
0000000000392138 T PostureManager::GetCurrentTopology(eREGION_ID)
00000000003920e8 T PostureManager::GetCurrentTopology(EosHeatDevice const*)
000000000038efcc T PostureManager::InitRegionConfigData(RegionConfigData&)
00000000003909cc T PostureManager::GetActiveDisplayBitMap()
0000000000392228 T PostureManager::GetRegionIndexByDevice(EosHeatDevice const*)
000000000039239c T PostureManager::ConvertRectHimetricToAnt(rect_t&, RegionConfigRectAnt&, eREGION_ID)
000000000038ebdc T PostureManager::GetHingeAngleSensitivity()
000000000039058c T PostureManager::CleanModulesByConfiguration(eCONFIGURATION_TOPOLOGY)
000000000038e904 T PostureManager::UpdateHingeAngleSensitivity()
00000000003900b4 T PostureManager::GetLeftOrTopScreenRegionIndex()
000000000038fdf0 T PostureManager::SetLeftOrTopScreenRegionIndex(eREGION_ID)
00000000003900bc T PostureManager::GetRightOrBottomScreenRegionIndex()
000000000038ebe4 T PostureManager::Init(EosHeatDevice const*, std::__1::shared_ptr<PersistentStorage>)
00000000003921bc T PostureManager::AddDevice(EosHeatDevice const*, eREGION_ID)
00000000006637a8 T RingCorruption::ObjectDeepCopy(RingCorruption const&)
0000000000663830 T RingCorruption::GetCentroidsHistory()
00000000006638e0 T RingCorruption::StartRingCorruption()
0000000000663810 T RingCorruption::ShouldForceCentroids()
0000000000663868 T RingCorruption::IsDuringRingCorruption()
0000000000663908 T RingCorruption::IsHasValidCentroidsDistance()
00000000006638a0 T RingCorruption::SetCentroidsDistanceHistory(double, double)
0000000000663930 T RingCorruption::RingSignalWasNotDetectedLogic()
0000000000663800 T RingCorruption::ShouldUseCentroidsDistanceHistory()
0000000000663768 T RingCorruption::Reset()
000000000066377c T RingCorruption::RingCorruption(RingCorruption const&)
0000000000663754 T RingCorruption::RingCorruption()
000000000066377c T RingCorruption::RingCorruption(RingCorruption const&)
0000000000663754 T RingCorruption::RingCorruption()
00000000006637d4 T RingCorruption::operator=(RingCorruption const&)
00000000005c0008 T SepFingerArray::ProcessHungarianResult(SepFingGroup*, unsigned char*, TracklibMatchingIn const*, unsigned char*)
00000000005bfae0 T SepFingerArray::IsHandledByDetectedOnly(SepFingGroup*, unsigned char*, unsigned char, unsigned char)
00000000005bf4f0 T SepFingerArray::PrepareSeparationGroups(float)
00000000005bf5a4 T SepFingerArray::ProcessSeparationGroups(TracklibMatchingIn const*)
00000000005bfa6c T SepFingerArray::FillTrackedFingersIndexes(unsigned char*, unsigned char)
00000000005bf9d0 T SepFingerArray::FillDetectedFingersIndexes(unsigned char*, unsigned char)
00000000005bfb74 T SepFingerArray::IsHandledCaseOneTrackOneBlob(SepFingGroup*, unsigned char*, TracklibMatchingIn const*, unsigned char*)
00000000005bfe74 T SepFingerArray::IsSuspectedAsFalseSeparation(SepFingGroup*, unsigned short, unsigned char*)
00000000005bfc0c T SepFingerArray::IsHandledByFastSplittedFinger(SepFingGroup*, unsigned char*, TrackedFinger*, TracklibMatchingIn const*)
00000000005bf4f8 T SepFingerArray::AddFinger(ReportInformation*)
00000000005c0234 T SepFingerArray::SepFingerArray(DetectedArray&, TracksArray&, TouchPostProcessingCfg*, CommonTrackingCfg const&)
00000000005c0234 T SepFingerArray::SepFingerArray(DetectedArray&, TracksArray&, TouchPostProcessingCfg*, CommonTrackingCfg const&)
00000000005dba4c T TouchDetection::CloseTrack(TrackDataStruct*)
00000000005df788 T TouchDetection::BlobPadding(unsigned char (*) [288])
00000000005e5004 T TouchDetection::InitHaloMap(unsigned char (*) [16], BlobFeatureStruct*)
00000000005dc604 T TouchDetection::CalculateLlr(BlobFeatureStruct*, float*, unsigned char*)
00000000005e33a8 T TouchDetection::IsPenInRange(TrackDataStruct*, float)
00000000005e71ec T TouchDetection::OpenNewTrack(BlobFeatureStruct&)
00000000005d982c T TouchDetection::ProcessTouch(TouchProcessingInput*)
00000000005db158 T TouchDetection::SetTrackType(TrackDataStruct*, eTRACK_TYPE)
00000000005e47f8 T TouchDetection::CreateNewBlob(CclAlgorithmInput&, unsigned short, unsigned short, unsigned char)
00000000005e28b0 T TouchDetection::IsTrackActive(eTOUCH_DETECTION_TRACK_STATUS)
00000000005db300 T TouchDetection::ReducePalmMap(TouchProcessingInput*)
00000000005dbca4 T TouchDetection::SetBlobRadius(unsigned char (*) [288], BlobFeatureStruct*)
00000000005e4584 T TouchDetection::AddNewJunction(CclAlgorithmInput&, unsigned char, unsigned short, unsigned short, unsigned char)
00000000005da890 T TouchDetection::Classification()
00000000005dc450 T TouchDetection::ClassifierInit(BlobFeatureStruct*, float*, unsigned char*)
00000000005de294 T TouchDetection::ClassifyTracks()
00000000005e6488 T TouchDetection::GetBestLlrType(float*)
00000000005e00a8 T TouchDetection::MarkCloseBlobs(ProtectedBlobData*)
00000000005e7cf8 T TouchDetection::SetTrackRadius(TrackDataStruct*, BlobFeatureStruct*)
00000000005e119c T TouchDetection::SetTrackStatus(TrackDataStruct*, eTOUCH_DETECTION_TRACK_STATUS)
00000000005db16c T TouchDetection::CalculateMaxNsr(unsigned short*, unsigned char)
00000000005e6168 T TouchDetection::GetNumBlobsMode(TrackDataStruct*)
00000000005e7a28 T TouchDetection::UpdateTrackData(TrackDataStruct&, BlobFeatureStruct&)
00000000005e6be8 T TouchDetection::UncertainCleaner(TrackDataStruct*)
00000000005e61bc T TouchDetection::UpdateReliefArea(TrackDataStruct*, BlobFeatureStruct*)
00000000005e0ce4 T TouchDetection::CalculatePeaksCom(TrackDataStruct*, JunctionFloat*, unsigned char (*) [288])
00000000005da0a0 T TouchDetection::FeatureExtraction(TouchProcessingInput*)
00000000005df8d0 T TouchDetection::FillTrackLibInput(ProtectedBlobData*, unsigned char (*) [288])
00000000005d96f8 T TouchDetection::InitScanWindowLUT(StaticConfig*)
00000000005dc0d4 T TouchDetection::FilterPeaksPerBlob(unsigned char (*) [288], BlobFeatureStruct*)
00000000005e4904 T TouchDetection::GetTouchStatistics(int*, unsigned int*)
00000000005d9bc8 T TouchDetection::InitTouchDetection(TouchProcessingInput*)
00000000005dde40 T TouchDetection::MatchBlobsToTracks()
00000000005db720 T TouchDetection::MergeSameBlobsData(CclAlgorithmInput&)
00000000005e4ec8 T TouchDetection::ResetForceOtfcData()
00000000005e3704 T TouchDetection::CalculateBlobRadius(unsigned char (*) [288], BlobFeatureStruct*, eAXIS)
00000000005e2758 T TouchDetection::UpdateTrackCounters(TrackDataStruct*, unsigned char)
00000000005dbb4c T TouchDetection::SetBlobOnBorderFlags(BlobFeatureStruct*)
00000000005e027c T TouchDetection::CopyBlobToFingerInput(ReportInformation*, unsigned char, unsigned short, JunctionFloat*, unsigned char, unsigned char&, unsigned char, unsigned char, unsigned char, unsigned char)
00000000005dbf58 T TouchDetection::DetectPeakPerJunction(unsigned char (*) [288], BlobFeatureStruct*, Junction)
00000000005daf58 T TouchDetection::GenerateIrregularEvent(DataProtectedGeneral*, unsigned char)
00000000005dc264 T TouchDetection::HaloFeatureCalculation(unsigned char (*) [288], BlobFeatureStruct*)
00000000005e283c T TouchDetection::IsFirstOccurrenceValid(float, bool)
00000000005e4548 T TouchDetection::IsValidBlobToOpenTrack(BlobFeatureStruct&)
00000000005e3a18 T TouchDetection::MergePeaksByLongSaddle(unsigned char (*) [288], BlobFeatureStruct*)
00000000005def84 T TouchDetection::PalmByProximityHandler(TouchProcessingInput const*)
00000000005e83b8 T TouchDetection::RunBorderPalmRejection(TouchProcessingInput*, TrackDataStruct*)
00000000005e4924 T TouchDetection::ThumbsHeuristicsUpdate(BlobFeatureStruct*, ThumbsHeuristicCfg*)
00000000005daa38 T TouchDetection::TouchDetectionTracking(TouchProcessingInput*)
00000000005e3468 T TouchDetection::GetNeighborsDataForPeak(unsigned char (*) [288], Junction, unsigned char&, unsigned char&, Junction&)
00000000005e3830 T TouchDetection::MergePeaksByShortSaddle(unsigned char (*) [288], BlobFeatureStruct*)
00000000005e8f40 T TouchDetection::PenRadialNormalizeAngle(PenPositionsAnts, JunctionFloat)
00000000005e7030 T TouchDetection::UpdatePalmBlobInPalmMap(BlobFeatureStruct*, bool)
00000000005de180 T TouchDetection::HandleTracksWithoutMatch()
00000000005dba54 T TouchDetection::IsCenterOfMassUnderCampo(BlobFeatureStruct*, TouchProcessingInput*, unsigned char)
00000000005ddb68 T TouchDetection::TreeClassifierHeuristics(BlobFeatureStruct*)
00000000005e5b84 T TouchDetection::AnalyzeHistoryToDetectTap(TrackDataStruct*)
00000000005dab48 T TouchDetection::PostTouchDetectionProcess()
00000000005e28c0 T TouchDetection::RecalculateComWithPadding(BlobFeatureStruct const*, TrackDataStruct*, unsigned char (*) [288])
00000000005e3fa4 T TouchDetection::RunCclForSpecificJunction(CclAlgorithmInput&, unsigned short, unsigned short, unsigned char)
00000000005ded24 T TouchDetection::RunPenDrivenPalmRejection(TouchProcessingInput*)
00000000005e7d7c T TouchDetection::RunPenRadialPalmRejection(TouchProcessingInput*, TrackDataStruct*)
00000000005dc194 T TouchDetection::TopographySegmentationCut(unsigned char (*) [288], BlobFeatureStruct*)
00000000005dacbc T TouchDetection::TouchDetectionPostProcess(TouchProcessingInput*)
00000000005db1cc T TouchDetection::UpdatePalmHeuristicsState(DataProtectedGeneral*)
00000000005e444c T TouchDetection::CalcNewParamsForMergedBlobs(CclAlgorithmInput&, unsigned char)
00000000005db0fc T TouchDetection::InitForceOtfcDataEveryCycle()
00000000005e2814 T TouchDetection::IsValidBlobToSendToTrackLib(unsigned char)
00000000005e4a34 T TouchDetection::SmallFingerHeuristicsUpdate(BlobFeatureStruct*)
00000000005df2ec T TouchDetection::ActiveWithSuspensionHandling()
00000000005e3410 T TouchDetection::CountLowerAndEqualNeighbours(float, float, unsigned char&, unsigned char&)
00000000005dc3fc T TouchDetection::FillLongTouchedAntennasArray(unsigned short, unsigned short)
00000000005e27cc T TouchDetection::GetScanTimeByLongAxisPosition(float)
00000000005dbaac T TouchDetection::CalculateFeaturesForMustBePalm(BlobFeatureStruct*)
00000000005daf24 T TouchDetection::GenerateIrregularEventIfNeeded(TouchProcessingInput*)
00000000005db9d0 T TouchDetection::CleanTouchDetectionTrackingData()
00000000005db0b8 T TouchDetection::IsForceOtfcAllowedTouchCriteria()
00000000005db460 T TouchDetection::CalculateAdaptiveThresholdForCcl()
00000000005e4c34 T TouchDetection::HaloFeatureRunHaloDetectionPhase(unsigned char (*) [288], unsigned char (*) [16], BlobFeatureStruct*, float, float, unsigned char)
00000000005e4aa8 T TouchDetection::HaloFeatureRunMeatDetectionPhase(unsigned char (*) [288], unsigned char (*) [16], BlobFeatureStruct*, float)
00000000005e64bc T TouchDetection::IsTrackTypeShouldBeChangedDirect(TrackDataStruct*, BlobFeatureStruct*, eCLASSIFIER_BLOB_TYPE)
00000000005e3d28 T TouchDetection::RunTopographySegmentationFeature(unsigned char (*) [288], BlobFeatureStruct*)
00000000005e3c54 T TouchDetection::InitTopograpgySegmentationFeature(BlobFeatureStruct*)
00000000005e36a4 T TouchDetection::CalculateTokenWeightPerAntForRadius(unsigned char*, unsigned short, unsigned short)
00000000005e0fdc T TouchDetection::IsCurrJunctionOrNeighborsAreTouched(unsigned char const (*) [288], Junction const&)
00000000005e674c T TouchDetection::IsTrackTypeShouldBeChangedByHistory(TrackDataStruct*, BlobFeatureStruct*, eCLASSIFIER_BLOB_TYPE)
00000000005e6240 T TouchDetection::UpdateLlrArrayAccordingToReliefZone(TrackDataStruct*, BlobFeatureStruct*)
00000000005df214 T TouchDetection::UpdatePalmIndicationForConfidnceBit()
00000000005e58dc T TouchDetection::UpdateTrackListAccordingToHungarian(HungarianInput&, unsigned char*, unsigned char*)
00000000005ddd60 T TouchDetection::HandleTouchDetectionTrackingCleaning(TouchProcessingInput*)
00000000005e10a8 T TouchDetection::IsTrackMappedToPalmJunctionInPalmMap(TrackDataStruct*)
00000000005e712c T TouchDetection::IsValidTransitionFromBlobToTrackType(eCLASSIFIER_BLOB_TYPE, float, float, float*, int*, short)
00000000005e4ee4 T TouchDetection::UpdateIsForceOtfcAllowedByCurrentTrack(TrackDataStruct*)
00000000005e4694 T TouchDetection::CheckIfStrongNextNeighborJunctionExists(CclAlgorithmInput const&, unsigned int, unsigned int)
00000000005e5130 T TouchDetection::HandleSingleTouchToMultiTouchTransition(TouchProcessingInput*)
00000000005e84cc T TouchDetection::PerformOtfLearningForPenRadialAlgorithm(TouchProcessingInput*, TrackDataStruct*)
00000000005e3354 T TouchDetection::UpdatePalmByProximityAccordingToPalmMapCriteria(TrackDataStruct*)
00000000005d9280 T TouchDetection::Init(TouchProcessingMngrInitStruct*, TouchTrackDataCfg*, TouchPostProcessingCfg*, TouchDetectionCfg*, StaticConfig*)
00000000005e33e8 T TouchDetection::GetMaxFramesForActiveWithSuspensionToKeepUncertain()
00000000005e2ecc T TouchDetection::UpdatePalmByProximityAccordingToDistanceFromPalmCriteria(TrackDataStruct*, float, unsigned char&)
00000000005db5cc T TouchDetection::RunCcl(CclAlgorithmInput&)
00000000005db4d4 T TouchDetection::InitCcl(CclAlgorithmInput&)
00000000005d9e64 T TouchDetection::CclLogic(TouchProcessingInput*)
00000000003aa840 T UsageTimeStats::UpdateCurrentClock(unsigned int, bool)
00000000003aa1ac T UsageTimeStats::SendTelemetryInternal(int)
00000000003aa82c T UsageTimeStats::IncrementFwSentStatsCounter()
00000000003aa818 T UsageTimeStats::UpdateTotalMwProcessingTime(unsigned int)
00000000003aa31c T UsageTimeStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003aa308 T UsageTimeStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000003aa158 T UsageTimeStats::Init()
00000000002eeff8 T CommonUtilities::CalcDistance2(float const*, float const*)
00000000002eefa8 T CommonUtilities::SqrtApproximation(unsigned short)
00000000002ef010 T CommonUtilities::CosineApproximation(float)
00000000002ef270 T CommonUtilities::ComputeTimestampDiffWithRollover(int, eChipType)
00000000002eef3c T CommonUtilities::IsOdd(unsigned int)
00000000002eef50 T CommonUtilities::Sqrt2(float)
00000000002ef0d0 T CommonUtilities::atan2(float, float)
00000000002eef44 T CommonUtilities::IsEven(unsigned int)
00000000002d4660 T CommonUtilities::StrCpy(char*, unsigned int, char const*)
00000000002eef88 T CommonUtilities::BitCount(unsigned int)
00000000002ef97c T FeedbackManager::SendFeedback(unsigned char*, unsigned short, EosHeatDevice const*, unsigned char)
00000000002ef970 T FeedbackManager::SendFeedback(unsigned char*, unsigned short, unsigned char)
00000000002f51b4 T FeedbackManager::SendFeedback(bool, EosHeatDevice const*)
00000000002ef968 T FeedbackManager::SetHeatDevice(EosHeatDevice const*)
00000000002f6dc0 T FeedbackManager::UpdatePenData(FeedbackPayloadFwPenV03&, FeedbackPayloadFwPenMPP2p6&, unsigned int)
00000000002ef6a8 T FeedbackManager::SetPenPresence(bool)
00000000002ef538 T FeedbackManager::EnableFeedbacks()
00000000002ef638 T FeedbackManager::InitPenFeedback()
00000000002f6890 T FeedbackManager::SendCnmResponse(unsigned char const*, unsigned int)
00000000002f5cdc T FeedbackManager::SendFeedbackV03(EosHeatDevice const*)
00000000002f51e8 T FeedbackManager::SendFeedbackV06(EosHeatDevice const*, bool)
00000000002f9a64 T FeedbackManager::UpdateCampoData(CampoFeedbackData*, CampoDetectionOutputStruct*, unsigned short)
00000000002f9aa4 T FeedbackManager::UpdateTouchData(unsigned char, unsigned short)
00000000002fa114 T FeedbackManager::DisableFeedbacks()
00000000002ef678 T FeedbackManager::CleanFeedbackData()
00000000002f6874 T FeedbackManager::IsSendFeedbackV03()
00000000002f6810 T FeedbackManager::IsSendFeedbackV06()
00000000002fa034 T FeedbackManager::SetFwMppSupported(ePEN_PROTOCOL_VERSION)
00000000002f682c T FeedbackManager::UpdateInitPenData()
00000000002fa088 T FeedbackManager::UpdateDisplayStates(unsigned char, bool, unsigned int, RegionConfigData*, bool)
00000000002fa214 T FeedbackManager::UpdateRecordBitmask(FbBitmapRecordData*, bool)
00000000002fa048 T FeedbackManager::SendDebugPenIdFeedback(unsigned int)
00000000002f2434 T FeedbackManager::SendSwitchModeFeedback(EosHeatDevice const*)
00000000002fa254 T FeedbackManager::SendRecordBitmapFeedback(EosHeatDevice const*)
00000000002f1d74 T FeedbackManager::GetFeedbackReportIdByType(EosHeatDevice const*, unsigned short, unsigned short, eFEEDBACK_REPORT_ID_TYPE, eHID_REPORT_TYPE)
00000000002f2a9c T FeedbackManager::SendDisplayStatesFeedback(EosHeatDevice const*, bool)
00000000002f2a8c T FeedbackManager::SendDisplayStatesFeedback(bool)
00000000002f4f48 T FeedbackManager::SendInternalFeedbackBuffer(EosHeatDevice const*)
00000000002f4f40 T FeedbackManager::SendInternalFeedbackBuffer()
00000000002f2a84 T FeedbackManager::UpdateFastHostIdDisplayFeedback(unsigned short)
00000000002fa02c T FeedbackManager::UpdateTrackPadInDisplayFeedback(RegionConfigData const*)
00000000002f1484 T FeedbackManager::GetFeedbackReportIdAndIoControlCode(EosHeatDevice const*, unsigned short, unsigned short, eFEEDBACK_REPORT_ID_TYPE, eHID_REPORT_TYPE*, unsigned char*)
00000000002f9ab8 T FeedbackManager::UpdatePanelAlignmentDataInDisplayFeedback(float const*)
00000000002ef290 T FeedbackManager::Init(IHeatAdaptor*, IHidDescriptorParser*)
00000000003aa974 T TouchStudyStats::SendTelemetryInternal(int)
00000000003aa85c T TouchStudyStats::UpdateTouchStudyMwCounter(TouchStudyTelemetryOutputStruct const&)
00000000003aab64 T TouchStudyStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003aab50 T TouchStudyStats::WriteToFileTelemetryInternal(char const*, char const*)
000000000069d264 T BorderCorruption::GetHistory(eBORDER_HISTORY_TYPE)
000000000069cf78 T BorderCorruption::UpdateHistory(BorderCorruptionHistory)
000000000069cfd0 T BorderCorruption::HandleNewPosition(XgBoostLogicAuxiliaryData&, eBORDER_HISTORY_TYPE)
000000000069cf1c T BorderCorruption::HandleBorderCorruption(PenPositionOut&, XgBoostLogicAuxiliaryData&, ePEN_COM_SCENARIO*, eBORDER_HISTORY_TYPE)
000000000069ce7c T BorderCorruption::TriggerBorderCorruption(PenPositionIn const&, PenPositionOut&, ePEN_PRE_LS_CRITERIA, bool, bool)
000000000069ce60 T BorderCorruption::Reset()
000000000069ce44 T BorderCorruption::BorderCorruption()
000000000069ce44 T BorderCorruption::BorderCorruption()
00000000004b41a8 T OtfcStats_Incell::SendTelemetryInternal(int)
0000000000662ee0 T PenBeaconProcess::ProcessBeacon(PenBeaconProcessOut&, PenBeaconProcessIn const&)
0000000000663508 T PenBeaconProcess::CopyBeaconData(BeaconData*, PenProcessInput)
0000000000d2ed28 B PenBeaconProcess::mpDataSelectionCfg
00000000006635dc T PenBeaconProcess::PreparePositionInput(PenPositionIn&, PenBeaconProcessIn const&)
0000000000663290 T PenBeaconProcess::RunPositionAlgorithm(PenBeaconProcessIn const&, PenBeaconProcessOut&)
00000000006635c8 T PenBeaconProcess::HandleBlackprintOutput(PenBeaconProcessOut&, PenBlackPrintOut const&)
0000000000663544 T PenBeaconProcess::PrepareBlackprintInput(PenBlackPrintIn&, PenBeaconProcessIn const&)
00000000006631a8 T PenBeaconProcess::RunBlackPrintAlgorithm(PenBeaconProcessIn const&, PenBeaconProcessOut&)
0000000000663444 T PenBeaconProcess::DetermineNoisyEnvironment(PenBeaconProcessIn const&, PenBeaconProcessOut&)
0000000000d2ed20 B PenBeaconProcess::mpTrackDetectionAdditionalParams
0000000000662d4c T PenBeaconProcess::Init(PenPosition*, PenThrsAndTrackCfgTuning*, DataSelectionCfg*)
0000000000662ed4 T PenBeaconProcess::Reset()
0000000000d2ed58 B PenCommonUtility::mNumOfAnts
0000000000d2ed60 B PenCommonUtility::mpAntToRegionIndex
00000000006870d4 T PenCommonUtility::FindMaxMagUsingDftResults(unsigned char*, unsigned int*, PenDftResult const&, unsigned char, unsigned char)
000000000068712c T PenCommonUtility::CompareValueWithThresholds(float, float, float, bool, bool&)
0000000000d2ed70 B PenCommonUtility::mpPenThrsAndTrackCfgTuning
000000000068633c T PenCommonUtility::GetRegionIndexByAntennaAndAxis(unsigned char, unsigned char)
0000000000686374 T PenCommonUtility::CalculateMagAroundCentralAntenna(PenDftResult*, unsigned int*, unsigned int*, eAXIS, ePEN_HOVER_HEIGHT, RegionOfInterest*)
00000000006861c0 T PenCommonUtility::Init(PenCommonUtilityInitStruct*, PenThrsAndTrackCfgTuning*)
00000000003ae924 T PenPositionStats::SendTelemetryInternal(int)
00000000002a3660 V PenPositionStats::STROKE_CURVATURE_BIN_ENDS
00000000003aeb3c T PenPositionStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003aeb28 T PenPositionStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000003ae7c8 T PenPositionStats::Init()
000000000064f318 T ZDistanceHandler::ResetState()
000000000064f328 T ZDistanceHandler::ClipZInputValue(float)
000000000064f728 T ZDistanceHandler::HandleZDistance(bool, float, ePEN_PROCESS_TYPE, bool, ZfiPostProcessStatsOutput*)
000000000064f4f4 T ZDistanceHandler::GetCurrentZDistance(bool, float, ePEN_PROCESS_TYPE)
000000000064f3f8 T ZDistanceHandler::UpdateCompareToModel()
000000000064f5f0 T ZDistanceHandler::UpdateZRelatedCounters(float)
000000000064f4b0 T ZDistanceHandler::UpdateAverageZWithPressure()
000000000064f524 T ZDistanceHandler::UpdateIsInkingAccordingToZfi(float)
0000000000650774 T ZDistanceHandler::UpdateZfiIndicationForUplink()
000000000064f36c T ZDistanceHandler::AddZValueToPressurePointsArray(float)
000000000064f5e8 T ZDistanceHandler::GetAverageZDistanceWithPressure()
000000000064f2f4 T ZDistanceHandler::ResetPenSpecificRelatedCounters()
000000000064f2b8 T ZDistanceHandler::Init(PenZeroForceInkingPostProcessCfg*)
000000000069cbd8 T LocalPenIdManager::GetLocalId(unsigned char, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >&)
000000000069ce28 T LocalPenIdManager::ResetState()
000000000069ccf0 T LocalPenIdManager::AssignNewLocalId(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >&)
000000000069cbc8 T LocalPenIdManager::Init()
000000000051c448 T NoiseStats_Incell::SendTelemetryInternal(int)
00000000005be548 T ProjectTuningMngr::GetRegionIdx(float*, eCONFIGURATION_TOPOLOGY)
00000000005bde50 T ProjectTuningMngr::TrackingInit(TouchProcessingInput*, TuProcessInput&, TuProcessOut&)
00000000005bdde8 T ProjectTuningMngr::RunCampoLogic(CampoFeedbackData*, CampoDetectionOutputStruct*, DataProtectedGeneral*, CampoOutput*)
00000000005be408 T ProjectTuningMngr::TrackingPostRun(TouchProcessingInput*, TracklibOutput*)
00000000005be040 T ProjectTuningMngr::TryGetComBuffer()
00000000005be088 T ProjectTuningMngr::RunTrackingLogic(TouchProcessingInput*, TracklibOutput*)
00000000005be508 T ProjectTuningMngr::GetTrackLibObject()
0000000000d2e268 B ProjectTuningMngr::numberOfInstances
00000000005be51c T ProjectTuningMngr::CleanTrackingModules()
00000000005be43c T ProjectTuningMngr::UpdateLogicalGapSize(unsigned int, eAXIS)
00000000005bdc20 T ProjectTuningMngr::InitCommonTrackingCfg(TouchProcessingMngrInitStruct*, CommonTrackingCfg&)
00000000005be4fc T ProjectTuningMngr::GetCampoTrackingObject()
0000000000d2e270 B ProjectTuningMngr::mppProjectTuningMngrArray
00000000005be510 T ProjectTuningMngr::IsForceOtfcAllowedCampoCriteria()
00000000005be45c T ProjectTuningMngr::Run(CampoFeedbackData*, TouchProcessingInput&, TracklibOutput*, CampoOutput*)
00000000005bdb88 T ProjectTuningMngr::Init(TouchProcessingMngrInitStruct*, CampoCfg*, StaticConfig*, TouchPostProcessingCfg*, TouchDetectionCfg*)
00000000005bdb20 T ProjectTuningMngr::ProjectTuningMngr(TouchPostProcessingCfg*)
00000000005bdb20 T ProjectTuningMngr::ProjectTuningMngr(TouchPostProcessingCfg*)
00000000005d54b4 T ReportInformation::FixCropDrop(DropBorderConfigCfg const&, float const*, unsigned char, unsigned char)
00000000005d5578 T ReportInformation::RunStretching(StretchingConfig const&, StretchingIn const&)
00000000005d57e0 T ReportInformation::StretchToBorder(float, float, float&)
00000000005d5450 T ReportInformation::FixOffsetAndRotation(OffsetConfigCfg const&)
00000000005d5844 T ReportInformation::CalcStretchedDistanceFromBorder(float, float, float)
00000000003ae3d0 T TouchReportsStats::SendTelemetryInternal(int)
00000000003ae344 T TouchReportsStats::UpdateTouchReportsMwCounter(TouchReportsTelemetryOutputStruct const&)
00000000003ae4f4 T TouchReportsStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003ae4e0 T TouchReportsStats::WriteToFileTelemetryInternal(char const*, char const*)
0000000000359b4c T CnmHandlingManager::HandleGenericCli()
0000000000355220 T CnmHandlingManager::HandleNewRequest(CnmRequestInfoStruct const&)
000000000035aa50 T CnmHandlingManager::CalculateChecksum(unsigned char*, unsigned short)
00000000003581d0 T CnmHandlingManager::HandleGetMwVersion()
0000000000359324 T CnmHandlingManager::HandlSetDisplayState()
0000000000358c08 T CnmHandlingManager::HandleSetAspectRatio()
000000000035a3c4 T CnmHandlingManager::HandleMwDebugGetStatus()
000000000035a8c0 T CnmHandlingManager::HandleMwDebugReadAddress()
0000000000358a6c T CnmHandlingManager::HandlePassThroughMessage()
0000000000359fec T CnmHandlingManager::HandlePenPressureCurveGet()
000000000035a1b0 T CnmHandlingManager::HandlePenPressureCurveSet()
000000000035c0d8 T CnmHandlingManager::SendUnsolicitedCnmResponse(unsigned char*, unsigned short, unsigned char, unsigned char)
000000000035aa8c T CnmHandlingManager::GenerateAuditLogCnmResponse(AuditLogResponsePayloadStruct const&)
0000000000355104 T CnmHandlingManager::InitGenericCliFunctionArray()
000000000035bacc T CnmHandlingManager::SetCnmReportIdByBufferLength(unsigned char*, unsigned short)
000000000035a7d4 T CnmHandlingManager::HandleMwDebugGetMessageFilter()
000000000035a424 T CnmHandlingManager::HandleMwDebugSetMessageFilter()
0000000000359c08 T CnmHandlingManager::HandleZeroForceInkingControlGetMessage()
0000000000359dcc T CnmHandlingManager::HandleZeroForceInkingControlSetMessage()
0000000000354bdc T CnmHandlingManager::Init(IHeatAdaptor*, std::__1::shared_ptr<PersistentStorage> const&)
00000000003a547c T GeneralErrorsStats::ClearFrameError()
00000000003a5484 T GeneralErrorsStats::ClearWarningCode()
00000000003a4d6c T GeneralErrorsStats::SendTelemetryInternal(int)
00000000003a4ef4 T GeneralErrorsStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003a545c T GeneralErrorsStats::ClearCorruptedFullFrameError()
00000000003a4ee0 T GeneralErrorsStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000003a5444 T GeneralErrorsStats::UpdateCorruptedFullFrameError(int)
00000000003a5464 T GeneralErrorsStats::UpdatePanelAlignmentReadErrorCounter(float)
00000000003a4d5c T GeneralErrorsStats::Init()
00000000006854f0 T PenPressureProcess::FindMaxBin(PenPressureProcessIn const&, PenDftResult*, eAXIS)
0000000000685e30 T PenPressureProcess::SetMaxMagnitude(unsigned int, unsigned char, eAXIS)
0000000000685e44 T PenPressureProcess::SetSecondMaxBin(unsigned int, unsigned char)
0000000000685570 T PenPressureProcess::FindSecondMaxBin(PenPressureProcessIn const&, PenDftResult*, eAXIS)
00000000006851d8 T PenPressureProcess::FindAnalogPressure(PenPressureProcessOut&, PenPressureProcessIn const&, PenDftResult*, PressureResult*, eAXIS)
0000000000686150 T PenPressureProcess::AdjustPressureCurve(unsigned short&)
0000000000684e20 T PenPressureProcess::ProcessAnalogPressure(PenPressureProcessOut&, PenPressureProcessIn const&)
0000000000685660 T PenPressureProcess::CalculatePressureIndex(PressureResult*, PenDftResult*, eAXIS)
0000000000d198ba D PenPressureProcess::mFuncPressureDataBinVectors
00000000006852b0 T PenPressureProcess::CalcAnalogPressureLevelAndPosition(PenPressureProcessOut&, PenPressureProcessIn const&, bool*, PressureResult*, PenPositionOut&)
0000000000685e50 T PenPressureProcess::CombineAnalogAndDigitalProcessPressure(PenPressureProcessOut&, PenPressureProcessIn const&)
0000000000684b58 T PenPressureProcess::Init(PenPosition*, PenThrsAndTrackCfgTuning*, PenPressureManipulationParams*)
0000000000684cd8 T PenPressureProcess::Reset()
00000000005eefb8 T HastaPostProcessing::ResetState()
00000000005f6044 T HastaPostProcessing::GetRegionIdx(int)
00000000005f3420 T HastaPostProcessing::RunTrackManager(PenProcessOutput const&, ZeroForceInkingPostProcessOutput&, HastaTrackManagerOutput&, HastaInternalReport*)
00000000005f6e44 T HastaPostProcessing::GetTimeStampDelta(unsigned char, unsigned char)
00000000005ef868 T HastaPostProcessing::RunPenPostProcessing(PenPostProcessingOut&, PenProcessOutput&)
00000000005f5e30 T HastaPostProcessing::RunPenSpeedEstimation(PenProcessOutput const&, HastaTrackManagerOutput const&, PenPostProcessingOut&)
00000000005ef1bc T HastaPostProcessing::ResetSeamCrossingLogic()
00000000005f5f70 T HastaPostProcessing::TranslateToLcdPosition(int, int, int&, int&, bool)
00000000005f68a8 T HastaPostProcessing::PrepareHastaDigitalInput(PenHastaDigitalProcessIn&, PenProcessOutput const&)
00000000005f1230 T HastaPostProcessing::RunDigitalPostProcessing(PenProcessOutput const&)
00000000005f614c T HastaPostProcessing::UpdatePenIdAndConfidence(unsigned int, unsigned int)
00000000005f2c34 T HastaPostProcessing::UpdateValidRangeIfNeeded(PenProcessOutput const&)
00000000005f2ca4 T HastaPostProcessing::RunZeroForceInkingPostProcess(PenProcessOutput const&, PenPostProcessingOut&)
00000000005f60a8 T HastaPostProcessing::UpdateIsCrossingSeamlineIndication()
00000000005ef1c8 T HastaPostProcessing::Init(HastaPostProcessingInitStruct*, CommonPenTrackingCfg*, PenThrsAndTrackCfgTuning*, PenDigitalProcessingCfg*, PenZeroForceInkingPostProcessCfg*, PenPressureProcess*, eChipType)
00000000005f6060 T HastaPostProcessing::IsFolded()
0000000000d2ab89 B StatsManagerDefines::mTelemetryGroupsInfo
00000000005b9270 T CycleReactorStats_G6::SendTelemetryInternal(int)
00000000005b938c T CycleReactorStats_G6::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000005b9378 T CycleReactorStats_G6::WriteToFileTelemetryInternal(char const*, char const*)
00000000003a548c T GhostIndicationStats::SendTelemetryInternal(int)
00000000003a55c8 T GhostIndicationStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003a55b4 T GhostIndicationStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000003a599c T GhostIndicationStats::IncreaseNumberOfGhostsCounter(unsigned int)
00000000003655f4 T PenProcessingManager::UpdatePenId(PenHidReportStruct*)
00000000003666b8 T PenProcessingManager::ProcessFrame(PenParserInfo&, PenHidReportsContainer*&, unsigned int)
000000000035ff60 T PenProcessingManager::SetFastHostId(unsigned short)
000000000035eb04 T PenProcessingManager::InitFastHostId()
0000000000361d64 T PenProcessingManager::PenIdFiltering()
00000000003617ec T PenProcessingManager::ResetOnPenLift()
0000000000361944 T PenProcessingManager::UpdateReporter()
000000000035e20c T PenProcessingManager::InitPenHistoryDb()
0000000000363878 T PenProcessingManager::PreparePenReport(PenMsgInfo&, PenHidReportStruct*, unsigned short, unsigned char)
00000000003670dc T PenProcessingManager::PreparePenReport(PenReportV2&, PenHidReportStruct*, unsigned short, unsigned char)
00000000003671b8 T PenProcessingManager::RotateToPortrait(int*, int*)
000000000035f910 T PenProcessingManager::InitPenProcessing()
0000000000361d24 T PenProcessingManager::LocalIdProcessing()
0000000000360c84 T PenProcessingManager::PenProcessingFlow(PenProcessInfo&, bool)
0000000000367164 T PenProcessingManager::UpdateEraserState(unsigned char, PenHidReportStruct*)
0000000000363870 T PenProcessingManager::GetPenReportsCount()
0000000000360814 T PenProcessingManager::GetReportContainer()
00000000003605c0 T PenProcessingManager::InitZeroForceInking()
0000000000360818 T PenProcessingManager::IsUpdatePenFeedback(eWINDOW_TYPE)
0000000000361e48 T PenProcessingManager::UpdatePenStudyStats()
000000000035f730 T PenProcessingManager::InitPenCommonUtility()
000000000035d938 T PenProcessingManager::InitPenManagerInputs()
000000000035db38 T PenProcessingManager::InitPenPressureCurve()
00000000003605a8 T PenProcessingManager::GenerateNewFastHostId()
00000000003671d8 T PenProcessingManager::GetCurrentEraserState(unsigned char)
000000000035fb68 T PenProcessingManager::InitPenPostProcessing()
0000000000366548 T PenProcessingManager::GetLastPenReportInAnts(PenPositionsAnts*, eCONFIGURATION_TOPOLOGY)
0000000000362c38 T PenProcessingManager::UpdatePenPositionStats()
0000000000362d9c T PenProcessingManager::UpdatePersistentStorage(unsigned int)
0000000000367204 T PenProcessingManager::GetLastPenTiltAndAzimuth(unsigned short&, unsigned short&)
000000000035dd88 T PenProcessingManager::InitCommonTrackingConfig()
0000000000367218 T PenProcessingManager::UpdatePenIdInFinalReport(unsigned int)
0000000000365fd0 T PenProcessingManager::CleanPenProcessingManager(eREGION_ID)
0000000000361554 T PenProcessingManager::InitiatePenProcessingFlow(PenProcessInfo&)
0000000000362aec T PenProcessingManager::UpdateZeroForceInkingInfo(PenProcessInfo&)
000000000035d918 T PenProcessingManager::SetValuesForStopTrackingPen()
000000000036560c T PenProcessingManager::UpdatePenTrackingDataStruct(PenHidReportStruct*, bool)
0000000000360958 T PenProcessingManager::UpdatePenFeedbackIfNecessary(PenProcessInfo&)
00000000003652d4 T PenProcessingManager::UpdatePenTargetRegionAndPostion(PenHidReportStruct*)
0000000000366540 T PenProcessingManager::CleanPenPostProcessingSeamCrossingLogic()
000000000035d50c T PenProcessingManager::Init(std::__1::shared_ptr<Timer> const&, std::__1::shared_ptr<PersistentStorage> const&, float const*)
0000000000480058 T PenStudyStats_Incell::SendTelemetryInternal(int)
00000000006947ec T PenVoltageCalculator::ComputeVoltage(ZeroForceInkingProcessInput&, float (*) [2][9], int*, float*)
00000000006944a4 T PenVoltageCalculator::ComputeQuadraticFeatures(float*, float*)
000000000064efa0 T PressureEntryHistory::AddEntryPressure(unsigned short, unsigned int)
000000000064f0e4 T PressureEntryHistory::GetAveragePressureToUse(unsigned int, unsigned short&)
000000000064f08c T PressureEntryHistory::UpdateNextCycleToCheckAndComputeAverage()
000000000064ef88 T PressureEntryHistory::Init()
000000000064f1e0 T PressureEntryHistory::RemoveOld(unsigned int)
00000000003adee4 T ZeroForceInkingStats::UpdateMissedZfi(bool, bool)
00000000003ab9d8 T ZeroForceInkingStats::SendTelemetryInternal(int)
00000000003adf04 T ZeroForceInkingStats::UpdateZfiWithNoPressure(bool, unsigned short)
00000000003adf4c T ZeroForceInkingStats::UpdateInitialTriangleGap(bool, int, bool)
00000000003adf34 T ZeroForceInkingStats::UpdateStrokeStartWithZfi(bool)
00000000003ae2c4 T ZeroForceInkingStats::UpdateCompareToModelState(bool, bool, bool, bool)
00000000003ae174 T ZeroForceInkingStats::UpdateCompareToModelValues(bool, float, float)
00000000003ae038 T ZeroForceInkingStats::UpdateZfiVsPressureInStroke(unsigned int, unsigned int)
00000000003abe10 T ZeroForceInkingStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003abdb4 T ZeroForceInkingStats::WriteToFileTelemetryInternal(char const*, char const*)
00000000003adfcc T ZeroForceInkingStats::UpdateNumberOfCyclesToComputeVoltage(int)
000000000038a23c T ConfigurationDataBase::GetCurrentProjectConfig()
0000000000389adc T ConfigurationDataBase::SetCurrentProjectConfig(unsigned int)
000000000038a244 T ConfigurationDataBase::GetNumberOfTopologyConfigurations()
0000000000368048 T ConfigurationDataBase::ConfigurationDataBase()
0000000000368048 T ConfigurationDataBase::ConfigurationDataBase()
000000000039d860 T PanelAlignmentManager::GetPanelAlignmentOffset(eREGION_ID)
000000000039d868 T PanelAlignmentManager::GetPanelAlignmentOffsetsPtr()
000000000039d870 T PanelAlignmentManager::SetCurrentPanelAlignmentOffset(eREGION_ID, float)
000000000039ce84 T PanelAlignmentManager::Init(eREGION_ID, std::__1::shared_ptr<PersistentStorage> const&)
000000000039d8e8 T PanelAlignmentManager::ReInit()
00000000002dd2c0 T HidDescriptorParserEos::SaveDescriptor(EosHeatDevice const*)
00000000002dd404 T HidDescriptorParserEos::GetHidDescriptorReportId(EosHeatDevice const*, eHID_REPORT_TYPE, unsigned short, unsigned short, unsigned char*)
00000000002dd180 T HidDescriptorParserEos::Init()
00000000002dd99c T HidDescriptorParserEos::~HidDescriptorParserEos()
00000000002dd998 T HidDescriptorParserEos::~HidDescriptorParserEos()
00000000002dd998 T HidDescriptorParserEos::~HidDescriptorParserEos()
000000000068afb8 T PenHastaDigitalProcess::HandlePenId(unsigned char, PenHastaDigitalProcessIn const&, PenHastaDigitalProcessOut&)
000000000068cb98 T PenHastaDigitalProcess::isParityBit(ePARITY_BIT_INDEX, unsigned char)
000000000068c474 T PenHastaDigitalProcess::HandleLocalId(unsigned char, unsigned int, bool)
0000000000689478 T PenHastaDigitalProcess::ParseDataBits()
0000000000689878 T PenHastaDigitalProcess::CheckHammingCode(bool*)
000000000068a160 T PenHastaDigitalProcess::HandleStatusMessage(eAPP_ACK_STATUS_DATA&)
000000000068ac78 T PenHastaDigitalProcess::HandleButtonsMessage(PenHastaDigitalProcessOut&)
0000000000687c94 T PenHastaDigitalProcess::ResetPenIdAggregation()
0000000000687cb4 T PenHastaDigitalProcess::RunButtonStateMachine(eBUTTON_STATE_INPUT)
000000000068d304 T PenHastaDigitalProcess::ConvertBoolArrayTo1Byte(bool*, unsigned char, unsigned char)
0000000000687da8 T PenHastaDigitalProcess::RunPenHastaDigitalProcess(PenHastaDigitalProcessOut&, PenHastaDigitalProcessIn const&)
0000000000687ad8 T PenHastaDigitalProcess::ClearHastaDigitalStatistics()
000000000068d518 T PenHastaDigitalProcess::RunPenHastaNoDetectionLogic(PenHastaDigitalProcessOut&)
0000000000687980 T PenHastaDigitalProcess::Init(PenDigitalProcessingCfg*)
0000000000687ae8 T PenHastaDigitalProcess::Reset()
000000000068cbf8 T PenHastaDigitalProcess::CheckCrc4(bool*)
0000000000417db8 T PenProcessStats_Incell::SendTelemetryInternal(int)
00000000006949e8 T PenZDistanceCalculator::ComputeZDistance(float (*) [2][9], int*, ZDistanceCfg&, float, bool, unsigned int, float&)
0000000000694990 T PenZDistanceCalculator::HandleRingCorruption(float*, unsigned int, bool)
0000000000694958 T PenZDistanceCalculator::FreezeRingRelatedFeatures(float*, unsigned int)
0000000000d2eeec B PenZDistanceCalculator::mLastValidRingRelatedFeatures
0000000000d2eee8 B PenZDistanceCalculator::mLastValidRingRelatedFeaturesCycleNumber
00000000005d07bc T TouchProcessingManager::ProcessFrame(CampoFeedbackData*, TouchProcessingInput*, TracklibOutput*, CampoOutput*)
00000000005d0608 T TouchProcessingManager::CleanTouchModules()
0000000000d19889 D TouchProcessingManager::numberOfInstances
00000000005d0a10 T TouchProcessingManager::InitTouchSharedData(TouchProcessingInput*)
00000000005d0658 T TouchProcessingManager::TouchDetectionLogic(TouchProcessingInput*)
00000000005d0b68 T TouchProcessingManager::CreateVirtualTouchedAnt(TouchProcessingInput*)
00000000005d0b48 T TouchProcessingManager::NotifyCampoTrackingClosed()
00000000005d0b58 T TouchProcessingManager::NotifyCampoTrackingStarted()
00000000005d0654 T TouchProcessingManager::IsForceOtfcAllowedTouchCriteria()
00000000005d0568 T TouchProcessingManager::Init(TouchProcessingMngrInitStruct*, TouchTrackDataCfg*, TouchPostProcessingCfg*, TouchDetectionCfg*, StaticConfig*, CampoCfg*)
0000000000d2e578 B TouchProcessingManager::instances
00000000005846e8 T CfuFailuresStats_Incell::SendTelemetryInternal(int)
000000000044bf08 T GeneralInfoStats_Incell::SendTelemetryInternal(int)
0000000000691460 T PenLegacyDigitalProcess::FindDigital(PenLegacyDigitalOutput&, PenLegacyDigitalInput const&)
0000000000692848 T PenLegacyDigitalProcess::AddOtherData(unsigned char, unsigned char, unsigned short&, unsigned short&)
0000000000691d40 T PenLegacyDigitalProcess::AnalyzeButton(unsigned char&, unsigned char&, short, short, short, short)
0000000000691fbc T PenLegacyDigitalProcess::AnalyzeDigital(PenLegacyDigitalData&, ePEN_DIGITAL_PULSE_TYPE)
0000000000691444 T PenLegacyDigitalProcess::ProcessDigital(PenLegacyDigitalOutput&, PenLegacyDigitalInput const&)
0000000000692010 T PenLegacyDigitalProcess::FindMaxDigitalBit(ePEN_DIGITAL_PULSE_TYPE&, unsigned int&, unsigned int, unsigned int, unsigned int)
00000000006920b0 T PenLegacyDigitalProcess::UpdateButtonExitState()
0000000000692098 T PenLegacyDigitalProcess::UpdateButtonEnterState()
0000000000691aac T PenLegacyDigitalProcess::IsDigitalPulseTypeFound(ePEN_DIGITAL_PULSE_TYPE&, ePEN_DIGITAL_PORT_TYPE&, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000691d78 T PenLegacyDigitalProcess::CombinePortAndButtonData(ePEN_DIGITAL_PORT_TYPE&, unsigned char&, unsigned char&)
0000000000692484 T PenLegacyDigitalProcess::ParseDataAndCheckIfValid(PenLegacyDigitalData&)
0000000000691ea8 T PenLegacyDigitalProcess::RunDigitalDecisionHysteresis(ePEN_DIGITAL_PORT_TYPE&, unsigned char, unsigned char&, unsigned char&)
0000000000691190 T PenLegacyDigitalProcess::Init(PenThrsAndTrackCfgTuning*)
00000000006912ec T PenLegacyDigitalProcess::Reset()
00000000006920d4 T PenLegacyDigitalProcess::AddBit(unsigned short&, unsigned short&, ePEN_DIGITAL_PULSE_TYPE)
000000000068438c T PenPressureManipulation::HastaIdealInverse(short)
0000000000684458 T PenPressureManipulation::PressureCurveUserDefined(float)
00000000006841f0 T PenPressureManipulation::Init()
0000000000684344 T PenPressureManipulation::SetParams(PenPressureManipulationParams const*)
00000000002eb700 T SurfaceHeatProcessorEos::GetAxisRange()
00000000002e8668 T SurfaceHeatProcessorEos::OnDeviceReset(EosHeatDevice const&)
00000000002e2b68 T SurfaceHeatProcessorEos::InitPenTouchMw(EosHeatDevice const&, char const*, IEosHeatService*, unsigned short)
00000000002ea2ac T SurfaceHeatProcessorEos::OnDisplayChange(EosHeatDevice const&, bool)
00000000002e6eb4 T SurfaceHeatProcessorEos::OnDeviceAttached(EosHeatDevice const&)
00000000002e7c78 T SurfaceHeatProcessorEos::OnDeviceDetached(EosHeatDevice const&)
00000000002e8d70 T SurfaceHeatProcessorEos::OnHingeAngleChange(EosHeatDevice const&, EosHeatDevice const&, float)
00000000002e9bb4 T SurfaceHeatProcessorEos::OnStitchingModeChange(bool)
00000000002e64ac T SurfaceHeatProcessorEos::ProcessIncomingReport(EosHeatDevice const&, HidReport)
00000000002ed198 T SurfaceHeatProcessorEos::OnDeviceRotationChange(unsigned short)
00000000002e67b0 T SurfaceHeatProcessorEos::PostDispatchProcessing(EosHeatDevice const&)
00000000002e4864 T SurfaceHeatProcessorEos::ProcessIncomingReportHeat(EosHeatDevice const&, HidReport)
00000000002eb1e0 T SurfaceHeatProcessorEos::OnRightOrLeftHandModeChange(eEOS_RIGHT_OR_LEFT_HAND_MODE)
00000000002ecc70 T SurfaceHeatProcessorEos::GetMaxConcurrentPenTouchSlots()
00000000002e4114 T SurfaceHeatProcessorEos::ProcessIncomingReportHeartbeat(EosHeatDevice const&, HidReport const&)
00000000002e29f4 T SurfaceHeatProcessorEos::SurfaceHeatProcessorEos()
00000000002e29f4 T SurfaceHeatProcessorEos::SurfaceHeatProcessorEos()
00000000002ecc4c T SurfaceHeatProcessorEos::~SurfaceHeatProcessorEos()
00000000002ecb00 T SurfaceHeatProcessorEos::~SurfaceHeatProcessorEos()
00000000002ecb00 T SurfaceHeatProcessorEos::~SurfaceHeatProcessorEos()
000000000039a144 T PanelAlignmentReaderBase::GetPanelAlignmentOffset(eREGION_ID)
000000000039a168 T PanelAlignmentReaderBase::GetPanelAlignmentOffsetsPtr()
000000000039a170 T PanelAlignmentReaderBase::SetCurrentPanelAlignmentOffset(eREGION_ID, float)
0000000000399d54 T PanelAlignmentReaderBase::Init()
00000000005b8838 T PensDistanceStats_Incell::SendTelemetryInternal(int)
00000000002df7c0 T PersistentStorageManager::GetDebugDataFileToWrite(bool&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
00000000002dfc1c T PersistentStorageManager::InitPersistentStorageTypeToFileNameDict()
00000000002e0624 T PersistentStorageManager::Init(EosHeatDevice const*)
00000000002dd9a0 T PersistentStorageManager::Read(ePERSISTENT_STORAGE_TYPES, unsigned char*, unsigned int&)
00000000002de864 T PersistentStorageManager::Write(ePERSISTENT_STORAGE_TYPES, unsigned char*, unsigned int, bool)
00000000002e0d34 T PersistentStorageManager::Delete(ePERSISTENT_STORAGE_TYPES)
00000000004e82f8 T GeneralErrorsStats_Incell::SendTelemetryInternal(int)
0000000000692cbc T PenProximityNeuralNetwork::ApplySigmoid(float)
00000000006928b4 T PenProximityNeuralNetwork::ApplyMapMinMax(float*, float*, unsigned long, float*, float*, float)
0000000000693184 T PenProximityNeuralNetwork::ApplyNetworkLayer(float*, unsigned long, float*, unsigned long, float*, float*, bool)
00000000006938d0 T PenProximityNeuralNetwork::CalculateProximity(float*, ZDistanceNeuralNetworkCfg&)
0000000000692cf0 T PenProximityNeuralNetwork::ApplySigmoidOnArray(float*, unsigned long)
0000000000692ab8 T PenProximityNeuralNetwork::ApplyReverseMapMinMax(float*, float*, unsigned long, float*, float*, float)
000000000065e884 T PenSpeedEstimationManager::ResetState(bool)
000000000065efc8 T PenSpeedEstimationManager::SmoothSpeed()
000000000065ead0 T PenSpeedEstimationManager::GetParameter(eSPEED_ESTIMATION_PARAMETER, unsigned char)
000000000065e93c T PenSpeedEstimationManager::SetParameter(eSPEED_ESTIMATION_PARAMETER, unsigned char, float)
000000000065f3f4 T PenSpeedEstimationManager::EstimateSpeed(PenSpeedEstimationInput&, PenSpeedEstimationOutput&)
000000000065f0b8 T PenSpeedEstimationManager::QuantizeSpeed()
000000000065ec9c T PenSpeedEstimationManager::ExtractFeatures(SpeedHistoryStruct&)
000000000065ef6c T PenSpeedEstimationManager::FilterEstimator()
0000000000d2ed10 B PenSpeedEstimationManager::mSpeedHistoryCount
000000000065ebb8 T PenSpeedEstimationManager::ComputeNoiseFromSnr(float)
0000000000d2ecf8 B PenSpeedEstimationManager::mSpeedHistoryWeights
000000000065ec30 T PenSpeedEstimationManager::BuildCurrentDataPoint(PenSpeedEstimationInput&, SpeedHistoryStruct&)
000000000065ef08 T PenSpeedEstimationManager::ComputeRoughEstimator()
000000000065f0f4 T PenSpeedEstimationManager::EstimateSpeedInternal(PenSpeedEstimationInput&, PenSpeedEstimationOutput&)
000000000065ee68 T PenSpeedEstimationManager::UpdateDataPointsHistory(SpeedHistoryStruct&)
0000000000d19898 D PenSpeedEstimationManager::mDataPointsHistoryCount
0000000000d198a8 D PenSpeedEstimationManager::mPositionToNoiseThreshold
0000000000d1988c D PenSpeedEstimationManager::mNoiseLinearFunctionFactorA
0000000000d19890 D PenSpeedEstimationManager::mNoiseLinearFunctionFactorB
000000000065ebe8 T PenSpeedEstimationManager::ComputeDeltaTimeInMilliseconds(int)
0000000000d198b0 D PenSpeedEstimationManager::mFilterEstimatorHysteresisFactor
0000000000d2ed18 B PenSpeedEstimationManager::mInvertMaxSpeedBeforeQuantization
0000000000d198ac D PenSpeedEstimationManager::mMinValidPositionToNoiseThreshold
0000000000d198a4 D PenSpeedEstimationManager::mMaxTimeDeltaForRoughEstimatorInMillisec
0000000000d198a0 D PenSpeedEstimationManager::mMinTimeDeltaForRoughEstimatorInMillisec
0000000000d198b4 D PenSpeedEstimationManager::mMaxSpeedBeforeQuantizationHimetricToMillisec
000000000065e7c8 T PenSpeedEstimationManager::Init(eChipType)
0000000000697c78 T PenZeroForceInkingProcess::HandleBorders(ZeroForceInkingProcessInput&, unsigned short, bool&)
0000000000697ae0 T PenZeroForceInkingProcess::CopyAntennaData(float*, float*, unsigned long, bool)
0000000000697bfc T PenZeroForceInkingProcess::BorderRegression(float*, unsigned long, unsigned long, unsigned long, unsigned short)
00000000006963e4 T PenZeroForceInkingProcess::GetVendorConfigIndex(ePEN_VENDOR, unsigned short&)
0000000000695234 T PenZeroForceInkingProcess::ProcessZeroForceInking(ZeroForceInkingProcessInput&, ZeroForceInkingProcessOutput&)
000000000069520c T PenZeroForceInkingProcess::SetZeroForceInkingControl(unsigned char)
0000000000697408 T PenZeroForceInkingProcess::PrepareSignalsForVoltageAndDistanceCalculations(ZeroForceInkingProcessInput&, unsigned short, bool&)
00000000006951b8 T PenZeroForceInkingProcess::Init(PenZeroForceInkingProcessCfg*, PenThrsAndTrackCfgTuning*, unsigned char, unsigned short const*)
0000000000339d54 T SurfaceHeatProcessorLogic::OnDeviceReset(EosHeatDevice const*, bool)
0000000000337d0c T SurfaceHeatProcessorLogic::ParseFullFrame(HeatSection*, eREGION_ID, unsigned char*&, unsigned int&)
000000000033a1e0 T SurfaceHeatProcessorLogic::OnDeviceAttached(EosHeatDevice const*)
000000000033ac64 T SurfaceHeatProcessorLogic::OnDeviceDetached(EosHeatDevice const*)
0000000000335608 T SurfaceHeatProcessorLogic::ProcessHeatFrame(EosHeatDevice const*, HeatSection*, HeatSection*, unsigned int)
000000000033950c T SurfaceHeatProcessorLogic::HandleFwResetPing(EosHeatDevice const*)
000000000033861c T SurfaceHeatProcessorLogic::HandlePingMessage(CcpSectionPingInfo*, EosHeatDevice const*)
0000000000333598 T SurfaceHeatProcessorLogic::ResetFullFrameData(EosHeatDevice const*, bool*)
000000000033b0dc T SurfaceHeatProcessorLogic::HandleDisplayChange(EosHeatDevice const*, bool)
000000000033966c T SurfaceHeatProcessorLogic::HandleFwEnterBlPing()
0000000000334548 T SurfaceHeatProcessorLogic::HandleNewHingeAngle(float, float&)
0000000000333280 T SurfaceHeatProcessorLogic::InitPenDefaultParams(unsigned char)
000000000033a140 T SurfaceHeatProcessorLogic::PostDispatchProcessing(EosHeatDevice const*)
0000000000338f50 T SurfaceHeatProcessorLogic::HandleTelemetryMessages()
0000000000335304 T SurfaceHeatProcessorLogic::InitTelemetryContainers(InputProcessingInfo*)
000000000033be38 T SurfaceHeatProcessorLogic::CreateFakeVirtualTrackpad()
0000000000338c6c T SurfaceHeatProcessorLogic::HandleBitmapRecordMessage(InputProcessingInfo*)
00000000003340ec T SurfaceHeatProcessorLogic::HandleStitchingModeChange(bool)
0000000000332c18 T SurfaceHeatProcessorLogic::InitPanelAlignmentManager()
000000000033b99c T SurfaceHeatProcessorLogic::HandleDeviceRotationChange(unsigned short)
000000000033b544 T SurfaceHeatProcessorLogic::HandleHandednessModeChange(unsigned char)
00000000003383b8 T SurfaceHeatProcessorLogic::HandleTouchTelemetryOutput(TouchStudyTelemetryOutputStruct const&, TouchReportsTelemetryOutputStruct const&)
0000000000332e24 T SurfaceHeatProcessorLogic::PrepareTouchInputStructure(TouchProcessingMngrInitStruct*, unsigned char)
000000000033a0d4 T SurfaceHeatProcessorLogic::PostDispatchProcessing_Obsolete()
0000000000333600 T SurfaceHeatProcessorLogic::QueryHeatDeviceForEnvironmentVariables(EosHeatDevice const*)
0000000000333378 T SurfaceHeatProcessorLogic::SetDefaultValuesInVendorDefinedSections()
0000000000330464 T SurfaceHeatProcessorLogic::Init(EosHeatDevice const*, unsigned int, IHeatAdaptor*, std::__1::shared_ptr<Timer>&&, std::__1::shared_ptr<PersistentStorage>&&, IHidDescriptorParser*)
00000000003397cc T SurfaceHeatProcessorLogic::HandleDir(EosHeatDevice const*, bool)
000000000032f1b0 T SurfaceHeatProcessorLogic::SurfaceHeatProcessorLogic()
000000000032f1b0 T SurfaceHeatProcessorLogic::SurfaceHeatProcessorLogic()
00000000003300d0 T SurfaceHeatProcessorLogic::~SurfaceHeatProcessorLogic()
00000000003300d0 T SurfaceHeatProcessorLogic::~SurfaceHeatProcessorLogic()
00000000005ccb64 T TouchProcessingSharedData::SetDebugTouchAnts(unsigned char, unsigned char)
00000000005ccaa8 T TouchProcessingSharedData::GetPrevTouchSource()
00000000005ccaa0 T TouchProcessingSharedData::GetCurrentTouchSource()
00000000005cca94 T TouchProcessingSharedData::SetCurrentTouchSource(eREPORT_SOURCE)
00000000005cca88 T TouchProcessingSharedData::ConvertSystemStateToTouchSource(unsigned char)
00000000005ccac4 T TouchProcessingSharedData::GetIsFingerReportedFromSingleTouch()
00000000005ccab0 T TouchProcessingSharedData::SetIsFingerReportedFromSingleTouch(bool, bool)
00000000005ccb00 T TouchProcessingSharedData::IsPositionInsideVirtualTouchPadArea(float const*, RegionConfigData const*)
00000000005ccacc T TouchProcessingSharedData::TouchProcessingSharedData()
00000000005ccacc T TouchProcessingSharedData::TouchProcessingSharedData()
00000000003e3c68 T PenPostProcessStats_Incell::SendTelemetryInternal(int)
0000000000550598 T TouchPenStatesStats_Incell::SendTelemetryInternal(int)
0000000000649ed4 T HastaPostProcessingSmoothing::ResetState()
000000000064adf0 T HastaPostProcessingSmoothing::PositionIIR(HastaInternalReport*)
000000000064a8cc T HastaPostProcessingSmoothing::PressureIIR(HastaInternalReport*)
000000000064a19c T HastaPostProcessingSmoothing::RunSmoothing(HastaInternalReport*, HastaSmoothingOutput&)
0000000000d2ecbc B HastaPostProcessingSmoothing::mCliIirAlpha
000000000064a978 T HastaPostProcessingSmoothing::UnrepSmoothed(double&, double)
0000000000649808 T HastaPostProcessingSmoothing::GetCliIirAlpha()
000000000064a4d8 T HastaPostProcessingSmoothing::PositionFilter(HastaInternalReport*, HastaSmoothingOutput&)
000000000064a950 T HastaPostProcessingSmoothing::HandleCliOffset(HastaInternalReport*)
000000000064a090 T HastaPostProcessingSmoothing::JitterRestrictor(HastaInternalReport*)
000000000064b3d4 T HastaPostProcessingSmoothing::IsFirstFrameInTip(HastaInternalReport*)
000000000064b1a4 T HastaPostProcessingSmoothing::RunPositionFilter(HastaInternalReport*, HastaSmoothingOutput&)
00000000006497fc T HastaPostProcessingSmoothing::GetCliOffsetConfig()
00000000006498e4 T HastaPostProcessingSmoothing::SetPenVelocityStat(double, HastaSmoothingOutput&)
000000000064a4a0 T HastaPostProcessingSmoothing::HandleStrokeDuration(HastaInternalReport const*, HastaSmoothingOutput&)
000000000064ab04 T HastaPostProcessingSmoothing::PositionKalmanFilter(HastaInternalReport const*, HastaSmoothingOutput&)
00000000006498f4 T HastaPostProcessingSmoothing::SetStrokeDurationStat(unsigned int, HastaSmoothingOutput&)
0000000000649878 T HastaPostProcessingSmoothing::SetStrokeCurvatureStat(Eigen::Matrix<double, 2, 1, 0, 2, 1> const&, HastaSmoothingOutput&)
000000000064a6ec T HastaPostProcessingSmoothing::TiltAndAzimuthSmoothing(unsigned short&, SmoothedTiltAzimuthMemory&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, eHASTA_PEN_TRACK_STATE, unsigned short)
0000000000649aa4 T HastaPostProcessingSmoothing::InitPositionKalmanFilter()
0000000000649ec4 T HastaPostProcessingSmoothing::PositionFilterTriangleInit()
0000000000d2ecb0 B HastaPostProcessingSmoothing::mCliPenPositionOffsetConfig
0000000000d2eccc B HastaPostProcessingSmoothing::mJitterRestrictorCounterLimit
000000000064a600 T HastaPostProcessingSmoothing::OffsetIIRandPositionCorrection(HastaInternalReport*)
000000000064a9c4 T HastaPostProcessingSmoothing::PositionKalmanFilterUpdateProcessNoiseCovariance(HastaInternalReport const*, Eigen::Matrix<double, 2, 1, 0, 2, 1> const&, HastaSmoothingOutput&)
0000000000649904 T HastaPostProcessingSmoothing::Init(HastaPostProcessingBufferManager*, CommonPenTrackingCfg*, PenThrsAndTrackCfgTuning*)
000000000064aa84 T HastaPostProcessingSmoothing::PositionKalmanFilterUpdateMeasurementNoiseCovariance(HastaInternalReport const*)
000000000064b02c T HastaPostProcessingSmoothing::CalcAlpha(HastaInternalReport*, float&, float)
000000000064baf8 T PenZeroForceInkingPostProcess::ResetState()
000000000064bc10 T PenZeroForceInkingPostProcess::CheckPenIdSwitch(unsigned int)
000000000064bc6c T PenZeroForceInkingPostProcess::HandlePenVoltage(ZeroForceInkingPostProcessInput&, bool)
000000000064c180 T PenZeroForceInkingPostProcess::GetPressureByTilt()
000000000064be48 T PenZeroForceInkingPostProcess::ApplyPressureCurve(unsigned short)
000000000064bea8 T PenZeroForceInkingPostProcess::ComputeInkingMethod(ZeroForceInkingPostProcessInput&, bool, bool&)
000000000064c608 T PenZeroForceInkingPostProcess::HandleTriangleLogic(unsigned short, bool)
000000000064bd4c T PenZeroForceInkingPostProcess::HandleStrokeExitDrop(ePEN_I2H_STATE, bool&)
000000000064c6b4 T PenZeroForceInkingPostProcess::CheckForPressureEntry(unsigned int)
000000000064c2f0 T PenZeroForceInkingPostProcess::ComputePressureOutput(ZeroForceInkingPostProcessInput&, bool)
000000000064c144 T PenZeroForceInkingPostProcess::GetLatestRelevantTilt()
000000000064bd04 T PenZeroForceInkingPostProcess::HandleStrokeEntryDrop(eINKING_METHOD, bool&)
000000000064c748 T PenZeroForceInkingPostProcess::UpdateHistoryCounters(ZeroForceInkingPostProcessInput&)
000000000064c1e4 T PenZeroForceInkingPostProcess::ComputeTiltPressureFactor(unsigned short, unsigned int)
000000000064c91c T PenZeroForceInkingPostProcess::PostProcessZeroForceInking(ZeroForceInkingPostProcessInput&, ZeroForceInkingPostProcessOutput&)
000000000064bae4 T PenZeroForceInkingPostProcess::ResetPenSpecificRelatedCounters()
000000000064ba58 T PenZeroForceInkingPostProcess::Init(PenZeroForceInkingPostProcessCfg*, PenPressureProcess*)
0000000000620068 T HastaPostProcessingTrackManager::ResetState()
0000000000620efc T HastaPostProcessingTrackManager::RunStateMachine(HastaTrackManagerInput const&, ePEN_SIGNAL_STATE)
00000000006201c8 T HastaPostProcessingTrackManager::RunTrackManager(HastaTrackManagerOutput&, HastaTrackManagerInput const&, HastaInternalReport*)
0000000000620dbc T HastaPostProcessingTrackManager::IsNewReportValid(int, int)
0000000000620d28 T HastaPostProcessingTrackManager::CalculateDataValidity(HastaTrackManagerInput const&)
0000000000622100 T HastaPostProcessingTrackManager::RunRateAdaptationModule(HastaInternalReport*)
000000000061feec T HastaPostProcessingTrackManager::Init(HastaPostProcessingBufferManager*, PenThrsAndTrackCfgTuning*)
000000000064ba48 T HastaPostProcessingBufferManager::FreeBuffer(HastaInternalReport*)
000000000064b6e0 T HastaPostProcessingBufferManager::AllocateBuffer()
000000000064b50c T HastaPostProcessingBufferManager::Init()
00000000005eaca4 T HastaPostProcessingInterpolation::ResetState()
00000000005eae74 T HastaPostProcessingInterpolation::RunInterpolation(HastaInternalReport*, ePEN_NOISY_MODE, PhysicalBoundaries const*, PostProcessingStats*)
00000000005ed114 T HastaPostProcessingInterpolation::RunTriangleLogic(int, int, int&, int&, bool, int, int, int, int)
00000000005ecd28 T HastaPostProcessingInterpolation::RunTriangleLogic(int, int, int, int, int&, int&, bool, int, int, int, int)
00000000005ecbc4 T HastaPostProcessingInterpolation::CubicInterpolation(int, int, int, float, float, float)
00000000005ec75c T HastaPostProcessingInterpolation::InterpolatePosition(HastaInternalReport*, HastaInternalReport*)
00000000005ed024 T HastaPostProcessingInterpolation::UpdateTriangleStats(HastaInternalReport*, PostProcessingStats*)
00000000005ec268 T HastaPostProcessingInterpolation::PressureInterpolation(HastaInternalReport*)
00000000005ec240 T HastaPostProcessingInterpolation::TiltAzimuthResetHistory(bool)
00000000005ebc20 T HastaPostProcessingInterpolation::PressureExitInterpolation(HastaInternalReport**, PhysicalBoundaries const*)
00000000005ec51c T HastaPostProcessingInterpolation::TiltOrAzimuthInterpolation(unsigned short*, unsigned short)
00000000005ec9fc T HastaPostProcessingInterpolation::PositionOffsetInterpolation(HastaInternalReport*)
00000000005eba8c T HastaPostProcessingInterpolation::RunInterploationStateMachine(HastaInternalReport*, ePEN_NOISY_MODE)
00000000005ecc68 T HastaPostProcessingInterpolation::PressureInterpolationFunction(HastaInternalReport*, bool)
00000000005ec640 T HastaPostProcessingInterpolation::RunTriangleLogicOnPositionCom(HastaInternalReport*, PostProcessingStats*)
00000000005eac60 T HastaPostProcessingInterpolation::ResetInterploationStateMachine()
00000000005eae50 T HastaPostProcessingInterpolation::SetLastInterpolatedValueForTouch(unsigned short, unsigned short&)
00000000005eae3c T HastaPostProcessingInterpolation::GetLastInterpolatedTiltAndAzimuth(unsigned short&, unsigned short&)
00000000005ecddc T HastaPostProcessingInterpolation::RunTiltOrAzimuthInterpolationLogic(unsigned short*, unsigned short)
00000000005ece90 T HastaPostProcessingInterpolation::IsShouldRunTriangleLogicForPosition(HastaInternalReport*, PostProcessingStats*)
00000000005eaa90 T HastaPostProcessingInterpolation::Init(HastaPostProcessingBufferManager*, PenThrsAndTrackCfgTuning*)
00000000005ed3f0 T HastaPostProcessingReportManager::ResetState()
00000000005ed3f4 T HastaPostProcessingReportManager::FillSmoothingData(PenPostProcessingOut&, HastaInternalReport*)
00000000005edbb0 T HastaPostProcessingReportManager::GeneratePenReport(eACCELERATED_PEN_REPORT_TYPE, PenMsgInfo*, HastaInternalReport*)
00000000005ed850 T HastaPostProcessingReportManager::HandleTransitions(PenPostProcessingOut&, HastaInternalReport*, bool)
00000000005eda3c T HastaPostProcessingReportManager::GetNextOutputReport(PenPostProcessingOut&)
00000000005ed408 T HastaPostProcessingReportManager::GenerateOutboundReports(PenPostProcessingOut&, HastaInternalReport*, HastaInternalReport*, HastaInternalReport*, bool)
00000000005eed7c T HastaPostProcessingReportManager::ActivateSplitModeLogicOnReport(PenPostProcessingOut&, PenMsgInfo*, bool)
00000000005eef48 T HastaPostProcessingReportManager::GenerateHoverReportFromLastReport(PenMsgInfo*, PenMsgInfo*)
00000000005eef70 T HastaPostProcessingReportManager::IsReportPositionMappedToGapByAxis(int, int, unsigned int)
00000000005eeea4 T HastaPostProcessingReportManager::ConvertReportsPositionToLogicalUnits(PenMsgInfo*, unsigned char)
00000000005ed1b8 T HastaPostProcessingReportManager::Init(HastaPostProcessingBufferManager*, CommonPenTrackingCfg*, PenThrsAndTrackCfgTuning*, HastaPostProcessingInitStruct*)
0000000000694dac T PenZeroForceInkingCommonUtilities::ComputeMoments(float (*) [2][9], float (*) [2][5])
00000000006950b0 T PenZeroForceInkingCommonUtilities::ComputeFeatures(float (*) [2][5], int*, float*)
000000000069514c T PenZeroForceInkingCommonUtilities::CalculateSigmoid(float)
0000000000694bb8 T PenZeroForceInkingCommonUtilities::ComputeOneMoment(float*, int, int, float)
0000000000694c40 T PenZeroForceInkingCommonUtilities::ComputeMomentsInternal(float*, int, bool, float*)
0000000000695170 T PenZeroForceInkingCommonUtilities::LimitValueRangeWithSigmoid(float, float)
0000000000a0e424 T XgBoost3PredictorZetaNabuLongAxis::get_num_feature()
0000000000a0e41c T XgBoost3PredictorZetaNabuLongAxis::get_num_output_group()
0000000000a0e42c T XgBoost3PredictorZetaNabuLongAxis::predict(Entry*)
00000000008ba450 T XgBoost3PredictorZeusNabuLongAxis::get_num_feature()
00000000008ba448 T XgBoost3PredictorZeusNabuLongAxis::get_num_output_group()
00000000008ba458 T XgBoost3PredictorZeusNabuLongAxis::predict(Entry*)
0000000000ae4c14 T XgBoost3PredictorLuccaNabuLongAxis::get_num_feature()
0000000000ae4c0c T XgBoost3PredictorLuccaNabuLongAxis::get_num_output_group()
0000000000ae4c1c T XgBoost3PredictorLuccaNabuLongAxis::predict(Entry*)
0000000000a21a18 T XgBoost3PredictorZetaHastaLongAxis::get_num_feature()
0000000000a21a10 T XgBoost3PredictorZetaHastaLongAxis::get_num_output_group()
0000000000a21a20 T XgBoost3PredictorZetaHastaLongAxis::predict(Entry*)
0000000000a0b410 T XgBoost3PredictorZetaNabuShortAxis::get_num_feature()
0000000000a0b408 T XgBoost3PredictorZetaNabuShortAxis::get_num_output_group()
0000000000a0b418 T XgBoost3PredictorZetaNabuShortAxis::predict(Entry*)
00000000008b39c4 T XgBoost3PredictorZeusNabuShortAxis::get_num_feature()
00000000008b39bc T XgBoost3PredictorZeusNabuShortAxis::get_num_output_group()
00000000008b39cc T XgBoost3PredictorZeusNabuShortAxis::predict(Entry*)
00000000005f724c T HastaPostProcessingBorderProcessing::ResetState()
00000000005f7b70 T HastaPostProcessingBorderProcessing::SmartCropAndDrop(HastaInternalReport*, PhysicalBoundaries const*)
00000000005f73dc T HastaPostProcessingBorderProcessing::RunBorderProcessing(HastaInternalReport*, ePEN_ACQUISITION_STATES, PhysicalBoundaries const*)
00000000005f80c8 T HastaPostProcessingBorderProcessing::RunForwardPrediction(HastaInternalReport*, ePEN_BORDER_BITMAP, PhysicalBoundaries const*)
00000000005f7544 T HastaPostProcessingBorderProcessing::RunBackwardPrediction(HastaInternalReport*, ePEN_ACQUISITION_STATES, PhysicalBoundaries const*)
00000000005f8614 T HastaPostProcessingBorderProcessing::GetBorderBitmapForPoint(int, int, short, PhysicalBoundaries const*)
00000000005f8864 T HastaPostProcessingBorderProcessing::IsVelocityAboveThreshold(HastaInternalReport*, HastaInternalReport*, unsigned short, ePEN_BORDER_BITMAP)
00000000005f8674 T HastaPostProcessingBorderProcessing::CalculatePositionOnBorder(int&, int&, int, int, int, int, unsigned char, PhysicalBoundaries const*)
00000000005f8740 T HastaPostProcessingBorderProcessing::CheckVelocityForBorderBitmap(HastaInternalReport*, HastaInternalReport*, unsigned short, ePEN_BORDER_BITMAP)
00000000005f8834 T HastaPostProcessingBorderProcessing::ReleaseBackwardPredictionStorage(HastaInternalReport*)
00000000005f7218 T HastaPostProcessingBorderProcessing::Init(HastaPostProcessingBufferManager*, PenThrsAndTrackCfgTuning*)
0000000000ade3a8 T XgBoost3PredictorLuccaNabuShortAxis::get_num_feature()
0000000000ade3a0 T XgBoost3PredictorLuccaNabuShortAxis::get_num_output_group()
0000000000ade3b0 T XgBoost3PredictorLuccaNabuShortAxis::predict(Entry*)
0000000000a1d820 T XgBoost3PredictorZetaHastaShortAxis::get_num_feature()
0000000000a1d818 T XgBoost3PredictorZetaHastaShortAxis::get_num_output_group()
0000000000a1d828 T XgBoost3PredictorZetaHastaShortAxis::predict(Entry*)
00000000005f6fb4 T HastaPostProcessingSuspensionManager::ResetState()
00000000005f7130 T HastaPostProcessingSuspensionManager::RunSuspensionManager(HastaInternalReport*, HastaInternalReport**)
00000000005f6e60 T HastaPostProcessingSuspensionManager::Init(HastaPostProcessingBufferManager*)
0000000000a178b4 T XgBoost3PredictorZetaKeyphusLongAxis::get_num_feature()
0000000000a178ac T XgBoost3PredictorZetaKeyphusLongAxis::get_num_output_group()
0000000000a178bc T XgBoost3PredictorZetaKeyphusLongAxis::predict(Entry*)
00000000008ac63c T XgBoost3PredictorZeusKeyphusLongAxis::get_num_feature()
00000000008ac634 T XgBoost3PredictorZeusKeyphusLongAxis::get_num_output_group()
00000000008ac644 T XgBoost3PredictorZeusKeyphusLongAxis::predict(Entry*)
000000000039bd68 T PanelAlignmentReaderPersistentStorage::ReadPanelAlignmentOffsets()
000000000039b3d0 T PanelAlignmentReaderPersistentStorage::ReadPanelAlignmentOffsetPerRegion(eREGION_ID)
000000000039adf4 T PanelAlignmentReaderPersistentStorage::Init(std::__1::shared_ptr<PersistentStorage> const&, eREGION_ID)
000000000080eb90 T XgBoost3PredictorBeowulfHastaLongAxis::get_num_feature()
000000000080eb88 T XgBoost3PredictorBeowulfHastaLongAxis::get_num_output_group()
000000000080eb98 T XgBoost3PredictorBeowulfHastaLongAxis::predict(Entry*)
00000000006a48b0 T XgBoost3PredictorDefaultHastaLongAxis::get_num_feature()
00000000006a48a8 T XgBoost3PredictorDefaultHastaLongAxis::get_num_output_group()
00000000006a48b8 T XgBoost3PredictorDefaultHastaLongAxis::predict(Entry*)
0000000000846e78 T XgBoost3PredictorEpsilonHastaLongAxis::get_num_feature()
0000000000846e70 T XgBoost3PredictorEpsilonHastaLongAxis::get_num_output_group()
0000000000846e80 T XgBoost3PredictorEpsilonHastaLongAxis::predict(Entry*)
000000000082ab28 T XgBoost3PredictorGrendelHastaLongAxis::get_num_feature()
000000000082ab20 T XgBoost3PredictorGrendelHastaLongAxis::get_num_output_group()
000000000082ab30 T XgBoost3PredictorGrendelHastaLongAxis::predict(Entry*)
0000000000ad6b70 T XgBoost3PredictorLuccaKeyphusLongAxis::get_num_feature()
0000000000ad6b68 T XgBoost3PredictorLuccaKeyphusLongAxis::get_num_output_group()
0000000000ad6b78 T XgBoost3PredictorLuccaKeyphusLongAxis::predict(Entry*)
0000000000a1227c T XgBoost3PredictorZetaKeyphusShortAxis::get_num_feature()
0000000000a12274 T XgBoost3PredictorZetaKeyphusShortAxis::get_num_output_group()
0000000000a12284 T XgBoost3PredictorZetaKeyphusShortAxis::predict(Entry*)
00000000008a6a94 T XgBoost3PredictorZeusKeyphusShortAxis::get_num_feature()
00000000008a6a8c T XgBoost3PredictorZeusKeyphusShortAxis::get_num_output_group()
00000000008a6a9c T XgBoost3PredictorZeusKeyphusShortAxis::predict(Entry*)
0000000000a794d0 T XgBoost3DeltaPredictorZetaNabuLongAxis::get_num_feature()
0000000000a794c8 T XgBoost3DeltaPredictorZetaNabuLongAxis::get_num_output_group()
0000000000a794d8 T XgBoost3DeltaPredictorZetaNabuLongAxis::predict(Entry*)
0000000000988074 T XgBoost3DeltaPredictorZeusNabuLongAxis::get_num_feature()
000000000098806c T XgBoost3DeltaPredictorZeusNabuLongAxis::get_num_output_group()
000000000098807c T XgBoost3DeltaPredictorZeusNabuLongAxis::predict(Entry*)
0000000000807bbc T XgBoost3PredictorBeowulfHastaShortAxis::get_num_feature()
0000000000807bb4 T XgBoost3PredictorBeowulfHastaShortAxis::get_num_output_group()
0000000000807bc4 T XgBoost3PredictorBeowulfHastaShortAxis::predict(Entry*)
000000000069d8dc T XgBoost3PredictorDefaultHastaShortAxis::get_num_feature()
000000000069d8d4 T XgBoost3PredictorDefaultHastaShortAxis::get_num_output_group()
000000000069d8e4 T XgBoost3PredictorDefaultHastaShortAxis::predict(Entry*)
000000000083faec T XgBoost3PredictorEpsilonHastaShortAxis::get_num_feature()
000000000083fae4 T XgBoost3PredictorEpsilonHastaShortAxis::get_num_output_group()
000000000083faf4 T XgBoost3PredictorEpsilonHastaShortAxis::predict(Entry*)
0000000000823b54 T XgBoost3PredictorGrendelHastaShortAxis::get_num_feature()
0000000000823b4c T XgBoost3PredictorGrendelHastaShortAxis::get_num_output_group()
0000000000823b5c T XgBoost3PredictorGrendelHastaShortAxis::predict(Entry*)
0000000000acfbe8 T XgBoost3PredictorLuccaKeyphusShortAxis::get_num_feature()
0000000000acfbe0 T XgBoost3PredictorLuccaKeyphusShortAxis::get_num_output_group()
0000000000acfbf0 T XgBoost3PredictorLuccaKeyphusShortAxis::predict(Entry*)
0000000000ba968c T XgBoost3DeltaPredictorLuccaNabuLongAxis::get_num_feature()
0000000000ba9684 T XgBoost3DeltaPredictorLuccaNabuLongAxis::get_num_output_group()
0000000000ba9694 T XgBoost3DeltaPredictorLuccaNabuLongAxis::predict(Entry*)
0000000000aa5e58 T XgBoost3DeltaPredictorZetaHastaLongAxis::get_num_feature()
0000000000aa5e50 T XgBoost3DeltaPredictorZetaHastaLongAxis::get_num_output_group()
0000000000aa5e60 T XgBoost3DeltaPredictorZetaHastaLongAxis::predict(Entry*)
0000000000a58f2c T XgBoost3DeltaPredictorZetaNabuShortAxis::get_num_feature()
0000000000a58f24 T XgBoost3DeltaPredictorZetaNabuShortAxis::get_num_output_group()
0000000000a58f34 T XgBoost3DeltaPredictorZetaNabuShortAxis::predict(Entry*)
000000000092b940 T XgBoost3DeltaPredictorZeusNabuShortAxis::get_num_feature()
000000000092b938 T XgBoost3DeltaPredictorZeusNabuShortAxis::get_num_output_group()
000000000092b948 T XgBoost3DeltaPredictorZeusNabuShortAxis::predict(Entry*)
000000000081c654 T XgBoost3PredictorBeowulfKeyphusLongAxis::get_num_feature()
000000000081c64c T XgBoost3PredictorBeowulfKeyphusLongAxis::get_num_output_group()
000000000081c65c T XgBoost3PredictorBeowulfKeyphusLongAxis::predict(Entry*)
00000000006b2374 T XgBoost3PredictorDefaultKeyphusLongAxis::get_num_feature()
00000000006b236c T XgBoost3PredictorDefaultKeyphusLongAxis::get_num_output_group()
00000000006b237c T XgBoost3PredictorDefaultKeyphusLongAxis::predict(Entry*)
0000000000854e1c T XgBoost3PredictorEpsilonKeyphusLongAxis::get_num_feature()
0000000000854e14 T XgBoost3PredictorEpsilonKeyphusLongAxis::get_num_output_group()
0000000000854e24 T XgBoost3PredictorEpsilonKeyphusLongAxis::predict(Entry*)
00000000008385ec T XgBoost3PredictorGrendelKeyphusLongAxis::get_num_feature()
00000000008385e4 T XgBoost3PredictorGrendelKeyphusLongAxis::get_num_output_group()
00000000008385f4 T XgBoost3PredictorGrendelKeyphusLongAxis::predict(Entry*)
0000000000862588 T XgBoost3PredictorHavenG6KeyphusLongAxis::get_num_feature()
0000000000862580 T XgBoost3PredictorHavenG6KeyphusLongAxis::get_num_output_group()
0000000000862590 T XgBoost3PredictorHavenG6KeyphusLongAxis::predict(Entry*)
0000000000ac839c T XgBoost3BorderPredictorZetaNabuLeftRight::get_num_feature()
0000000000ac8394 T XgBoost3BorderPredictorZetaNabuLeftRight::get_num_output_group()
0000000000ac83a4 T XgBoost3BorderPredictorZetaNabuLeftRight::predict(Entry*)
0000000000accd78 T XgBoost3BorderPredictorZetaNabuTopBottom::get_num_feature()
0000000000accd70 T XgBoost3BorderPredictorZetaNabuTopBottom::get_num_output_group()
0000000000accd80 T XgBoost3BorderPredictorZetaNabuTopBottom::predict(Entry*)
0000000000a03e6c T XgBoost3BorderPredictorZeusNabuLeftRight::get_num_feature()
0000000000a03e64 T XgBoost3BorderPredictorZeusNabuLeftRight::get_num_output_group()
0000000000a03e74 T XgBoost3BorderPredictorZeusNabuLeftRight::predict(Entry*)
0000000000a06f60 T XgBoost3BorderPredictorZeusNabuTopBottom::get_num_feature()
0000000000a06f58 T XgBoost3BorderPredictorZeusNabuTopBottom::get_num_output_group()
0000000000a06f68 T XgBoost3BorderPredictorZeusNabuTopBottom::predict(Entry*)
0000000000b46e00 T XgBoost3DeltaPredictorLuccaNabuShortAxis::get_num_feature()
0000000000b46df8 T XgBoost3DeltaPredictorLuccaNabuShortAxis::get_num_output_group()
0000000000b46e08 T XgBoost3DeltaPredictorLuccaNabuShortAxis::predict(Entry*)
0000000000a928bc T XgBoost3DeltaPredictorZetaHastaShortAxis::get_num_feature()
0000000000a928b4 T XgBoost3DeltaPredictorZetaHastaShortAxis::get_num_output_group()
0000000000a928c4 T XgBoost3DeltaPredictorZetaHastaShortAxis::predict(Entry*)
0000000000815da4 T XgBoost3PredictorBeowulfKeyphusShortAxis::get_num_feature()
0000000000815d9c T XgBoost3PredictorBeowulfKeyphusShortAxis::get_num_output_group()
0000000000815dac T XgBoost3PredictorBeowulfKeyphusShortAxis::predict(Entry*)
00000000006abac4 T XgBoost3PredictorDefaultKeyphusShortAxis::get_num_feature()
00000000006ababc T XgBoost3PredictorDefaultKeyphusShortAxis::get_num_output_group()
00000000006abacc T XgBoost3PredictorDefaultKeyphusShortAxis::predict(Entry*)
000000000084dffc T XgBoost3PredictorEpsilonKeyphusShortAxis::get_num_feature()
000000000084dff4 T XgBoost3PredictorEpsilonKeyphusShortAxis::get_num_output_group()
000000000084e004 T XgBoost3PredictorEpsilonKeyphusShortAxis::predict(Entry*)
0000000000831d3c T XgBoost3PredictorGrendelKeyphusShortAxis::get_num_feature()
0000000000831d34 T XgBoost3PredictorGrendelKeyphusShortAxis::get_num_output_group()
0000000000831d44 T XgBoost3PredictorGrendelKeyphusShortAxis::predict(Entry*)
000000000085befc T XgBoost3PredictorHavenG6KeyphusShortAxis::get_num_feature()
000000000085bef4 T XgBoost3PredictorHavenG6KeyphusShortAxis::get_num_output_group()
000000000085bf04 T XgBoost3PredictorHavenG6KeyphusShortAxis::predict(Entry*)
0000000000c02760 T XgBoost3BorderPredictorLuccaNabuLeftRight::get_num_feature()
0000000000c02758 T XgBoost3BorderPredictorLuccaNabuLeftRight::get_num_output_group()
0000000000c02768 T XgBoost3BorderPredictorLuccaNabuLeftRight::predict(Entry*)
0000000000c06954 T XgBoost3BorderPredictorLuccaNabuTopBottom::get_num_feature()
0000000000c0694c T XgBoost3BorderPredictorLuccaNabuTopBottom::get_num_output_group()
0000000000c0695c T XgBoost3BorderPredictorLuccaNabuTopBottom::predict(Entry*)
0000000000a3fbd0 T XgBoost3DeltaPredictorZetaKeyphusLongAxis::get_num_feature()
0000000000a3fbc8 T XgBoost3DeltaPredictorZetaKeyphusLongAxis::get_num_output_group()
0000000000a3fbd8 T XgBoost3DeltaPredictorZetaKeyphusLongAxis::predict(Entry*)
00000000008f2a80 T XgBoost3DeltaPredictorZeusKeyphusLongAxis::get_num_feature()
00000000008f2a78 T XgBoost3DeltaPredictorZeusKeyphusLongAxis::get_num_output_group()
00000000008f2a88 T XgBoost3DeltaPredictorZeusKeyphusLongAxis::predict(Entry*)
0000000000713c84 T XgBoost3DeltaPredictorDefaultHastaLongAxis::get_num_feature()
0000000000713c7c T XgBoost3DeltaPredictorDefaultHastaLongAxis::get_num_output_group()
0000000000713c8c T XgBoost3DeltaPredictorDefaultHastaLongAxis::predict(Entry*)
0000000000b1fc5c T XgBoost3DeltaPredictorLuccaKeyphusLongAxis::get_num_feature()
0000000000b1fc54 T XgBoost3DeltaPredictorLuccaKeyphusLongAxis::get_num_output_group()
0000000000b1fc64 T XgBoost3DeltaPredictorLuccaKeyphusLongAxis::predict(Entry*)
0000000000a27bc8 T XgBoost3DeltaPredictorZetaKeyphusShortAxis::get_num_feature()
0000000000a27bc0 T XgBoost3DeltaPredictorZetaKeyphusShortAxis::get_num_output_group()
0000000000a27bd0 T XgBoost3DeltaPredictorZetaKeyphusShortAxis::predict(Entry*)
00000000008c0d54 T XgBoost3DeltaPredictorZeusKeyphusShortAxis::get_num_feature()
00000000008c0d4c T XgBoost3DeltaPredictorZeusKeyphusShortAxis::get_num_output_group()
00000000008c0d5c T XgBoost3DeltaPredictorZeusKeyphusShortAxis::predict(Entry*)
0000000000abfe00 T XgBoost3BorderPredictorZetaKeyphusLeftRight::get_num_feature()
0000000000abfdf8 T XgBoost3BorderPredictorZetaKeyphusLeftRight::get_num_output_group()
0000000000abfe08 T XgBoost3BorderPredictorZetaKeyphusLeftRight::predict(Entry*)
0000000000ac468c T XgBoost3BorderPredictorZetaKeyphusTopBottom::get_num_feature()
0000000000ac4684 T XgBoost3BorderPredictorZetaKeyphusTopBottom::get_num_output_group()
0000000000ac4694 T XgBoost3BorderPredictorZetaKeyphusTopBottom::predict(Entry*)
00000000009f5250 T XgBoost3BorderPredictorZeusKeyphusLeftRight::get_num_feature()
00000000009f5248 T XgBoost3BorderPredictorZeusKeyphusLeftRight::get_num_output_group()
00000000009f5258 T XgBoost3BorderPredictorZeusKeyphusLeftRight::predict(Entry*)
00000000009f8720 T XgBoost3BorderPredictorZeusKeyphusTopBottom::get_num_feature()
00000000009f8718 T XgBoost3BorderPredictorZeusKeyphusTopBottom::get_num_output_group()
00000000009f8728 T XgBoost3BorderPredictorZeusKeyphusTopBottom::predict(Entry*)
00000000006b9874 T XgBoost3DeltaPredictorDefaultHastaShortAxis::get_num_feature()
00000000006b986c T XgBoost3DeltaPredictorDefaultHastaShortAxis::get_num_output_group()
00000000006b987c T XgBoost3DeltaPredictorDefaultHastaShortAxis::predict(Entry*)
0000000000aeb388 T XgBoost3DeltaPredictorLuccaKeyphusShortAxis::get_num_feature()
0000000000aeb380 T XgBoost3DeltaPredictorLuccaKeyphusShortAxis::get_num_output_group()
0000000000aeb390 T XgBoost3DeltaPredictorLuccaKeyphusShortAxis::predict(Entry*)
0000000000c0c594 T XgBoost3BorderPredictorLuccaKeyphusLeftRight::get_num_feature()
0000000000c0c58c T XgBoost3BorderPredictorLuccaKeyphusLeftRight::get_num_output_group()
0000000000c0c59c T XgBoost3BorderPredictorLuccaKeyphusLeftRight::predict(Entry*)
0000000000c10074 T XgBoost3BorderPredictorLuccaKeyphusTopBottom::get_num_feature()
0000000000c1006c T XgBoost3BorderPredictorLuccaKeyphusTopBottom::get_num_output_group()
0000000000c1007c T XgBoost3BorderPredictorLuccaKeyphusTopBottom::predict(Entry*)
00000000007ba3fc T XgBoost3DeltaPredictorDefaultKeyphusLongAxis::get_num_feature()
00000000007ba3f4 T XgBoost3DeltaPredictorDefaultKeyphusLongAxis::get_num_output_group()
00000000007ba404 T XgBoost3DeltaPredictorDefaultKeyphusLongAxis::predict(Entry*)
0000000000883cfc T XgBoost3DeltaPredictorHavenG6KeyphusLongAxis::get_num_feature()
0000000000883cf4 T XgBoost3DeltaPredictorHavenG6KeyphusLongAxis::get_num_output_group()
0000000000883d04 T XgBoost3DeltaPredictorHavenG6KeyphusLongAxis::predict(Entry*)
0000000000abdfac T XgBoost3NearBorderPredictorZetaNabuLeftRight::get_num_feature()
0000000000abdfa4 T XgBoost3NearBorderPredictorZetaNabuLeftRight::get_num_output_group()
0000000000abdfb4 T XgBoost3NearBorderPredictorZetaNabuLeftRight::predict(Entry*)
0000000000abf098 T XgBoost3NearBorderPredictorZetaNabuTopBottom::get_num_feature()
0000000000abf090 T XgBoost3NearBorderPredictorZetaNabuTopBottom::get_num_output_group()
0000000000abf0a0 T XgBoost3NearBorderPredictorZetaNabuTopBottom::predict(Entry*)
00000000009fd948 T XgBoost3NearBorderPredictorZeusNabuLeftRight::get_num_feature()
00000000009fd940 T XgBoost3NearBorderPredictorZeusNabuLeftRight::get_num_output_group()
00000000009fd950 T XgBoost3NearBorderPredictorZeusNabuLeftRight::predict(Entry*)
0000000000a007c8 T XgBoost3NearBorderPredictorZeusNabuTopBottom::get_num_feature()
0000000000a007c0 T XgBoost3NearBorderPredictorZeusNabuTopBottom::get_num_output_group()
0000000000a007d0 T XgBoost3NearBorderPredictorZeusNabuTopBottom::predict(Entry*)
0000000000c1dbf8 T XgBoost3BorderPredictorCarinaKeyphusLeftRight::get_num_feature()
0000000000c1dbf0 T XgBoost3BorderPredictorCarinaKeyphusLeftRight::get_num_output_group()
0000000000c1dc00 T XgBoost3BorderPredictorCarinaKeyphusLeftRight::predict(Entry*)
0000000000c21090 T XgBoost3BorderPredictorCarinaKeyphusTopBottom::get_num_feature()
0000000000c21088 T XgBoost3BorderPredictorCarinaKeyphusTopBottom::get_num_output_group()
0000000000c21098 T XgBoost3BorderPredictorCarinaKeyphusTopBottom::predict(Entry*)
000000000075cd98 T XgBoost3DeltaPredictorDefaultKeyphusShortAxis::get_num_feature()
000000000075cd90 T XgBoost3DeltaPredictorDefaultKeyphusShortAxis::get_num_output_group()
000000000075cda0 T XgBoost3DeltaPredictorDefaultKeyphusShortAxis::predict(Entry*)
0000000000868df0 T XgBoost3DeltaPredictorHavenG6KeyphusShortAxis::get_num_feature()
0000000000868de8 T XgBoost3DeltaPredictorHavenG6KeyphusShortAxis::get_num_output_group()
0000000000868df8 T XgBoost3DeltaPredictorHavenG6KeyphusShortAxis::predict(Entry*)
0000000000beec90 T XgBoost3NearBorderPredictorLuccaNabuLeftRight::get_num_feature()
0000000000beec88 T XgBoost3NearBorderPredictorLuccaNabuLeftRight::get_num_output_group()
0000000000beec98 T XgBoost3NearBorderPredictorLuccaNabuLeftRight::predict(Entry*)
0000000000bf3b8c T XgBoost3NearBorderPredictorLuccaNabuTopBottom::get_num_feature()
0000000000bf3b84 T XgBoost3NearBorderPredictorLuccaNabuTopBottom::get_num_output_group()
0000000000bf3b94 T XgBoost3NearBorderPredictorLuccaNabuTopBottom::predict(Entry*)
0000000000ab7b0c T XgBoost3NearBorderPredictorZetaKeyphusLeftRight::get_num_feature()
0000000000ab7b04 T XgBoost3NearBorderPredictorZetaKeyphusLeftRight::get_num_output_group()
0000000000ab7b14 T XgBoost3NearBorderPredictorZetaKeyphusLeftRight::predict(Entry*)
0000000000abbc04 T XgBoost3NearBorderPredictorZetaKeyphusTopBottom::get_num_feature()
0000000000abbbfc T XgBoost3NearBorderPredictorZetaKeyphusTopBottom::get_num_output_group()
0000000000abbc0c T XgBoost3NearBorderPredictorZetaKeyphusTopBottom::predict(Entry*)
00000000009e9ce8 T XgBoost3NearBorderPredictorZeusKeyphusLeftRight::get_num_feature()
00000000009e9ce0 T XgBoost3NearBorderPredictorZeusKeyphusLeftRight::get_num_output_group()
00000000009e9cf0 T XgBoost3NearBorderPredictorZeusKeyphusLeftRight::predict(Entry*)
00000000009eea7c T XgBoost3NearBorderPredictorZeusKeyphusTopBottom::get_num_feature()
00000000009eea74 T XgBoost3NearBorderPredictorZeusKeyphusTopBottom::get_num_output_group()
00000000009eea84 T XgBoost3NearBorderPredictorZeusKeyphusTopBottom::predict(Entry*)
0000000000bf8494 T XgBoost3NearBorderPredictorLuccaKeyphusLeftRight::get_num_feature()
0000000000bf848c T XgBoost3NearBorderPredictorLuccaKeyphusLeftRight::get_num_output_group()
0000000000bf849c T XgBoost3NearBorderPredictorLuccaKeyphusLeftRight::predict(Entry*)
0000000000bfc474 T XgBoost3NearBorderPredictorLuccaKeyphusTopBottom::get_num_feature()
0000000000bfc46c T XgBoost3NearBorderPredictorLuccaKeyphusTopBottom::get_num_output_group()
0000000000bfc47c T XgBoost3NearBorderPredictorLuccaKeyphusTopBottom::predict(Entry*)
0000000000c160a0 T XgBoost3NearBorderPredictorCarinaKeyphusLeftRight::get_num_feature()
0000000000c16098 T XgBoost3NearBorderPredictorCarinaKeyphusLeftRight::get_num_output_group()
0000000000c160a8 T XgBoost3NearBorderPredictorCarinaKeyphusLeftRight::predict(Entry*)
0000000000c18ee8 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottom::get_num_feature()
0000000000c18ee0 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottom::get_num_output_group()
0000000000c18ef0 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottom::predict(Entry*)
0000000000abe7a8 T XgBoost3NearBorderPredictorZetaNabuLeftRightOpposite::get_num_feature()
0000000000abe7a0 T XgBoost3NearBorderPredictorZetaNabuLeftRightOpposite::get_num_output_group()
0000000000abe7b0 T XgBoost3NearBorderPredictorZetaNabuLeftRightOpposite::predict(Entry*)
0000000000abf6bc T XgBoost3NearBorderPredictorZetaNabuTopBottomOpposite::get_num_feature()
0000000000abf6b4 T XgBoost3NearBorderPredictorZetaNabuTopBottomOpposite::get_num_output_group()
0000000000abf6c4 T XgBoost3NearBorderPredictorZetaNabuTopBottomOpposite::predict(Entry*)
00000000009feda4 T XgBoost3NearBorderPredictorZeusNabuLeftRightOpposite::get_num_feature()
00000000009fed9c T XgBoost3NearBorderPredictorZeusNabuLeftRightOpposite::get_num_output_group()
00000000009fedac T XgBoost3NearBorderPredictorZeusNabuLeftRightOpposite::predict(Entry*)
0000000000a01f48 T XgBoost3NearBorderPredictorZeusNabuTopBottomOpposite::get_num_feature()
0000000000a01f40 T XgBoost3NearBorderPredictorZeusNabuTopBottomOpposite::get_num_output_group()
0000000000a01f50 T XgBoost3NearBorderPredictorZeusNabuTopBottomOpposite::predict(Entry*)
0000000000bf20ac T XgBoost3NearBorderPredictorLuccaNabuLeftRightOpposite::get_num_feature()
0000000000bf20a4 T XgBoost3NearBorderPredictorLuccaNabuLeftRightOpposite::get_num_output_group()
0000000000bf20b4 T XgBoost3NearBorderPredictorLuccaNabuLeftRightOpposite::predict(Entry*)
0000000000bf56fc T XgBoost3NearBorderPredictorLuccaNabuTopBottomOpposite::get_num_feature()
0000000000bf56f4 T XgBoost3NearBorderPredictorLuccaNabuTopBottomOpposite::get_num_output_group()
0000000000bf5704 T XgBoost3NearBorderPredictorLuccaNabuTopBottomOpposite::predict(Entry*)
000000000039be74 T PanelAlignmentReaderPersistentStorageFullUefiStructure::ReadPanelAlignmentOffsets()
0000000000aba2cc T XgBoost3NearBorderPredictorZetaKeyphusLeftRightOpposite::get_num_feature()
0000000000aba2c4 T XgBoost3NearBorderPredictorZetaKeyphusLeftRightOpposite::get_num_output_group()
0000000000aba2d4 T XgBoost3NearBorderPredictorZetaKeyphusLeftRightOpposite::predict(Entry*)
0000000000abcd8c T XgBoost3NearBorderPredictorZetaKeyphusTopBottomOpposite::get_num_feature()
0000000000abcd84 T XgBoost3NearBorderPredictorZetaKeyphusTopBottomOpposite::get_num_output_group()
0000000000abcd94 T XgBoost3NearBorderPredictorZetaKeyphusTopBottomOpposite::predict(Entry*)
00000000009ec598 T XgBoost3NearBorderPredictorZeusKeyphusLeftRightOpposite::get_num_feature()
00000000009ec590 T XgBoost3NearBorderPredictorZeusKeyphusLeftRightOpposite::get_num_output_group()
00000000009ec5a0 T XgBoost3NearBorderPredictorZeusKeyphusLeftRightOpposite::predict(Entry*)
00000000009f1c18 T XgBoost3NearBorderPredictorZeusKeyphusTopBottomOpposite::get_num_feature()
00000000009f1c10 T XgBoost3NearBorderPredictorZeusKeyphusTopBottomOpposite::get_num_output_group()
00000000009f1c20 T XgBoost3NearBorderPredictorZeusKeyphusTopBottomOpposite::predict(Entry*)
0000000000bfa518 T XgBoost3NearBorderPredictorLuccaKeyphusLeftRightOpposite::get_num_feature()
0000000000bfa510 T XgBoost3NearBorderPredictorLuccaKeyphusLeftRightOpposite::get_num_output_group()
0000000000bfa520 T XgBoost3NearBorderPredictorLuccaKeyphusLeftRightOpposite::predict(Entry*)
0000000000bff768 T XgBoost3NearBorderPredictorLuccaKeyphusTopBottomOpposite::get_num_feature()
0000000000bff760 T XgBoost3NearBorderPredictorLuccaKeyphusTopBottomOpposite::get_num_output_group()
0000000000bff770 T XgBoost3NearBorderPredictorLuccaKeyphusTopBottomOpposite::predict(Entry*)
0000000000c17d8c T XgBoost3NearBorderPredictorCarinaKeyphusLeftRightOpposite::get_num_feature()
0000000000c17d84 T XgBoost3NearBorderPredictorCarinaKeyphusLeftRightOpposite::get_num_output_group()
0000000000c17d94 T XgBoost3NearBorderPredictorCarinaKeyphusLeftRightOpposite::predict(Entry*)
0000000000c1b490 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottomOpposite::get_num_feature()
0000000000c1b488 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottomOpposite::get_num_output_group()
0000000000c1b498 T XgBoost3NearBorderPredictorCarinaKeyphusTopBottomOpposite::predict(Entry*)
0000000000657ec0 W Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >::compute()
0000000000657c40 W Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 1, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 1, -1, -1> > const&)
0000000000654c24 W Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 6, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long)
000000000065bafc W Eigen::internal::gemm_pack_lhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 6, 2, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long)
000000000065448c W Eigen::internal::gemm_pack_lhs<double, long, Eigen::internal::const_blas_data_mapper<double, long, 0>, 6, 2, 0, false, false>::operator()(double*, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, long, long, long, long)
0000000000654760 W Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::const_blas_data_mapper<double, long, 0>, 4, 0, false, false>::operator()(double*, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, long, long, long, long)
000000000065b578 W Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::const_blas_data_mapper<double, long, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, long, long, long, long)
00000000006567d8 W Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::const_blas_data_mapper<double, long, 1>, 4, 1, false, false>::operator()(double*, Eigen::internal::const_blas_data_mapper<double, long, 1> const&, long, long, long, long)
000000000065ce00 W Eigen::internal::triangular_solve_matrix<double, long, 2, 1, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
000000000065a90c W Eigen::internal::triangular_solve_matrix<double, long, 2, 6, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
0000000000651a58 W Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 1>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 1> const&, double*, long, double)
0000000000653af4 W void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long)
000000000065a59c W void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long)
000000000069d518 T Timer::GetTime()
0000000000650b24 T Median::FindMedian(std::__1::vector<MedianElement, std::__1::allocator<MedianElement> >&)
00000000006507c4 T Median::Insert(std::__1::vector<MedianElement, std::__1::allocator<MedianElement> >&, double, int)
000000000034f194 T Parser::ClearFlags()
000000000034f18c T Parser::PostParser()
000000000033ea2c T Parser::EmptySection(void*)
0000000000350578 T Parser::GetProcessType(eWINDOW_TYPE)
000000000033e76c T Parser::UpdateBlobData(void*)
0000000000350a24 T Parser::IsBlobNearBorder(BlobData*)
0000000000351888 T Parser::StitchHeatFrames(InputProcessingInfo*)
00000000003479ac T Parser::UpdatePenReportV2(void*)
000000000033c820 T Parser::UnSupportedSection(void*)
0000000000347fd8 T Parser::UpdateBitmapRecord(void*)
000000000034f14c T Parser::UpdateOutputBuffer(InputProcessingInfo*)
000000000033ea34 T Parser::UpdateScanTimeData(void*)
0000000000350b00 T Parser::IsValidForStitching(InputProcessingInfo*)
000000000033f068 T Parser::UpdateAuditLogtData(void*)
000000000034f388 T Parser::BuildTouchedAntsData(unsigned short, unsigned short, unsigned char**, AxisTouchedAntsOutput*, unsigned int)
00000000003508e0 T Parser::SetFwPenProtocolType(eWINDOW_TYPE, ePEN_PROTOCOL_VERSION)
0000000000347a14 T Parser::UpdateCnmRequestData(void*)
0000000000346f74 T Parser::UpdateHastaPenReport(void*)
000000000034fc38 T Parser::IsReceivedPenSections()
0000000000349d60 T Parser::ProcessReceiveMessage(unsigned int, unsigned char*, unsigned char*, InputProcessingInfo*, eREGION_ID)
0000000000347f7c T Parser::UpdateHeatPingRequest(void*)
0000000000349094 T Parser::UpdateIncellDebugData(void*)
000000000033e1fc T Parser::UpdateNoiseAndPenData(void*)
000000000034cb40 T Parser::InitParserDbEveryCycle()
000000000033dc80 T Parser::UpdateGainClippingData(void*)
00000000003485f8 T Parser::UpdateTelemetryLogData(void*)
000000000033c5e0 T Parser::InitSectionHandlersArray()
000000000033d8dc T Parser::UpdateFrequencyNoiseData(void*)
000000000033d330 T Parser::UpdateIrregularEventData(void*)
0000000000344f30 T Parser::UpdatePenProcessMetadata(void*)
000000000033d8b8 T Parser::UpdateTopologyFilterData(void*)
000000000034fd88 T Parser::GetWindowEssentialDataIdx(eWINDOW_TYPE, unsigned char)
0000000000349d14 T Parser::InitPenParserDbEveryCycle()
000000000033efcc T Parser::UpdateCampoCandidatesData(void*)
000000000033f10c T Parser::UpdatePenProcessingPenLift(void*)
000000000033fc88 T Parser::UpdatePenProcessGeneralData(void*)
000000000034f2b0 T Parser::BuildTouchedAntsArrayFromBmp(bool*, unsigned char*, unsigned short, unsigned short, bool*)
000000000034f4cc T Parser::UpdatePenWindowEssentialData(PenWindowData*)
0000000000347f98 T Parser::UpdateHeatExtendedPingRequest(void*)
0000000000345978 T Parser::UpdatePenProcessDetectionData(void*)
0000000000342840 T Parser::UpdatePenProcessDftWindowData(void*)
0000000000340278 T Parser::UpdatePenProcessJnrOutputData(void*)
0000000000341c4c T Parser::UpdatePenProcessMagnitudeData(void*)
0000000000350a88 T Parser::GetStBlobNumberOfTouchedBorder(BlobData*)
0000000000349608 T Parser::UpdatePenProcessJnrOutputDataV2(void*)
000000000033cd8c T Parser::ParseSectionHeaderAndCycleHeader(void*)
0000000000340fb0 T Parser::UpdatePenProcessDataSelectionData(void*)
0000000000344774 T Parser::UpdatePenProcessMultipleRegionData(void*)
0000000000344b4c T Parser::UpdatePenProcessTouchedAntennasData(void*)
0000000000340994 T Parser::UpdatePenProcessNoiseMetricsOutputData(void*)
000000000033f09c T Parser::UpdateTelemetryLogDataWithoutFwVersion(void*)
00000000003509f0 T Parser::ParseSectionHeaderAndCycleHeaderForTouch(CcpSectionCycleHeader*)
000000000034f0a0 T Parser::UpdateMagnitudeMultiTouch1ByteDataFromHeatFrame(void*)
000000000033c1ec T Parser::Init(std::__1::shared_ptr<Timer>&)
000000000034cbb4 T Parser::RunParser(unsigned int, unsigned char*, eREGION_ID)
000000000033c1d0 T Parser::Parser()
000000000033c1d0 T Parser::Parser()
000000000069c840 T PenSnr::CalcPhaseDiffs(Complex<float> (&) [9], unsigned char, float (&) [3])
000000000069c63c T PenSnr::SelectAntennas(unsigned char, PenDftResult const*, Complex<float>*, unsigned char&)
000000000069c424 T PenSnr::RunPenSnr(PenSnrIn const&, PenSnrOut&)
0000000000d2eefc B Random::mIsInitialized
000000000069d4dc T Random::GenerateRandomInteger()
                 U google::protobuf::StringPiece::LogFatalSizeTooBig(unsigned long, char const*)
                 U google::protobuf::io::CodedInputStream::ReadTagFallback(unsigned int)
                 U google::protobuf::io::CodedInputStream::ReadVarint32Fallback(unsigned int)
                 U google::protobuf::io::CodedOutputStream::WriteRaw(void const*, int)
                 U google::protobuf::io::CodedOutputStream::CodedOutputStream(google::protobuf::io::ZeroCopyOutputStream*, bool)
                 U google::protobuf::io::CodedOutputStream::~CodedOutputStream()
                 U google::protobuf::io::StringOutputStream::StringOutputStream(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
00000000002d3bf0 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames>(google::protobuf::Arena*)
00000000002d3d7c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise>(google::protobuf::Arena*)
00000000002d419c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics>(google::protobuf::Arena*)
00000000002d3e00 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1>(google::protobuf::Arena*)
00000000002d3e84 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2>(google::protobuf::Arena*)
00000000002d3f08 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3>(google::protobuf::Arena*)
00000000002d3f8c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime>(google::protobuf::Arena*)
00000000002d4010 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy>(google::protobuf::Arena*)
00000000002d4328 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition>(google::protobuf::Arena*)
00000000002d42a4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports>(google::protobuf::Arena*)
00000000002d3c74 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors>(google::protobuf::Arena*)
00000000002d3cf8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication>(google::protobuf::Arena*)
00000000002d4094 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1>(google::protobuf::Arena*)
00000000002d4118 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2>(google::protobuf::Arena*)
00000000002d4220 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics* google::protobuf::Arena::CreateMaybeMessage<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics>(google::protobuf::Arena*)
                 U google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase*)
                 U google::protobuf::internal::DestroyString(void const*)
                 U google::protobuf::internal::OnShutdownRun(void (*)(void const*), void const*)
                 U google::protobuf::internal::VerifyVersion(int, int, char const*)
                 U google::protobuf::internal::DestroyMessage(void const*)
                 U google::protobuf::internal::LookUpEnumName(google::protobuf::internal::EnumEntry const*, int const*, unsigned long, int)
                 U google::protobuf::internal::WireFormatLite::WriteInt32(int, int, google::protobuf::io::CodedOutputStream*)
                 U google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, google::protobuf::io::CodedOutputStream*)
                 U google::protobuf::internal::WireFormatLite::ReadBytes(google::protobuf::io::CodedInputStream*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
                 U google::protobuf::internal::WireFormatLite::SkipField(google::protobuf::io::CodedInputStream*, unsigned int, google::protobuf::io::CodedOutputStream*)
                 U google::protobuf::internal::LookUpEnumValue(google::protobuf::internal::EnumEntry const*, unsigned long, google::protobuf::StringPiece, int*)
                 U google::protobuf::internal::InitProtobufDefaults()
                 U google::protobuf::internal::InitializeEnumStrings(google::protobuf::internal::EnumEntry const*, int const*, unsigned long, google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*)
00000000002d45ac W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames>(void*)
00000000002d45d0 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise>(void*)
00000000002d4630 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics>(void*)
00000000002d45dc W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1>(void*)
00000000002d45e8 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2>(void*)
00000000002d45f4 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3>(void*)
00000000002d4600 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime>(void*)
00000000002d460c W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy>(void*)
00000000002d4654 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition>(void*)
00000000002d4648 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports>(void*)
00000000002d45b8 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors>(void*)
00000000002d45c4 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication>(void*)
00000000002d4618 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1>(void*)
00000000002d4624 W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2>(void*)
00000000002d463c W void google::protobuf::internal::arena_destruct_object<android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics>(void*)
00000000002d4598 W void google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, google::protobuf::internal::InternalMetadataWithArenaLite>::Container>(void*)
                 U google::protobuf::internal::fixed_address_empty_string
                 U google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(unsigned long, void (*)(void*))
                 U android::frameworks::stats::V1_0::VendorAtom::Value::stringValue(android::hardware::hidl_string&&)
                 U android::frameworks::stats::V1_0::VendorAtom::Value::intValue(int)
                 U android::frameworks::stats::V1_0::VendorAtom::Value::Value(android::frameworks::stats::V1_0::VendorAtom::Value const&)
                 U android::frameworks::stats::V1_0::VendorAtom::Value::Value()
                 U android::frameworks::stats::V1_0::VendorAtom::Value::~Value()
                 U android::frameworks::stats::V1_0::VendorAtom::Value::operator=(android::frameworks::stats::V1_0::VendorAtom::Value const&)
                 U android::frameworks::stats::V1_0::IStats::tryGetService(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
                 U android::sp_report_race()
00000000002ee1c0 W android::sp<android::frameworks::stats::V1_0::IStats>::~sp()
                 U android::hardware::hidl_string::hidl_string(char const*)
                 U android::hardware::hidl_string::hidl_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
                 U android::hardware::hidl_string::~hidl_string()
                 U android::hardware::details::return_status::~return_status()
00000000002ba540 T android::hardware::microsoft::surface::TouchAndPenAtoms::Ids_IsValid(int)
00000000002baf04 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames*)
00000000002ba924 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::default_instance()
00000000002badc0 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002ba6d4 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::InitAsDefaultInstance()
00000000002ba9bc T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
0000000000d1a1e8 B android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::_i_give_permission_to_break_this_code_default_surface_
00000000002ba95c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::Clear()
00000000002bae84 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames const&)
00000000002badc4 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames const&)
00000000002ba77c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::ReverseDomainNames(android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames const&)
00000000002ba6d8 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::ReverseDomainNames()
00000000002ba77c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::ReverseDomainNames(android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames const&)
00000000002ba6d8 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::ReverseDomainNames()
00000000002ba8f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::~ReverseDomainNames()
00000000002ba85c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::~ReverseDomainNames()
00000000002ba85c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::~ReverseDomainNames()
00000000002bf5c4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise*)
00000000002bd97c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::default_instance()
00000000002bf258 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002bd684 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::InitAsDefaultInstance()
00000000002bda88 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002bd9b4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::Clear()
00000000002bf584 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise const&)
00000000002bf25c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise const&)
00000000002bd750 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::AndroidTelemetryNoise(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise const&)
00000000002bd688 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::AndroidTelemetryNoise()
00000000002bd750 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::AndroidTelemetryNoise(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise const&)
00000000002bd688 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::AndroidTelemetryNoise()
00000000002bd950 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::~AndroidTelemetryNoise()
00000000002bd890 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::~AndroidTelemetryNoise()
00000000002bd890 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::~AndroidTelemetryNoise()
00000000002cf7e4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics*)
00000000002ce3cc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::default_instance()
00000000002cf53c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002ce0f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::InitAsDefaultInstance()
00000000002ce4c0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002ce404 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::Clear()
00000000002cf7a4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics const&)
00000000002cf540 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics const&)
00000000002ce1b8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::AndroidG6OtfcStatistics(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics const&)
00000000002ce0fc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::AndroidG6OtfcStatistics()
00000000002ce1b8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::AndroidG6OtfcStatistics(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics const&)
00000000002ce0fc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::AndroidG6OtfcStatistics()
00000000002ce3a0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::~AndroidG6OtfcStatistics()
00000000002ce2e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::~AndroidG6OtfcStatistics()
00000000002ce2e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::~AndroidG6OtfcStatistics()
00000000002c1c00 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1*)
00000000002bfbdc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::default_instance()
00000000002c182c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002bf8f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::InitAsDefaultInstance()
00000000002bfd00 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002bfc14 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::Clear()
00000000002c1bc0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1 const&)
00000000002c1830 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1 const&)
00000000002bf9bc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::AndroidTelemetryPenStudy1(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1 const&)
00000000002bf8fc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::AndroidTelemetryPenStudy1()
00000000002bf9bc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::AndroidTelemetryPenStudy1(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1 const&)
00000000002bf8fc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::AndroidTelemetryPenStudy1()
00000000002bfbb0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::~AndroidTelemetryPenStudy1()
00000000002bfaf0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::~AndroidTelemetryPenStudy1()
00000000002bfaf0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::~AndroidTelemetryPenStudy1()
00000000002c44d0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2*)
00000000002c227c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::default_instance()
00000000002c40cc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002c1f94 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::InitAsDefaultInstance()
00000000002c23a8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002c22b4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::Clear()
00000000002c4490 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2 const&)
00000000002c40d0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2 const&)
00000000002c205c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::AndroidTelemetryPenStudy2(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2 const&)
00000000002c1f98 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::AndroidTelemetryPenStudy2()
00000000002c205c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::AndroidTelemetryPenStudy2(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2 const&)
00000000002c1f98 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::AndroidTelemetryPenStudy2()
00000000002c2250 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::~AndroidTelemetryPenStudy2()
00000000002c2190 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::~AndroidTelemetryPenStudy2()
00000000002c2190 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::~AndroidTelemetryPenStudy2()
00000000002c5c74 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3*)
00000000002c4b5c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::default_instance()
00000000002c5a20 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002c4894 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::InitAsDefaultInstance()
00000000002c4c44 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002c4b94 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::Clear()
00000000002c5c34 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3 const&)
00000000002c5a24 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3 const&)
00000000002c4950 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::AndroidTelemetryPenStudy3(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3 const&)
00000000002c4898 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::AndroidTelemetryPenStudy3()
00000000002c4950 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::AndroidTelemetryPenStudy3(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3 const&)
00000000002c4898 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::AndroidTelemetryPenStudy3()
00000000002c4b30 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::~AndroidTelemetryPenStudy3()
00000000002c4a70 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::~AndroidTelemetryPenStudy3()
00000000002c4a70 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::~AndroidTelemetryPenStudy3()
00000000002c6f44 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime*)
00000000002c6174 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::default_instance()
00000000002c6d38 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002c5eb8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::InitAsDefaultInstance()
00000000002c6258 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002c61ac T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::Clear()
00000000002c6f04 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime const&)
00000000002c6d3c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime const&)
00000000002c5f70 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::AndroidTelemetryUsageTime(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime const&)
00000000002c5ebc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::AndroidTelemetryUsageTime()
00000000002c5f70 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::AndroidTelemetryUsageTime(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime const&)
00000000002c5ebc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::AndroidTelemetryUsageTime()
00000000002c6148 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::~AndroidTelemetryUsageTime()
00000000002c6088 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::~AndroidTelemetryUsageTime()
00000000002c6088 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::~AndroidTelemetryUsageTime()
00000000002c8fc4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy*)
00000000002c7434 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::default_instance()
00000000002c8c68 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002c7148 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::InitAsDefaultInstance()
00000000002c753c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002c746c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::Clear()
00000000002c8f84 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy const&)
00000000002c8c6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy const&)
00000000002c7210 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::AndroidTelemetryTouchStudy(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy const&)
00000000002c714c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::AndroidTelemetryTouchStudy()
00000000002c7210 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::AndroidTelemetryTouchStudy(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy const&)
00000000002c714c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::AndroidTelemetryTouchStudy()
00000000002c7408 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::~AndroidTelemetryTouchStudy()
00000000002c7348 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::~AndroidTelemetryTouchStudy()
00000000002c7348 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::~AndroidTelemetryTouchStudy()
00000000002d388c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition*)
00000000002d1aac T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::default_instance()
00000000002d34f4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002d17d0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::InitAsDefaultInstance()
00000000002d1bc4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002d1ae4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::Clear()
00000000002d384c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition const&)
00000000002d34f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition const&)
00000000002d1894 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::AndroidTelemetryPenPosition(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition const&)
00000000002d17d4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::AndroidTelemetryPenPosition()
00000000002d1894 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::AndroidTelemetryPenPosition(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition const&)
00000000002d17d4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::AndroidTelemetryPenPosition()
00000000002d1a80 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::~AndroidTelemetryPenPosition()
00000000002d19c0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::~AndroidTelemetryPenPosition()
00000000002d19c0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::~AndroidTelemetryPenPosition()
00000000002d1610 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports*)
00000000002d0b58 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::default_instance()
00000000002d1458 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002d08ac T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::InitAsDefaultInstance()
00000000002d0c30 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002d0b90 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::Clear()
00000000002d15d0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports const&)
00000000002d145c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports const&)
00000000002d095c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::AndroidTelemetryTouchReports(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports const&)
00000000002d08b0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::AndroidTelemetryTouchReports()
00000000002d095c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::AndroidTelemetryTouchReports(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports const&)
00000000002d08b0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::AndroidTelemetryTouchReports()
00000000002d0b2c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::~AndroidTelemetryTouchReports()
00000000002d0a6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::~AndroidTelemetryTouchReports()
00000000002d0a6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::~AndroidTelemetryTouchReports()
00000000002bc36c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors*)
00000000002bb320 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::default_instance()
00000000002bc130 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002bb058 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::InitAsDefaultInstance()
00000000002bb40c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002bb358 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::Clear()
00000000002bc32c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors const&)
00000000002bc134 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors const&)
00000000002bb114 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::AndroidTelemetryGeneralErrors(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors const&)
00000000002bb05c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::AndroidTelemetryGeneralErrors()
00000000002bb114 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::AndroidTelemetryGeneralErrors(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors const&)
00000000002bb05c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::AndroidTelemetryGeneralErrors()
00000000002bb2f4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::~AndroidTelemetryGeneralErrors()
00000000002bb234 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::~AndroidTelemetryGeneralErrors()
00000000002bb234 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::~AndroidTelemetryGeneralErrors()
00000000002bd498 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication*)
00000000002bc854 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::default_instance()
00000000002bd2b4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002bc5a4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::InitAsDefaultInstance()
00000000002bc938 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002bc88c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::Clear()
00000000002bd458 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication const&)
00000000002bd2b8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication const&)
00000000002bc658 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::AndroidTelemetryGhostIndication(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication const&)
00000000002bc5a8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::AndroidTelemetryGhostIndication()
00000000002bc658 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::AndroidTelemetryGhostIndication(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication const&)
00000000002bc5a8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::AndroidTelemetryGhostIndication()
00000000002bc828 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::~AndroidTelemetryGhostIndication()
00000000002bc768 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::~AndroidTelemetryGhostIndication()
00000000002bc768 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::~AndroidTelemetryGhostIndication()
00000000002cb53c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1*)
00000000002c95cc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::default_instance()
00000000002cb178 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002c92e8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::InitAsDefaultInstance()
00000000002c96f4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002c9604 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::Clear()
00000000002cb4fc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1 const&)
00000000002cb17c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1 const&)
00000000002c93ac T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::AndroidTelemetryZeroForceInking1(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1 const&)
00000000002c92ec T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::AndroidTelemetryZeroForceInking1()
00000000002c93ac T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::AndroidTelemetryZeroForceInking1(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1 const&)
00000000002c92ec T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::AndroidTelemetryZeroForceInking1()
00000000002c95a0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::~AndroidTelemetryZeroForceInking1()
00000000002c94e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::~AndroidTelemetryZeroForceInking1()
00000000002c94e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::~AndroidTelemetryZeroForceInking1()
00000000002cdd3c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2*)
00000000002cbba4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::default_instance()
00000000002cd948 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002cb8c8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::InitAsDefaultInstance()
00000000002cbccc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002cbbdc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::Clear()
00000000002cdcfc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2 const&)
00000000002cd94c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2 const&)
00000000002cb98c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::AndroidTelemetryZeroForceInking2(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2 const&)
00000000002cb8cc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::AndroidTelemetryZeroForceInking2()
00000000002cb98c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::AndroidTelemetryZeroForceInking2(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2 const&)
00000000002cb8cc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::AndroidTelemetryZeroForceInking2()
00000000002cbb78 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::~AndroidTelemetryZeroForceInking2()
00000000002cbab8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::~AndroidTelemetryZeroForceInking2()
00000000002cbab8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::~AndroidTelemetryZeroForceInking2()
0000000000d19940 B android::hardware::microsoft::surface::TouchAndPenAtoms::_ReverseDomainNames_default_instance_
00000000002d06f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::InternalSwap(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics*)
00000000002cfd14 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::default_instance()
00000000002d0558 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)
00000000002cfa68 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::InitAsDefaultInstance()
00000000002cfdec T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)
00000000002cfd4c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::Clear()
00000000002d06b8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::CopyFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics const&)
00000000002d055c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::MergeFrom(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics const&)
00000000002cfb18 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::AndroidTelemetryG6CycleReactorStatistics(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics const&)
00000000002cfa6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::AndroidTelemetryG6CycleReactorStatistics()
00000000002cfb18 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::AndroidTelemetryG6CycleReactorStatistics(android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics const&)
00000000002cfa6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::AndroidTelemetryG6CycleReactorStatistics()
00000000002cfce8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::~AndroidTelemetryG6CycleReactorStatistics()
00000000002cfc28 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::~AndroidTelemetryG6CycleReactorStatistics()
00000000002cfc28 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::~AndroidTelemetryG6CycleReactorStatistics()
0000000000d19a08 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryNoise_default_instance_
0000000000d19ee8 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidG6OtfcStatistics_default_instance_
0000000000d19aa8 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryPenStudy1_default_instance_
0000000000d19b60 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryPenStudy2_default_instance_
0000000000d19c28 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryPenStudy3_default_instance_
0000000000d19c88 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryUsageTime_default_instance_
0000000000d19cd8 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryTouchStudy_default_instance_
0000000000d19fd8 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryPenPosition_default_instance_
0000000000d19f98 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryTouchReports_default_instance_
0000000000d19960 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryGeneralErrors_default_instance_
0000000000d199c0 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryGhostIndication_default_instance_
0000000000d19d70 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryZeroForceInking1_default_instance_
0000000000d19e28 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryZeroForceInking2_default_instance_
0000000000d19f58 B android::hardware::microsoft::surface::TouchAndPenAtoms::_AndroidTelemetryG6CycleReactorStatistics_default_instance_
00000000002ba558 T android::hardware::microsoft::surface::TouchAndPenAtoms::Ids_Name(android::hardware::microsoft::surface::TouchAndPenAtoms::Ids)
00000000002ba62c T android::hardware::microsoft::surface::TouchAndPenAtoms::Ids_Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, android::hardware::microsoft::surface::TouchAndPenAtoms::Ids*)
0000000000393010 T Reporter::FillPenReport(HeatPenReport*, PenHidReportStruct*)
0000000000398820 T Reporter::SendPenReports(PenHidReportsContainer*, unsigned char)
0000000000392bf8 T Reporter::FillTouchReport(HeatTouchReport*, GeneralFingerReport*, unsigned long)
0000000000399514 T Reporter::SendCampoReports()
0000000000395b60 T Reporter::SendTouchReports(TracklibOutput*, eCONFIGURATION_TOPOLOGY, eREGION_ID, unsigned long)
000000000039278c T Reporter::InitTouchReportEnable()
00000000003954e4 T Reporter::ConvertToHeatPenStatus(unsigned char)
0000000000393008 T Reporter::ConvertToHeatTouchStatus(unsigned char)
0000000000399518 T Reporter::CleanActiveReportsFromRegion(eREGION_ID)
0000000000399b80 T Reporter::ResetOverallNumberOfTouchReports()
0000000000392b04 T Reporter::InitLogicalAndPhysicalSizeForTraces()
00000000003925e4 T Reporter::Init(IHeatAdaptor*, std::__1::shared_ptr<PersistentStorage>)
00000000002ee104 T TimerEos::End(Timer::eTIMER_TYPE)
00000000002ee0e4 T TimerEos::Init()
00000000002ee0e8 T TimerEos::Start(Timer::eTIMER_TYPE)
00000000005c189c T TrackLib::CloseOldTracks(unsigned short)
00000000005c183c T TrackLib::PrepareTracking(TuProcessInput*, TracklibPrepareTrackingIn*)
00000000005c1480 T TrackLib::RunTrackingProcess(TuProcessOut*, TuProcessInput*)
00000000005c1894 T TrackLib::CleanTrackLibModule()
00000000005c1348 T TrackLib::FillAfgEdgePosition(TouchProcessingMngrInitStruct*, G5StaticConfig*)
00000000005c15fc T TrackLib::InitTrackingProcess(TuProcessOut*, TuProcessInput*, TracklibPrepareTrackingIn*, TracklibMatchingIn*)
0000000000d2e298 B TrackLib::mpCommonTrackingCfg
00000000005c1408 T TrackLib::UpdateNoiseIndications(unsigned short*, TracklibPrepareTrackingIn*)
00000000005c1984 T TrackLib::IrregularEventHistoryHandling(TouchProcessingInput*, unsigned char)
00000000005c1918 T TrackLib::PrepareIrregularEventForTrackLib(TouchProcessingInput*, TuProcessInput&)
00000000005c1904 T TrackLib::ForceAllTracksClosingWithLiftIndication()
00000000005c190c T TrackLib::GetPrevConsecutivesIrregularEventsCounter()
00000000005c11bc T TrackLib::Init(CommonTrackingCfg*, TouchProcessingMngrInitStruct*, StaticConfig*, TouchPostProcessingCfg*, TouchDetectionCfg*)
00000000005c1148 T TrackLib::TrackLib(CommonTrackingCfg&, TouchPostProcessingCfg*)
00000000005c1148 T TrackLib::TrackLib(CommonTrackingCfg&, TouchPostProcessingCfg*)
000000000039da54 T Heartbeat::SendHeartbeatReport(HeartbeatReportPayload&, EosHeatDevice const&)
000000000039da4c T Heartbeat::Init(IHeatAdaptor*)
000000000039da40 T Heartbeat::Instance()
00000000005bea24 T Hungarian::RunHungarian(HungarianInput&)
00000000005be7bc T Hungarian::HungarianInitBeforeRun(SepFingGroup*, DetectedArray&, unsigned char*, TrackedFinger*, unsigned char*, HungarianInput&)
00000000005be8f4 T Hungarian::HungarianInitBeforeRun(HungarianInput&)
00000000003a59b0 T OtfcStats::SendTelemetryInternal(int)
00000000003a59c8 T OtfcStats::WriteCountersToFileInternal(std::__1::basic_ofstream<char, std::__1::char_traits<char> >&, char const*)
00000000003a59b4 T OtfcStats::WriteToFileTelemetryInternal(char const*, char const*)
000000000064b42c T PenVendor::ExtractVendorParams(unsigned int, ePEN_VENDOR_ID&, ePEN_VENDOR&)
000000000064b4c4 T PenVendor::GetPenVendorEntryPtr(ePEN_VENDOR)
000000000064b488 T PenVendor::FindPenVendorForCalculation(ePEN_VENDOR)
00000000003a3a9c T StatsBase::ResetSession()
00000000003a357c T StatsBase::ClearCounters(bool)
00000000003a3610 T StatsBase::SendTelemetry(int)
00000000003a0af4 T StatsBase::SetFwCounters(FwVersionNumber const&, unsigned int*, unsigned int, unsigned char)
00000000003a3c9c T StatsBase::SetNewDataFlag()
00000000003a3608 T StatsBase::IsNewDataToSend()
00000000003a1e20 T StatsBase::SetCounterValue(unsigned int, unsigned int, unsigned char, bool)
00000000003a2e28 T StatsBase::AddMwCounterValue(unsigned int, unsigned int, bool)
00000000003a3ca8 T StatsBase::WriteToFileWrapper(char const*, char const*, char const*, char const*)
00000000003a3858 T StatsBase::SumMultichipCounters()
00000000003a3a90 T StatsBase::WriteToFileTelemetry(char const*, char const*)
00000000003a28a4 T StatsBase::SetMwCounterValueWithNoDiff(unsigned int, unsigned int, bool)
00000000003a05b4 T StatsBase::Init(TelemetryGroup const&)
00000000006511a8 T KalmanFilter::State() const
0000000000663898 T RingCorruption::GetCentroidsHistoryOfSpecificAxis(eAXIS) const
000000000069ce34 T LocalPenIdManager::IsNoTempLocalId() const
000000000069cca0 T LocalPenIdManager::IsTemporaryLocalIdInUse(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >&) const
0000000000649814 T HastaPostProcessingSmoothing::IsBorderReport(HastaInternalReport const*) const
                 U google::protobuf::MessageLite::InitializationErrorString() const
                 U google::protobuf::MessageLite::SerializeWithCachedSizesToArray(unsigned char*) const
                 U google::protobuf::MessageLite::InternalSerializeWithCachedSizesToArray(unsigned char*) const
                 U google::protobuf::Arena::OnArenaAllocation(std::type_info const*, unsigned long) const
                 U android::RefBase::decStrong(void const*) const
00000000002baff0 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::GetTypeName() const
00000000002bad20 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::ByteSizeLong() const
00000000002baefc T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::IsInitialized() const
00000000002ba91c T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::SetCachedSize(int) const
00000000002bac70 T android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002bf890 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::GetTypeName() const
00000000002beab0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::ByteSizeLong() const
00000000002bf5bc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::IsInitialized() const
00000000002bd974 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::SetCachedSize(int) const
00000000002be718 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002cfa00 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::GetTypeName() const
00000000002cf014 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::ByteSizeLong() const
00000000002cf7dc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::IsInitialized() const
00000000002ce3c4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::SetCachedSize(int) const
00000000002ced84 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002c1f2c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::GetTypeName() const
00000000002c0f60 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::ByteSizeLong() const
00000000002c1bf8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::IsInitialized() const
00000000002bfbd4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::SetCachedSize(int) const
00000000002c0b48 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002c482c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::GetTypeName() const
00000000002c3758 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::ByteSizeLong() const
00000000002c44c8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::IsInitialized() const
00000000002c2274 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::SetCachedSize(int) const
00000000002c32f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002c5e50 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::GetTypeName() const
00000000002c55d8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::ByteSizeLong() const
00000000002c5c6c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::IsInitialized() const
00000000002c4b54 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::SetCachedSize(int) const
00000000002c53a8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002c70e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::GetTypeName() const
00000000002c69e0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::ByteSizeLong() const
00000000002c6f3c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::IsInitialized() const
00000000002c616c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::SetCachedSize(int) const
00000000002c6818 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002c9280 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::GetTypeName() const
00000000002c84f8 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::ByteSizeLong() const
00000000002c8fbc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::IsInitialized() const
00000000002c742c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::SetCachedSize(int) const
00000000002c8178 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002d3b88 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::GetTypeName() const
00000000002d2cd4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::ByteSizeLong() const
00000000002d3884 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::IsInitialized() const
00000000002d1aa4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::SetCachedSize(int) const
00000000002d2904 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002d176c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::GetTypeName() const
00000000002d11f4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::ByteSizeLong() const
00000000002d1608 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::IsInitialized() const
00000000002d0b50 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::SetCachedSize(int) const
00000000002d108c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002bc538 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::GetTypeName() const
00000000002bbd28 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::ByteSizeLong() const
00000000002bc364 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::IsInitialized() const
00000000002bb318 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::SetCachedSize(int) const
00000000002bbb18 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002bd614 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::GetTypeName() const
00000000002bcfdc T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::ByteSizeLong() const
00000000002bd490 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::IsInitialized() const
00000000002bc84c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::SetCachedSize(int) const
00000000002bce44 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002cb858 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::GetTypeName() const
00000000002ca8e4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::ByteSizeLong() const
00000000002cb534 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::IsInitialized() const
00000000002c95c4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::SetCachedSize(int) const
00000000002ca4e4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002ce088 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::GetTypeName() const
00000000002cd00c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::ByteSizeLong() const
00000000002cdd34 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::IsInitialized() const
00000000002cbb9c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::SetCachedSize(int) const
00000000002ccbc4 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
00000000002d0844 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::GetTypeName() const
00000000002d0338 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::ByteSizeLong() const
00000000002d06f0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::IsInitialized() const
00000000002cfd0c T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::SetCachedSize(int) const
00000000002d01f0 T android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const
0000000000399b78 T Reporter::GetOverallNumberOfTouchReports() const
00000000002dcd14 W std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
                 U std::__1::__shared_weak_count::__get_deleter(std::type_info const&) const
                 U std::__1::__vector_base_common<true>::__throw_length_error() const
                 U std::__1::__basic_string_common<true>::__throw_length_error() const
                 U std::__1::locale::has_facet(std::__1::locale::id&) const
                 U std::__1::locale::use_facet(std::__1::locale::id&) const
                 U std::__1::ios_base::getloc() const
                 U std::logic_error::logic_error(char const*)
                 U std::length_error::~length_error()
                 U std::runtime_error::runtime_error(char const*)
                 U std::runtime_error::~runtime_error()
00000000005be674 W std::__1::__deque_base<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > >::~__deque_base()
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
00000000002e2120 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::open(char const*, unsigned int)
00000000002e15ac W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::sync()
00000000002e1294 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
00000000002e1384 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
00000000002e147c W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
00000000002e153c W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekpos(std::__1::fpos<mbstate_t>, unsigned int)
00000000002e1a80 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::overflow(int)
00000000002e1a20 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::pbackfail(int)
00000000002e17a8 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::underflow()
00000000002e1ff8 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::basic_filebuf()
00000000002e1270 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
00000000002e11a0 W std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
                 U std::__1::basic_istream<char, std::__1::char_traits<char> >::read(char*, long)
                 U std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
                 U std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
                 U std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::put(char)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::flush()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::write(char const*, long)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(bool)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(float)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned int)
                 U std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned short)
00000000005cb8ac W std::__1::__split_buffer<Eigen::Matrix<float, 2, 1, 0, 2, 1>*, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1>*> >::push_front(Eigen::Matrix<float, 2, 1, 0, 2, 1>*&&)
00000000005cc378 W std::__1::__split_buffer<Eigen::Matrix<float, 2, 1, 0, 2, 1>*, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1>*> >::shrink_to_fit()
00000000005cb5cc W std::__1::__split_buffer<Eigen::Matrix<float, 2, 1, 0, 2, 1>*, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1>*> >::push_back(Eigen::Matrix<float, 2, 1, 0, 2, 1>*&&)
00000000005cbe74 W std::__1::__split_buffer<Eigen::Matrix<float, 2, 1, 0, 2, 1>*, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1>*>&>::push_front(Eigen::Matrix<float, 2, 1, 0, 2, 1>* const&)
00000000005cbb94 W std::__1::__split_buffer<Eigen::Matrix<float, 2, 1, 0, 2, 1>*, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1>*>&>::push_back(Eigen::Matrix<float, 2, 1, 0, 2, 1>*&&)
                 U std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, long)
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long)
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::basic_streambuf()
                 U std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
00000000002dc694 W std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
00000000002dc868 W std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)
00000000002dc7f8 W std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)
00000000002dc7a8 W std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()
                 U std::__1::__shared_weak_count::__release_weak()
                 U std::__1::__shared_weak_count::~__shared_weak_count()
00000000002ee0ac W std::__1::__shared_ptr_pointer<PersistentStorageManager*, std::__1::default_delete<PersistentStorageManager>, std::__1::allocator<PersistentStorageManager> >::__on_zero_shared()
00000000002ee0c4 W std::__1::__shared_ptr_pointer<PersistentStorageManager*, std::__1::default_delete<PersistentStorageManager>, std::__1::allocator<PersistentStorageManager> >::__on_zero_shared_weak()
00000000002ee0c8 W std::__1::__shared_ptr_pointer<TimerEos*, std::__1::default_delete<TimerEos>, std::__1::allocator<TimerEos> >::__on_zero_shared()
00000000002ee0e0 W std::__1::__shared_ptr_pointer<TimerEos*, std::__1::default_delete<TimerEos>, std::__1::allocator<TimerEos> >::__on_zero_shared_weak()
00000000002dc9dc W std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
00000000002e1e38 W void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
                 U std::__1::cout
                 U std::__1::ctype<char>::id
00000000005cc15c W std::__1::deque<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > >::__move_assign(std::__1::deque<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > >&, std::__1::integral_constant<bool, true>)
00000000005cc2ac W std::__1::deque<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > >::shrink_to_fit()
00000000005cb0dc W std::__1::deque<Eigen::Matrix<float, 2, 1, 0, 2, 1>, std::__1::allocator<Eigen::Matrix<float, 2, 1, 0, 2, 1> > >::__add_back_capacity()
000000000038a6c8 W std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__map_value_compare<ePEN_VENDOR, std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::less<ePEN_VENDOR>, true>, std::__1::allocator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> > > >::__find_equal<ePEN_VENDOR>(std::__1::__tree_const_iterator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__tree_node<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, ePEN_VENDOR const&)
000000000038ab28 W void std::__1::__tree<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__map_value_compare<ePEN_VENDOR, std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::less<ePEN_VENDOR>, true>, std::__1::allocator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__tree_node<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__tree_node<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__tree_node<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, void*>*, long>)
00000000002dc204 W std::__1::__tree<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::__map_value_compare<ePEN_VENDOR, std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, std::__1::less<ePEN_VENDOR>, true>, std::__1::allocator<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul> >, void*>*)
00000000002dc178 W std::__1::__tree<std::__1::__value_type<ePROJECT_NAME, ProjectInfo*>, std::__1::__map_value_compare<ePROJECT_NAME, std::__1::__value_type<ePROJECT_NAME, ProjectInfo*>, std::__1::less<ePROJECT_NAME>, true>, std::__1::allocator<std::__1::__value_type<ePROJECT_NAME, ProjectInfo*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<ePROJECT_NAME, ProjectInfo*>, void*>*)
000000000038a3a4 W std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__map_value_compare<eXGBOOST_MODEL, std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::less<eXGBOOST_MODEL>, true>, std::__1::allocator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >::__find_equal<eXGBOOST_MODEL>(std::__1::__tree_const_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, eXGBOOST_MODEL const&)
000000000038a894 W void std::__1::__tree<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__map_value_compare<eXGBOOST_MODEL, std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::less<eXGBOOST_MODEL>, true>, std::__1::allocator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long>)
000000000038ae04 W std::__1::__tree_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long> std::__1::__tree<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__map_value_compare<eXGBOOST_MODEL, std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::less<eXGBOOST_MODEL>, true>, std::__1::allocator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >::__emplace_multi<std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > const&>(std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > const&)
000000000038a290 W std::__1::__tree_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long> std::__1::__tree<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__map_value_compare<eXGBOOST_MODEL, std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::less<eXGBOOST_MODEL>, true>, std::__1::allocator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >::__emplace_hint_unique_key_args<eXGBOOST_MODEL, std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > const&>(std::__1::__tree_const_iterator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*, long>, eXGBOOST_MODEL const&, std::__1::pair<eXGBOOST_MODEL const, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > const&)
00000000002dc1b8 W std::__1::__tree<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::__map_value_compare<eXGBOOST_MODEL, std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, std::__1::less<eXGBOOST_MODEL>, true>, std::__1::allocator<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<eXGBOOST_MODEL, std::__1::map<ePEN_VENDOR, std::__1::array<double (*)(Entry*), 2ul>, std::__1::less<ePEN_VENDOR>, std::__1::allocator<std::__1::pair<ePEN_VENDOR const, std::__1::array<double (*)(Entry*), 2ul> > > > >, void*>*)
00000000002e1de8 W std::__1::__tree<std::__1::__value_type<ePERSISTENT_STORAGE_TYPES, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<ePERSISTENT_STORAGE_TYPES, std::__1::__value_type<ePERSISTENT_STORAGE_TYPES, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<ePERSISTENT_STORAGE_TYPES>, true>, std::__1::allocator<std::__1::__value_type<ePERSISTENT_STORAGE_TYPES, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<ePERSISTENT_STORAGE_TYPES, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
00000000002ed828 W std::__1::__tree<std::__1::__value_type<EosHeatDevice const*, unsigned char>, std::__1::__map_value_compare<EosHeatDevice const*, std::__1::__value_type<EosHeatDevice const*, unsigned char>, std::__1::less<EosHeatDevice const*>, true>, std::__1::allocator<std::__1::__value_type<EosHeatDevice const*, unsigned char> > >::destroy(std::__1::__tree_node<std::__1::__value_type<EosHeatDevice const*, unsigned char>, void*>*)
00000000002edf9c W std::__1::__tree<std::__1::__value_type<unsigned char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
00000000002ee048 W std::__1::__tree<std::__1::__value_type<unsigned int, void*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, void*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, void*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, void*>, void*>*)
000000000038a250 W std::__1::__tree<std::__1::__value_type<unsigned short, ePROJECT_NAME>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, ePROJECT_NAME>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, ePROJECT_NAME> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, ePROJECT_NAME>, void*>*)
                 U std::__1::chrono::steady_clock::now()
                 U std::__1::chrono::system_clock::now()
                 U std::__1::locale::locale(std::__1::locale const&)
                 U std::__1::locale::~locale()
00000000006508d4 W std::__1::vector<MedianElement, std::__1::allocator<MedianElement> >::insert(std::__1::__wrap_iter<MedianElement const*>, MedianElement const&)
00000000003a4b54 W std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> >::__append(unsigned long, TelemetryCounter const&)
00000000003a4aac W std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> >::vector(std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> > const&)
000000000033c034 W std::__1::vector<FwTelemetryPerChip, std::__1::allocator<FwTelemetryPerChip> >::__append(unsigned long)
0000000000661f18 W void std::__1::vector<SpeedFeaturesStruct, std::__1::allocator<SpeedFeaturesStruct> >::__push_back_slow_path<SpeedFeaturesStruct const&>(SpeedFeaturesStruct const&)
00000000002eec1c W void std::__1::vector<android::frameworks::stats::V1_0::VendorAtom::Value, std::__1::allocator<android::frameworks::stats::V1_0::VendorAtom::Value> >::__push_back_slow_path<android::frameworks::stats::V1_0::VendorAtom::Value const&>(android::frameworks::stats::V1_0::VendorAtom::Value const&)
00000000003a4714 W std::__1::vector<std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> >, std::__1::allocator<std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> > > >::__append(unsigned long, std::__1::vector<TelemetryCounter, std::__1::allocator<TelemetryCounter> > const&)
0000000000661e20 W void std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float const&>(float const&)
0000000000661d28 W void std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float>(float&&)
000000000069c348 W void std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__push_back_slow_path<unsigned char const&>(unsigned char const&)
                 U std::__1::codecvt<char, char, mbstate_t>::id
                 U std::__1::ios_base::__set_badbit_and_consider_rethrow()
                 U std::__1::ios_base::init(void*)
                 U std::__1::ios_base::clear(unsigned int)
                 U std::__1::basic_ios<char, std::__1::char_traits<char> >::~basic_ios()
                 U std::__1::to_string(double)
                 U std::__1::to_string(float)
                 U std::__1::to_string(int)
                 U std::__1::to_string(unsigned int)
                 U std::__1::to_string(unsigned long)
00000000006876a8 W std::__1::complex<float> std::__1::operator/<float>(std::__1::complex<float> const&, std::__1::complex<float> const&)
                 U std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
00000000002de604 W std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
                 U std::bad_cast::bad_cast()
                 U std::bad_cast::~bad_cast()
                 U std::bad_alloc::bad_alloc()
                 U std::bad_alloc::~bad_alloc()
                 U std::terminate()
0000000000c2ce48 V construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_ifstream<char, std::__1::char_traits<char> >
0000000000c2cfb0 V construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ofstream<char, std::__1::char_traits<char> >
0000000000c2cc40 V construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2cbc8 V construction vtable for std::__1::basic_iostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2cc90 V construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d330 V construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d208 V typeinfo for std::logic_error
0000000000c2d220 V typeinfo for std::length_error
0000000000c2da48 V typeinfo for std::runtime_error
0000000000c2cf28 V typeinfo for std::bad_cast
0000000000c2d000 V typeinfo for std::bad_alloc
0000000000c2cf18 V typeinfo for std::exception
00000000002a3549 V typeinfo name for std::logic_error
00000000002a3538 V typeinfo name for std::length_error
00000000002a3920 V typeinfo name for std::runtime_error
000000000007e620 V typeinfo name for std::bad_cast
000000000007e639 V typeinfo name for std::bad_alloc
000000000007e62c V typeinfo name for std::exception
0000000000c2ce28 V VTT for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
0000000000c2cf90 V VTT for std::__1::basic_ofstream<char, std::__1::char_traits<char> >
0000000000c2cb78 V VTT for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d310 V VTT for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d440 D vtable for NoiseStats
0000000000c2d880 D vtable for OtfcStats_G6
0000000000c2d480 D vtable for PenStudyStats
0000000000c2d0e0 V vtable for CycleDataStats
0000000000c2cab8 D vtable for HeatAdaptorEos
0000000000c2d4c0 D vtable for UsageTimeStats
0000000000c2d500 D vtable for TouchStudyStats
0000000000c2d120 V vtable for InputSignalStats
0000000000c2d700 D vtable for OtfcStats_Incell
0000000000c2d5c0 D vtable for PenPositionStats
0000000000c2d780 D vtable for NoiseStats_Incell
0000000000c2d580 D vtable for TouchReportsStats
0000000000c2d380 D vtable for GeneralErrorsStats
0000000000c2d8c0 D vtable for CycleReactorStats_G6
0000000000c2d3c0 D vtable for GhostIndicationStats
0000000000c2d6c0 D vtable for PenStudyStats_Incell
0000000000c2d540 D vtable for ZeroForceInkingStats
0000000000c2cd60 D vtable for HidDescriptorParserEos
0000000000c2d640 D vtable for PenProcessStats_Incell
0000000000c2d800 D vtable for CfuFailuresStats_Incell
0000000000c2d680 D vtable for GeneralInfoStats_Incell
0000000000c2d018 D vtable for SurfaceHeatProcessorEos
0000000000c2d238 D vtable for PanelAlignmentReaderBase
0000000000c2d840 D vtable for PensDistanceStats_Incell
0000000000c2cd98 D vtable for PersistentStorageManager
0000000000c2d740 D vtable for GeneralErrorsStats_Incell
0000000000c2d600 D vtable for PenPostProcessStats_Incell
0000000000c2d7c0 D vtable for TouchPenStatesStats_Incell
0000000000c2d260 D vtable for PanelAlignmentReaderPersistentStorage
0000000000c2d290 D vtable for PanelAlignmentReaderPersistentStorageFullUefiStructure
0000000000c2d1d0 D vtable for TimerEos
0000000000c2d400 D vtable for OtfcStats
0000000000c2d0a0 V vtable for StatsBase
                 U vtable for __cxxabiv1::__class_type_info
                 U vtable for __cxxabiv1::__si_class_type_info
0000000000c2c158 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::ReverseDomainNames
0000000000c2c338 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryNoise
0000000000c2c838 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidG6OtfcStatistics
0000000000c2c3d8 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy1
0000000000c2c478 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy2
0000000000c2c518 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenStudy3
0000000000c2c5b8 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryUsageTime
0000000000c2c658 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchStudy
0000000000c2ca18 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryPenPosition
0000000000c2c978 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryTouchReports
0000000000c2c1f8 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGeneralErrors
0000000000c2c298 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryGhostIndication
0000000000c2c6f8 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking1
0000000000c2c798 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryZeroForceInking2
0000000000c2c8d8 D vtable for android::hardware::microsoft::surface::TouchAndPenAtoms::AndroidTelemetryG6CycleReactorStatistics
0000000000c2ce98 V vtable for std::__1::basic_filebuf<char, std::__1::char_traits<char> >
0000000000c2cdd8 V vtable for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
0000000000c2cf40 V vtable for std::__1::basic_ofstream<char, std::__1::char_traits<char> >
0000000000c2cce0 V vtable for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2cb00 V vtable for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d2c0 V vtable for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
0000000000c2d160 V vtable for std::__1::__shared_ptr_pointer<PersistentStorageManager*, std::__1::default_delete<PersistentStorageManager>, std::__1::allocator<PersistentStorageManager> >
0000000000c2d198 V vtable for std::__1::__shared_ptr_pointer<TimerEos*, std::__1::default_delete<TimerEos>, std::__1::allocator<TimerEos> >
                 U vtable for std::length_error
                 U non-virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U non-virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
                 U virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
                 U virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
                 U virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
                 U virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
                 U virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
0000000000d2a11c V AspectRatio::Instance()::mInstance
0000000000d1a638 V StatsManager::Instance()::instance
0000000000d1a2b0 V HeatAdaptorEos::Instance()::mInstance
0000000000d1b500 V MwDebugManager::Instance()::instance
0000000000d1a248 V PostureManager::Instance()::mInstance
0000000000d1a2e0 V FeedbackManager::Instance()::instance
0000000000d28318 V CnmHandlingManager::Instance()::instance
0000000000d1d630 V PenProcessingManager::Instance()::instance
0000000000d1a200 V ConfigurationDataBase::Instance()::instance
0000000000d28258 V PanelAlignmentManager::Instance()::instance
0000000000d1a2d0 V HidDescriptorParserEos::Instance()::mInstance
0000000000d2a0e0 V TouchProcessingSharedData::Instance()::instance
0000000000d2ecd8 V Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*)::m_cacheSizes
0000000000d21688 V Parser::Instance()::mInstance
0000000000d210f0 V Reporter::Instance()::instance
0000000000d2e278 V Hungarian::Instance()::instance
                 U operator delete[](void*)
                 U operator delete(void*)
                 U operator new[](unsigned long)
                 U operator new(unsigned long)
                 U __android_log_print
                 U __cxa_allocate_exception
                 U __cxa_atexit
                 U __cxa_begin_catch
                 U __cxa_end_catch
                 U __cxa_finalize
                 U __cxa_free_exception
                 U __cxa_guard_abort
                 U __cxa_guard_acquire
                 U __cxa_guard_release
                 U __cxa_pure_virtual
                 U __cxa_rethrow
                 U __cxa_throw
                 U __gxx_personality_v0
                 U __memcpy_chk
                 U __memset_chk
                 U __stack_chk_fail
                 U acosf
                 U asin
                 U atan
                 U atan2
                 U atanf
                 U chmod
                 U clock
                 U clock_gettime
                 U difftime
                 U exit
                 U expf
                 U fclose
                 U fflush
                 U fopen
0000000000d2a118 B frameIndex
                 U fread
                 U free
                 U fseek
                 U fseeko
                 U ftello
                 U fwrite
0000000000d18720 D g_DescriptorCli
0000000000c31b68 D g_EosTraceLoggingSeverity
0000000000d18718 D g_GenericCliDescriptorSize
0000000000d2a628 B g_GenericCliFuncArray
0000000000d1871c D g_GenericCliHashNumber
0000000000d2a8d8 B g_GenericCliInternalMemoryArray
0000000000d18714 D g_GenericCliVersion
0000000000d1988a D g_IsPenPressureEnabled
0000000000d2a618 B g_IsShouldSendVvToolReports
0000000000c31b72 D g_PenWindowRelativeLocationOnCycle
0000000000d2e7cc B g_dbgInjectedPenId
                 U gettimeofday
                 U hypotf
                 U localtime
                 U log2
                 U logbf
                 U malloc
                 U memcpy
                 U memmove
                 U memset
                 U pow
                 U powf
                 U rand
                 U remove
                 U scalbnf
0000000000c319f0 D scc_info_AndroidG6OtfcStatistics_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a08 D scc_info_AndroidTelemetryG6CycleReactorStatistics_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a20 D scc_info_AndroidTelemetryGeneralErrors_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a38 D scc_info_AndroidTelemetryGhostIndication_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a50 D scc_info_AndroidTelemetryNoise_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a68 D scc_info_AndroidTelemetryPenPosition_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a80 D scc_info_AndroidTelemetryPenStudy1_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31a98 D scc_info_AndroidTelemetryPenStudy2_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31ab0 D scc_info_AndroidTelemetryPenStudy3_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31ac8 D scc_info_AndroidTelemetryTouchReports_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31ae0 D scc_info_AndroidTelemetryTouchStudy_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31af8 D scc_info_AndroidTelemetryUsageTime_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31b10 D scc_info_AndroidTelemetryZeroForceInking1_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31b28 D scc_info_AndroidTelemetryZeroForceInking2_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
0000000000c31b40 D scc_info_ReverseDomainNames_vendor_2fsurface_2ftouch_2fTouchPenMw_2fHeatInfra_2fSurface_2fSurface_2fEOS_2fsrc_2fTouchAndPenAtoms_2eproto
                 U sincos
                 U srand
                 U strcmp
                 U strcpy
                 U strlen
                 U tan
                 U time
